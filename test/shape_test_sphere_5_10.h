#ifndef __getSphere_5_10_h__
#define __getSphere_5_10_h__

#include "mesh.h"

inline graphics101::Mesh getSphere_5_10() {
    graphics101::Mesh result;
    
    result.positions.reserve( 52 );
    result.face_positions.reserve( 100 );
    
    result.normals.reserve( 52 );
    result.face_normals.reserve( 100 );
    
    result.texcoords.reserve( 62 );
    result.face_texcoords.reserve( 100 );
    
    result.positions.emplace_back( 0.28173255920410156, 0, 0.95949298143386841 );
    result.positions.emplace_back( 0.087060146033763885, 0.26794359087944031, 0.95949298143386841 );
    result.positions.emplace_back( -0.22792644798755646, 0.16559822857379913, 0.95949298143386841 );
    result.positions.emplace_back( -0.22792641818523407, -0.16559827327728271, 0.95949298143386841 );
    result.positions.emplace_back( 0.08706018328666687, -0.26794359087944031, 0.95949298143386841 );
    result.positions.emplace_back( 0.54064077138900757, 0, 0.84125351905822754 );
    result.positions.emplace_back( 0.16706717014312744, 0.51417994499206543, 0.84125351905822754 );
    result.positions.emplace_back( -0.437387615442276, 0.31778064370155334, 0.84125351905822754 );
    result.positions.emplace_back( -0.43738755583763123, -0.31778073310852051, 0.84125351905822754 );
    result.positions.emplace_back( 0.1670672595500946, -0.51417988538742065, 0.84125351905822754 );
    result.positions.emplace_back( 0.75574958324432373, 0, 0.6548607349395752 );
    result.positions.emplace_back( 0.23353944718837738, 0.71876060962677002, 0.6548607349395752 );
    result.positions.emplace_back( -0.61141431331634521, 0.44421839714050293, 0.6548607349395752 );
    result.positions.emplace_back( -0.61141419410705566, -0.44421854615211487, 0.6548607349395752 );
    result.positions.emplace_back( 0.23353956639766693, -0.71876055002212524, 0.6548607349395752 );
    result.positions.emplace_back( 0.90963196754455566, 0, 0.41541504859924316 );
    result.positions.emplace_back( 0.28109171986579895, 0.86511141061782837, 0.41541504859924316 );
    result.positions.emplace_back( -0.73590779304504395, 0.5346682071685791, 0.41541504859924316 );
    result.positions.emplace_back( -0.73590767383575439, -0.53466838598251343, 0.41541504859924316 );
    result.positions.emplace_back( 0.2810918390750885, -0.86511135101318359, 0.41541504859924316 );
    result.positions.emplace_back( 0.98982143402099609, 0, 0.14231486618518829 );
    result.positions.emplace_back( 0.3058716356754303, 0.94137614965438843, 0.14231486618518829 );
    result.positions.emplace_back( -0.80078244209289551, 0.5818023681640625, 0.14231486618518829 );
    result.positions.emplace_back( -0.80078232288360596, -0.58180254697799683, 0.14231486618518829 );
    result.positions.emplace_back( 0.30587178468704224, -0.94137609004974365, 0.14231486618518829 );
    result.positions.emplace_back( 0.98982143402099609, 0, -0.14231483638286591 );
    result.positions.emplace_back( 0.3058716356754303, 0.94137614965438843, -0.14231483638286591 );
    result.positions.emplace_back( -0.80078244209289551, 0.5818023681640625, -0.14231483638286591 );
    result.positions.emplace_back( -0.80078232288360596, -0.58180254697799683, -0.14231483638286591 );
    result.positions.emplace_back( 0.30587178468704224, -0.94137609004974365, -0.14231483638286591 );
    result.positions.emplace_back( 0.90963196754455566, 0, -0.41541501879692078 );
    result.positions.emplace_back( 0.28109171986579895, 0.86511141061782837, -0.41541501879692078 );
    result.positions.emplace_back( -0.73590779304504395, 0.5346682071685791, -0.41541501879692078 );
    result.positions.emplace_back( -0.73590767383575439, -0.53466838598251343, -0.41541501879692078 );
    result.positions.emplace_back( 0.2810918390750885, -0.86511135101318359, -0.41541501879692078 );
    result.positions.emplace_back( 0.75574964284896851, 0, -0.65486067533493042 );
    result.positions.emplace_back( 0.23353946208953857, 0.71876066923141479, -0.65486067533493042 );
    result.positions.emplace_back( -0.61141437292098999, 0.44421845674514771, -0.65486067533493042 );
    result.positions.emplace_back( -0.61141425371170044, -0.44421857595443726, -0.65486067533493042 );
    result.positions.emplace_back( 0.23353958129882812, -0.71876060962677002, -0.65486067533493042 );
    result.positions.emplace_back( 0.54064077138900757, 0, -0.84125357866287231 );
    result.positions.emplace_back( 0.16706717014312744, 0.51417994499206543, -0.84125357866287231 );
    result.positions.emplace_back( -0.437387615442276, 0.31778064370155334, -0.84125357866287231 );
    result.positions.emplace_back( -0.43738755583763123, -0.31778073310852051, -0.84125357866287231 );
    result.positions.emplace_back( 0.1670672595500946, -0.51417988538742065, -0.84125357866287231 );
    result.positions.emplace_back( 0.28173261880874634, 0, -0.95949298143386841 );
    result.positions.emplace_back( 0.087060160934925079, 0.26794365048408508, -0.95949298143386841 );
    result.positions.emplace_back( -0.22792649269104004, 0.16559825837612152, -0.95949298143386841 );
    result.positions.emplace_back( -0.22792646288871765, -0.1655983030796051, -0.95949298143386841 );
    result.positions.emplace_back( 0.087060205638408661, -0.2679436206817627, -0.95949298143386841 );
    result.positions.emplace_back( 0, 0, 1 );
    result.positions.emplace_back( 0, 0, -1 );
    
    result.normals.emplace_back( 0.28173255920410156, 0, 0.95949298143386841 );
    result.normals.emplace_back( 0.087060146033763885, 0.26794359087944031, 0.95949298143386841 );
    result.normals.emplace_back( -0.22792644798755646, 0.16559822857379913, 0.95949298143386841 );
    result.normals.emplace_back( -0.22792641818523407, -0.16559827327728271, 0.95949298143386841 );
    result.normals.emplace_back( 0.08706018328666687, -0.26794359087944031, 0.95949298143386841 );
    result.normals.emplace_back( 0.54064077138900757, 0, 0.84125351905822754 );
    result.normals.emplace_back( 0.16706717014312744, 0.51417994499206543, 0.84125351905822754 );
    result.normals.emplace_back( -0.437387615442276, 0.31778064370155334, 0.84125351905822754 );
    result.normals.emplace_back( -0.43738755583763123, -0.31778073310852051, 0.84125351905822754 );
    result.normals.emplace_back( 0.1670672595500946, -0.51417988538742065, 0.84125351905822754 );
    result.normals.emplace_back( 0.75574958324432373, 0, 0.6548607349395752 );
    result.normals.emplace_back( 0.23353944718837738, 0.71876060962677002, 0.6548607349395752 );
    result.normals.emplace_back( -0.61141431331634521, 0.44421839714050293, 0.6548607349395752 );
    result.normals.emplace_back( -0.61141419410705566, -0.44421854615211487, 0.6548607349395752 );
    result.normals.emplace_back( 0.23353956639766693, -0.71876055002212524, 0.6548607349395752 );
    result.normals.emplace_back( 0.90963196754455566, 0, 0.41541504859924316 );
    result.normals.emplace_back( 0.28109171986579895, 0.86511141061782837, 0.41541504859924316 );
    result.normals.emplace_back( -0.73590779304504395, 0.5346682071685791, 0.41541504859924316 );
    result.normals.emplace_back( -0.73590767383575439, -0.53466838598251343, 0.41541504859924316 );
    result.normals.emplace_back( 0.2810918390750885, -0.86511135101318359, 0.41541504859924316 );
    result.normals.emplace_back( 0.98982143402099609, 0, 0.14231486618518829 );
    result.normals.emplace_back( 0.3058716356754303, 0.94137614965438843, 0.14231486618518829 );
    result.normals.emplace_back( -0.80078244209289551, 0.5818023681640625, 0.14231486618518829 );
    result.normals.emplace_back( -0.80078232288360596, -0.58180254697799683, 0.14231486618518829 );
    result.normals.emplace_back( 0.30587178468704224, -0.94137609004974365, 0.14231486618518829 );
    result.normals.emplace_back( 0.98982143402099609, 0, -0.14231483638286591 );
    result.normals.emplace_back( 0.3058716356754303, 0.94137614965438843, -0.14231483638286591 );
    result.normals.emplace_back( -0.80078244209289551, 0.5818023681640625, -0.14231483638286591 );
    result.normals.emplace_back( -0.80078232288360596, -0.58180254697799683, -0.14231483638286591 );
    result.normals.emplace_back( 0.30587178468704224, -0.94137609004974365, -0.14231483638286591 );
    result.normals.emplace_back( 0.90963196754455566, 0, -0.41541501879692078 );
    result.normals.emplace_back( 0.28109171986579895, 0.86511141061782837, -0.41541501879692078 );
    result.normals.emplace_back( -0.73590779304504395, 0.5346682071685791, -0.41541501879692078 );
    result.normals.emplace_back( -0.73590767383575439, -0.53466838598251343, -0.41541501879692078 );
    result.normals.emplace_back( 0.2810918390750885, -0.86511135101318359, -0.41541501879692078 );
    result.normals.emplace_back( 0.75574964284896851, 0, -0.65486067533493042 );
    result.normals.emplace_back( 0.23353946208953857, 0.71876066923141479, -0.65486067533493042 );
    result.normals.emplace_back( -0.61141437292098999, 0.44421845674514771, -0.65486067533493042 );
    result.normals.emplace_back( -0.61141425371170044, -0.44421857595443726, -0.65486067533493042 );
    result.normals.emplace_back( 0.23353958129882812, -0.71876060962677002, -0.65486067533493042 );
    result.normals.emplace_back( 0.54064077138900757, 0, -0.84125357866287231 );
    result.normals.emplace_back( 0.16706717014312744, 0.51417994499206543, -0.84125357866287231 );
    result.normals.emplace_back( -0.437387615442276, 0.31778064370155334, -0.84125357866287231 );
    result.normals.emplace_back( -0.43738755583763123, -0.31778073310852051, -0.84125357866287231 );
    result.normals.emplace_back( 0.1670672595500946, -0.51417988538742065, -0.84125357866287231 );
    result.normals.emplace_back( 0.28173261880874634, 0, -0.95949298143386841 );
    result.normals.emplace_back( 0.087060160934925079, 0.26794365048408508, -0.95949298143386841 );
    result.normals.emplace_back( -0.22792649269104004, 0.16559825837612152, -0.95949298143386841 );
    result.normals.emplace_back( -0.22792646288871765, -0.1655983030796051, -0.95949298143386841 );
    result.normals.emplace_back( 0.087060205638408661, -0.2679436206817627, -0.95949298143386841 );
    result.normals.emplace_back( 0, 0, 1 );
    result.normals.emplace_back( 0, 0, -1 );
    
    result.texcoords.emplace_back( 0, 0.90909087657928467 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.90909087657928467 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.90909087657928467 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.90909087657928467 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.90909087657928467 );
    result.texcoords.emplace_back( 1, 0.90909087657928467 );
    result.texcoords.emplace_back( 0, 0.81818181276321411 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.81818181276321411 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.81818181276321411 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.81818181276321411 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.81818181276321411 );
    result.texcoords.emplace_back( 1, 0.81818181276321411 );
    result.texcoords.emplace_back( 0, 0.72727274894714355 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.72727274894714355 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.72727274894714355 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.72727274894714355 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.72727274894714355 );
    result.texcoords.emplace_back( 1, 0.72727274894714355 );
    result.texcoords.emplace_back( 0, 0.63636362552642822 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.63636362552642822 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.63636362552642822 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.63636362552642822 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.63636362552642822 );
    result.texcoords.emplace_back( 1, 0.63636362552642822 );
    result.texcoords.emplace_back( 0, 0.54545450210571289 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.54545450210571289 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.54545450210571289 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.54545450210571289 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.54545450210571289 );
    result.texcoords.emplace_back( 1, 0.54545450210571289 );
    result.texcoords.emplace_back( 0, 0.45454543828964233 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.45454543828964233 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.45454543828964233 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.45454543828964233 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.45454543828964233 );
    result.texcoords.emplace_back( 1, 0.45454543828964233 );
    result.texcoords.emplace_back( 0, 0.36363637447357178 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.36363637447357178 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.36363637447357178 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.36363637447357178 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.36363637447357178 );
    result.texcoords.emplace_back( 1, 0.36363637447357178 );
    result.texcoords.emplace_back( 0, 0.27272725105285645 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.27272725105285645 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.27272725105285645 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.27272725105285645 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.27272725105285645 );
    result.texcoords.emplace_back( 1, 0.27272725105285645 );
    result.texcoords.emplace_back( 0, 0.18181818723678589 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.18181818723678589 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.18181818723678589 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.18181818723678589 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.18181818723678589 );
    result.texcoords.emplace_back( 1, 0.18181818723678589 );
    result.texcoords.emplace_back( 0, 0.090909063816070557 );
    result.texcoords.emplace_back( 0.20000000298023224, 0.090909063816070557 );
    result.texcoords.emplace_back( 0.40000000596046448, 0.090909063816070557 );
    result.texcoords.emplace_back( 0.60000002384185791, 0.090909063816070557 );
    result.texcoords.emplace_back( 0.80000001192092896, 0.090909063816070557 );
    result.texcoords.emplace_back( 1, 0.090909063816070557 );
    result.texcoords.emplace_back( 0.5, 1 );
    result.texcoords.emplace_back( 0.5, 0 );
    
    result.face_positions.emplace_back( 0, 5, 6 );
    result.face_positions.emplace_back( 0, 6, 1 );
    result.face_positions.emplace_back( 1, 6, 7 );
    result.face_positions.emplace_back( 1, 7, 2 );
    result.face_positions.emplace_back( 2, 7, 8 );
    result.face_positions.emplace_back( 2, 8, 3 );
    result.face_positions.emplace_back( 3, 8, 9 );
    result.face_positions.emplace_back( 3, 9, 4 );
    result.face_positions.emplace_back( 4, 9, 5 );
    result.face_positions.emplace_back( 4, 5, 0 );
    result.face_positions.emplace_back( 5, 10, 11 );
    result.face_positions.emplace_back( 5, 11, 6 );
    result.face_positions.emplace_back( 6, 11, 12 );
    result.face_positions.emplace_back( 6, 12, 7 );
    result.face_positions.emplace_back( 7, 12, 13 );
    result.face_positions.emplace_back( 7, 13, 8 );
    result.face_positions.emplace_back( 8, 13, 14 );
    result.face_positions.emplace_back( 8, 14, 9 );
    result.face_positions.emplace_back( 9, 14, 10 );
    result.face_positions.emplace_back( 9, 10, 5 );
    result.face_positions.emplace_back( 10, 15, 16 );
    result.face_positions.emplace_back( 10, 16, 11 );
    result.face_positions.emplace_back( 11, 16, 17 );
    result.face_positions.emplace_back( 11, 17, 12 );
    result.face_positions.emplace_back( 12, 17, 18 );
    result.face_positions.emplace_back( 12, 18, 13 );
    result.face_positions.emplace_back( 13, 18, 19 );
    result.face_positions.emplace_back( 13, 19, 14 );
    result.face_positions.emplace_back( 14, 19, 15 );
    result.face_positions.emplace_back( 14, 15, 10 );
    result.face_positions.emplace_back( 15, 20, 21 );
    result.face_positions.emplace_back( 15, 21, 16 );
    result.face_positions.emplace_back( 16, 21, 22 );
    result.face_positions.emplace_back( 16, 22, 17 );
    result.face_positions.emplace_back( 17, 22, 23 );
    result.face_positions.emplace_back( 17, 23, 18 );
    result.face_positions.emplace_back( 18, 23, 24 );
    result.face_positions.emplace_back( 18, 24, 19 );
    result.face_positions.emplace_back( 19, 24, 20 );
    result.face_positions.emplace_back( 19, 20, 15 );
    result.face_positions.emplace_back( 20, 25, 26 );
    result.face_positions.emplace_back( 20, 26, 21 );
    result.face_positions.emplace_back( 21, 26, 27 );
    result.face_positions.emplace_back( 21, 27, 22 );
    result.face_positions.emplace_back( 22, 27, 28 );
    result.face_positions.emplace_back( 22, 28, 23 );
    result.face_positions.emplace_back( 23, 28, 29 );
    result.face_positions.emplace_back( 23, 29, 24 );
    result.face_positions.emplace_back( 24, 29, 25 );
    result.face_positions.emplace_back( 24, 25, 20 );
    result.face_positions.emplace_back( 25, 30, 31 );
    result.face_positions.emplace_back( 25, 31, 26 );
    result.face_positions.emplace_back( 26, 31, 32 );
    result.face_positions.emplace_back( 26, 32, 27 );
    result.face_positions.emplace_back( 27, 32, 33 );
    result.face_positions.emplace_back( 27, 33, 28 );
    result.face_positions.emplace_back( 28, 33, 34 );
    result.face_positions.emplace_back( 28, 34, 29 );
    result.face_positions.emplace_back( 29, 34, 30 );
    result.face_positions.emplace_back( 29, 30, 25 );
    result.face_positions.emplace_back( 30, 35, 36 );
    result.face_positions.emplace_back( 30, 36, 31 );
    result.face_positions.emplace_back( 31, 36, 37 );
    result.face_positions.emplace_back( 31, 37, 32 );
    result.face_positions.emplace_back( 32, 37, 38 );
    result.face_positions.emplace_back( 32, 38, 33 );
    result.face_positions.emplace_back( 33, 38, 39 );
    result.face_positions.emplace_back( 33, 39, 34 );
    result.face_positions.emplace_back( 34, 39, 35 );
    result.face_positions.emplace_back( 34, 35, 30 );
    result.face_positions.emplace_back( 35, 40, 41 );
    result.face_positions.emplace_back( 35, 41, 36 );
    result.face_positions.emplace_back( 36, 41, 42 );
    result.face_positions.emplace_back( 36, 42, 37 );
    result.face_positions.emplace_back( 37, 42, 43 );
    result.face_positions.emplace_back( 37, 43, 38 );
    result.face_positions.emplace_back( 38, 43, 44 );
    result.face_positions.emplace_back( 38, 44, 39 );
    result.face_positions.emplace_back( 39, 44, 40 );
    result.face_positions.emplace_back( 39, 40, 35 );
    result.face_positions.emplace_back( 40, 45, 46 );
    result.face_positions.emplace_back( 40, 46, 41 );
    result.face_positions.emplace_back( 41, 46, 47 );
    result.face_positions.emplace_back( 41, 47, 42 );
    result.face_positions.emplace_back( 42, 47, 48 );
    result.face_positions.emplace_back( 42, 48, 43 );
    result.face_positions.emplace_back( 43, 48, 49 );
    result.face_positions.emplace_back( 43, 49, 44 );
    result.face_positions.emplace_back( 44, 49, 45 );
    result.face_positions.emplace_back( 44, 45, 40 );
    result.face_positions.emplace_back( 0, 1, 50 );
    result.face_positions.emplace_back( 1, 2, 50 );
    result.face_positions.emplace_back( 2, 3, 50 );
    result.face_positions.emplace_back( 3, 4, 50 );
    result.face_positions.emplace_back( 4, 0, 50 );
    result.face_positions.emplace_back( 46, 45, 51 );
    result.face_positions.emplace_back( 47, 46, 51 );
    result.face_positions.emplace_back( 48, 47, 51 );
    result.face_positions.emplace_back( 49, 48, 51 );
    result.face_positions.emplace_back( 45, 49, 51 );
    
    result.face_normals.emplace_back( 0, 5, 6 );
    result.face_normals.emplace_back( 0, 6, 1 );
    result.face_normals.emplace_back( 1, 6, 7 );
    result.face_normals.emplace_back( 1, 7, 2 );
    result.face_normals.emplace_back( 2, 7, 8 );
    result.face_normals.emplace_back( 2, 8, 3 );
    result.face_normals.emplace_back( 3, 8, 9 );
    result.face_normals.emplace_back( 3, 9, 4 );
    result.face_normals.emplace_back( 4, 9, 5 );
    result.face_normals.emplace_back( 4, 5, 0 );
    result.face_normals.emplace_back( 5, 10, 11 );
    result.face_normals.emplace_back( 5, 11, 6 );
    result.face_normals.emplace_back( 6, 11, 12 );
    result.face_normals.emplace_back( 6, 12, 7 );
    result.face_normals.emplace_back( 7, 12, 13 );
    result.face_normals.emplace_back( 7, 13, 8 );
    result.face_normals.emplace_back( 8, 13, 14 );
    result.face_normals.emplace_back( 8, 14, 9 );
    result.face_normals.emplace_back( 9, 14, 10 );
    result.face_normals.emplace_back( 9, 10, 5 );
    result.face_normals.emplace_back( 10, 15, 16 );
    result.face_normals.emplace_back( 10, 16, 11 );
    result.face_normals.emplace_back( 11, 16, 17 );
    result.face_normals.emplace_back( 11, 17, 12 );
    result.face_normals.emplace_back( 12, 17, 18 );
    result.face_normals.emplace_back( 12, 18, 13 );
    result.face_normals.emplace_back( 13, 18, 19 );
    result.face_normals.emplace_back( 13, 19, 14 );
    result.face_normals.emplace_back( 14, 19, 15 );
    result.face_normals.emplace_back( 14, 15, 10 );
    result.face_normals.emplace_back( 15, 20, 21 );
    result.face_normals.emplace_back( 15, 21, 16 );
    result.face_normals.emplace_back( 16, 21, 22 );
    result.face_normals.emplace_back( 16, 22, 17 );
    result.face_normals.emplace_back( 17, 22, 23 );
    result.face_normals.emplace_back( 17, 23, 18 );
    result.face_normals.emplace_back( 18, 23, 24 );
    result.face_normals.emplace_back( 18, 24, 19 );
    result.face_normals.emplace_back( 19, 24, 20 );
    result.face_normals.emplace_back( 19, 20, 15 );
    result.face_normals.emplace_back( 20, 25, 26 );
    result.face_normals.emplace_back( 20, 26, 21 );
    result.face_normals.emplace_back( 21, 26, 27 );
    result.face_normals.emplace_back( 21, 27, 22 );
    result.face_normals.emplace_back( 22, 27, 28 );
    result.face_normals.emplace_back( 22, 28, 23 );
    result.face_normals.emplace_back( 23, 28, 29 );
    result.face_normals.emplace_back( 23, 29, 24 );
    result.face_normals.emplace_back( 24, 29, 25 );
    result.face_normals.emplace_back( 24, 25, 20 );
    result.face_normals.emplace_back( 25, 30, 31 );
    result.face_normals.emplace_back( 25, 31, 26 );
    result.face_normals.emplace_back( 26, 31, 32 );
    result.face_normals.emplace_back( 26, 32, 27 );
    result.face_normals.emplace_back( 27, 32, 33 );
    result.face_normals.emplace_back( 27, 33, 28 );
    result.face_normals.emplace_back( 28, 33, 34 );
    result.face_normals.emplace_back( 28, 34, 29 );
    result.face_normals.emplace_back( 29, 34, 30 );
    result.face_normals.emplace_back( 29, 30, 25 );
    result.face_normals.emplace_back( 30, 35, 36 );
    result.face_normals.emplace_back( 30, 36, 31 );
    result.face_normals.emplace_back( 31, 36, 37 );
    result.face_normals.emplace_back( 31, 37, 32 );
    result.face_normals.emplace_back( 32, 37, 38 );
    result.face_normals.emplace_back( 32, 38, 33 );
    result.face_normals.emplace_back( 33, 38, 39 );
    result.face_normals.emplace_back( 33, 39, 34 );
    result.face_normals.emplace_back( 34, 39, 35 );
    result.face_normals.emplace_back( 34, 35, 30 );
    result.face_normals.emplace_back( 35, 40, 41 );
    result.face_normals.emplace_back( 35, 41, 36 );
    result.face_normals.emplace_back( 36, 41, 42 );
    result.face_normals.emplace_back( 36, 42, 37 );
    result.face_normals.emplace_back( 37, 42, 43 );
    result.face_normals.emplace_back( 37, 43, 38 );
    result.face_normals.emplace_back( 38, 43, 44 );
    result.face_normals.emplace_back( 38, 44, 39 );
    result.face_normals.emplace_back( 39, 44, 40 );
    result.face_normals.emplace_back( 39, 40, 35 );
    result.face_normals.emplace_back( 40, 45, 46 );
    result.face_normals.emplace_back( 40, 46, 41 );
    result.face_normals.emplace_back( 41, 46, 47 );
    result.face_normals.emplace_back( 41, 47, 42 );
    result.face_normals.emplace_back( 42, 47, 48 );
    result.face_normals.emplace_back( 42, 48, 43 );
    result.face_normals.emplace_back( 43, 48, 49 );
    result.face_normals.emplace_back( 43, 49, 44 );
    result.face_normals.emplace_back( 44, 49, 45 );
    result.face_normals.emplace_back( 44, 45, 40 );
    result.face_normals.emplace_back( 0, 1, 50 );
    result.face_normals.emplace_back( 1, 2, 50 );
    result.face_normals.emplace_back( 2, 3, 50 );
    result.face_normals.emplace_back( 3, 4, 50 );
    result.face_normals.emplace_back( 4, 0, 50 );
    result.face_normals.emplace_back( 46, 45, 51 );
    result.face_normals.emplace_back( 47, 46, 51 );
    result.face_normals.emplace_back( 48, 47, 51 );
    result.face_normals.emplace_back( 49, 48, 51 );
    result.face_normals.emplace_back( 45, 49, 51 );
    
    result.face_texcoords.emplace_back( 0, 6, 7 );
    result.face_texcoords.emplace_back( 0, 7, 1 );
    result.face_texcoords.emplace_back( 1, 7, 8 );
    result.face_texcoords.emplace_back( 1, 8, 2 );
    result.face_texcoords.emplace_back( 2, 8, 9 );
    result.face_texcoords.emplace_back( 2, 9, 3 );
    result.face_texcoords.emplace_back( 3, 9, 10 );
    result.face_texcoords.emplace_back( 3, 10, 4 );
    result.face_texcoords.emplace_back( 4, 10, 11 );
    result.face_texcoords.emplace_back( 4, 11, 5 );
    result.face_texcoords.emplace_back( 6, 12, 13 );
    result.face_texcoords.emplace_back( 6, 13, 7 );
    result.face_texcoords.emplace_back( 7, 13, 14 );
    result.face_texcoords.emplace_back( 7, 14, 8 );
    result.face_texcoords.emplace_back( 8, 14, 15 );
    result.face_texcoords.emplace_back( 8, 15, 9 );
    result.face_texcoords.emplace_back( 9, 15, 16 );
    result.face_texcoords.emplace_back( 9, 16, 10 );
    result.face_texcoords.emplace_back( 10, 16, 17 );
    result.face_texcoords.emplace_back( 10, 17, 11 );
    result.face_texcoords.emplace_back( 12, 18, 19 );
    result.face_texcoords.emplace_back( 12, 19, 13 );
    result.face_texcoords.emplace_back( 13, 19, 20 );
    result.face_texcoords.emplace_back( 13, 20, 14 );
    result.face_texcoords.emplace_back( 14, 20, 21 );
    result.face_texcoords.emplace_back( 14, 21, 15 );
    result.face_texcoords.emplace_back( 15, 21, 22 );
    result.face_texcoords.emplace_back( 15, 22, 16 );
    result.face_texcoords.emplace_back( 16, 22, 23 );
    result.face_texcoords.emplace_back( 16, 23, 17 );
    result.face_texcoords.emplace_back( 18, 24, 25 );
    result.face_texcoords.emplace_back( 18, 25, 19 );
    result.face_texcoords.emplace_back( 19, 25, 26 );
    result.face_texcoords.emplace_back( 19, 26, 20 );
    result.face_texcoords.emplace_back( 20, 26, 27 );
    result.face_texcoords.emplace_back( 20, 27, 21 );
    result.face_texcoords.emplace_back( 21, 27, 28 );
    result.face_texcoords.emplace_back( 21, 28, 22 );
    result.face_texcoords.emplace_back( 22, 28, 29 );
    result.face_texcoords.emplace_back( 22, 29, 23 );
    result.face_texcoords.emplace_back( 24, 30, 31 );
    result.face_texcoords.emplace_back( 24, 31, 25 );
    result.face_texcoords.emplace_back( 25, 31, 32 );
    result.face_texcoords.emplace_back( 25, 32, 26 );
    result.face_texcoords.emplace_back( 26, 32, 33 );
    result.face_texcoords.emplace_back( 26, 33, 27 );
    result.face_texcoords.emplace_back( 27, 33, 34 );
    result.face_texcoords.emplace_back( 27, 34, 28 );
    result.face_texcoords.emplace_back( 28, 34, 35 );
    result.face_texcoords.emplace_back( 28, 35, 29 );
    result.face_texcoords.emplace_back( 30, 36, 37 );
    result.face_texcoords.emplace_back( 30, 37, 31 );
    result.face_texcoords.emplace_back( 31, 37, 38 );
    result.face_texcoords.emplace_back( 31, 38, 32 );
    result.face_texcoords.emplace_back( 32, 38, 39 );
    result.face_texcoords.emplace_back( 32, 39, 33 );
    result.face_texcoords.emplace_back( 33, 39, 40 );
    result.face_texcoords.emplace_back( 33, 40, 34 );
    result.face_texcoords.emplace_back( 34, 40, 41 );
    result.face_texcoords.emplace_back( 34, 41, 35 );
    result.face_texcoords.emplace_back( 36, 42, 43 );
    result.face_texcoords.emplace_back( 36, 43, 37 );
    result.face_texcoords.emplace_back( 37, 43, 44 );
    result.face_texcoords.emplace_back( 37, 44, 38 );
    result.face_texcoords.emplace_back( 38, 44, 45 );
    result.face_texcoords.emplace_back( 38, 45, 39 );
    result.face_texcoords.emplace_back( 39, 45, 46 );
    result.face_texcoords.emplace_back( 39, 46, 40 );
    result.face_texcoords.emplace_back( 40, 46, 47 );
    result.face_texcoords.emplace_back( 40, 47, 41 );
    result.face_texcoords.emplace_back( 42, 48, 49 );
    result.face_texcoords.emplace_back( 42, 49, 43 );
    result.face_texcoords.emplace_back( 43, 49, 50 );
    result.face_texcoords.emplace_back( 43, 50, 44 );
    result.face_texcoords.emplace_back( 44, 50, 51 );
    result.face_texcoords.emplace_back( 44, 51, 45 );
    result.face_texcoords.emplace_back( 45, 51, 52 );
    result.face_texcoords.emplace_back( 45, 52, 46 );
    result.face_texcoords.emplace_back( 46, 52, 53 );
    result.face_texcoords.emplace_back( 46, 53, 47 );
    result.face_texcoords.emplace_back( 48, 54, 55 );
    result.face_texcoords.emplace_back( 48, 55, 49 );
    result.face_texcoords.emplace_back( 49, 55, 56 );
    result.face_texcoords.emplace_back( 49, 56, 50 );
    result.face_texcoords.emplace_back( 50, 56, 57 );
    result.face_texcoords.emplace_back( 50, 57, 51 );
    result.face_texcoords.emplace_back( 51, 57, 58 );
    result.face_texcoords.emplace_back( 51, 58, 52 );
    result.face_texcoords.emplace_back( 52, 58, 59 );
    result.face_texcoords.emplace_back( 52, 59, 53 );
    result.face_texcoords.emplace_back( 0, 1, 60 );
    result.face_texcoords.emplace_back( 1, 2, 60 );
    result.face_texcoords.emplace_back( 2, 3, 60 );
    result.face_texcoords.emplace_back( 3, 4, 60 );
    result.face_texcoords.emplace_back( 4, 5, 60 );
    result.face_texcoords.emplace_back( 55, 54, 61 );
    result.face_texcoords.emplace_back( 56, 55, 61 );
    result.face_texcoords.emplace_back( 57, 56, 61 );
    result.face_texcoords.emplace_back( 58, 57, 61 );
    result.face_texcoords.emplace_back( 59, 58, 61 );
    
    return result;
}

#endif