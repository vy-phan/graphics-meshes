#ifndef __getComputeNormalsOutputWeighted_h__
#define __getComputeNormalsOutputWeighted_h__

#include "mesh.h"

inline graphics101::Mesh getComputeNormalsOutputWeighted() {
    graphics101::Mesh result;
    
    result.positions.reserve( 225 );
    result.face_positions.reserve( 394 );
    
    result.normals.reserve( 225 );
    result.face_normals.reserve( 394 );
    
    result.texcoords.reserve( 0 );
    result.face_texcoords.reserve( 0 );
    
    result.positions.emplace_back( -1, -1, 0.5 );
    result.positions.emplace_back( -1, 1, 0.5 );
    result.positions.emplace_back( 1, 1, 0.5 );
    result.positions.emplace_back( 1, -1, 0.5 );
    result.positions.emplace_back( -0.44560998678207397, 0.34787198901176453, 1.0253934860229492 );
    result.positions.emplace_back( -1, 0, 0.5 );
    result.positions.emplace_back( 0, -1, 1.1180340051651001 );
    result.positions.emplace_back( 0, 1, 1.1180340051651001 );
    result.positions.emplace_back( 1, 0, 0.5 );
    result.positions.emplace_back( -0.37706199288368225, -0.37706199288368225, 1.0525323152542114 );
    result.positions.emplace_back( 0.24680200219154358, 0.047637999057769775, 1.0904535055160522 );
    result.positions.emplace_back( 1, -0.5, 0.5 );
    result.positions.emplace_back( 0.65351802110671997, 0.5, 0.90714621543884277 );
    result.positions.emplace_back( 0.5, 1, 1 );
    result.positions.emplace_back( 0.16120600700378418, 0.53361600637435913, 1.1063510179519653 );
    result.positions.emplace_back( -1, 0.5, 0.5 );
    result.positions.emplace_back( -0.5, 1, 1 );
    result.positions.emplace_back( -0.59368598461151123, -0.031837999820709229, 0.94738423824310303 );
    result.positions.emplace_back( -1, -0.5, 0.5 );
    result.positions.emplace_back( -0.5, -1, 1 );
    result.positions.emplace_back( 0.5, -1, 1 );
    result.positions.emplace_back( 0.25, -0.50600600242614746, 1.0897247791290283 );
    result.positions.emplace_back( 0.60752999782562256, -0.22710999846458435, 0.93856662511825562 );
    result.positions.emplace_back( -0.17492400109767914, 0.023585999384522438, 1.1042652130126953 );
    result.positions.emplace_back( 1, 0.5, 0.5 );
    result.positions.emplace_back( 1, 0.75, 0.5 );
    result.positions.emplace_back( 1, 0.25, 0.5 );
    result.positions.emplace_back( 0.51282399892807007, 0.21747800707817078, 0.99348455667495728 );
    result.positions.emplace_back( 0.75, 1, 0.82915621995925903 );
    result.positions.emplace_back( 0.625, 0.76481199264526367, 0.92702478170394897 );
    result.positions.emplace_back( 0.33668598532676697, 0.76238799095153809, 1.0661343336105347 );
    result.positions.emplace_back( 0.76367002725601196, 0.125, 0.81658321619033813 );
    result.positions.emplace_back( 0.62593197822570801, -0.61931401491165161, 0.92639577388763428 );
    result.positions.emplace_back( 0.25, 1, 1.0897247791290283 );
    result.positions.emplace_back( 0.125, 0.81977802515029907, 1.1110242605209351 );
    result.positions.emplace_back( -0.25, 0.69314199686050415, 1.0897247791290283 );
    result.positions.emplace_back( -0.080757997930049896, 0.81052601337432861, 1.1151134967803955 );
    result.positions.emplace_back( -0.25, 1, 1.0897247791290283 );
    result.positions.emplace_back( -0.053346000611782074, 0.59030997753143311, 1.1167606115341187 );
    result.positions.emplace_back( -0.018858000636100769, 0.2865079939365387, 1.1178749799728394 );
    result.positions.emplace_back( -0.24539799988269806, 0.46248999238014221, 1.0907702445983887 );
    result.positions.emplace_back( -0.44211399555206299, 0.57393801212310791, 1.0269056558609009 );
    result.positions.emplace_back( -0.71152400970458984, 0.46504399180412292, 0.8623998761177063 );
    result.positions.emplace_back( -1, 0.75, 0.5 );
    result.positions.emplace_back( -0.24909999966621399, 0.23678599298000336, 1.0899307727813721 );
    result.positions.emplace_back( -0.39371401071548462, 0.066968001425266266, 1.0464173555374146 );
    result.positions.emplace_back( -0.32357999682426453, -0.15272800624370575, 1.0701850652694702 );
    result.positions.emplace_back( -0.042307998985052109, -0.33832600712776184, 1.1172331571578979 );
    result.positions.emplace_back( -0.17252400517463684, -0.67884200811386108, 1.1046426296234131 );
    result.positions.emplace_back( -0.44357401132583618, 0.79070198535919189, 1.0262758731842041 );
    result.positions.emplace_back( -0.62389802932739258, 0.68110001087188721, 0.92776679992675781 );
    result.positions.emplace_back( -0.75, 1, 0.82915621995925903 );
    result.positions.emplace_back( -1, 0.25, 0.5 );
    result.positions.emplace_back( -0.78579998016357422, 0.125, 0.79531019926071167 );
    result.positions.emplace_back( -0.57346600294113159, 0.17900599539279938, 0.9597586989402771 );
    result.positions.emplace_back( -0.51799798011779785, -0.22492000460624695, 0.99079668521881104 );
    result.positions.emplace_back( -0.67422997951507568, -0.51099598407745361, 0.89185982942581177 );
    result.positions.emplace_back( -1, -0.25, 0.5 );
    result.positions.emplace_back( -1, -0.75, 0.5 );
    result.positions.emplace_back( -0.75, -1, 0.82915621995925903 );
    result.positions.emplace_back( -0.625, -0.76899600028991699, 0.92702478170394897 );
    result.positions.emplace_back( -0.38581600785255432, -0.78889197111129761, 1.0493550300598145 );
    result.positions.emplace_back( -0.25, -1, 1.0897247791290283 );
    result.positions.emplace_back( -0.76050001382827759, -0.20860399305820465, 0.81953632831573486 );
    result.positions.emplace_back( -0.82626897096633911, 0.63738000392913818, 0.75317960977554321 );
    result.positions.emplace_back( -0.8268280029296875, 0.8268280029296875, 0.75256592035293579 );
    result.positions.emplace_back( -0.65376001596450806, 0.85367399454116821, 0.90697181224822998 );
    result.positions.emplace_back( -0.35675200819969177, -0.58350199460983276, 1.0595885515213013 );
    result.positions.emplace_back( -0.18570399284362793, -0.47864601016044617, 1.1025035381317139 );
    result.positions.emplace_back( 0.02757599949836731, -0.56513601541519165, 1.1176939010620117 );
    result.positions.emplace_back( 0.25, -1, 1.0897247791290283 );
    result.positions.emplace_back( -0.21584999561309814, -0.30440801382064819, 1.0969998836517334 );
    result.positions.emplace_back( -0.096133999526500702, -0.15279600024223328, 1.1138932704925537 );
    result.positions.emplace_back( 0.1508139967918396, -0.18172399699687958, 1.1078155040740967 );
    result.positions.emplace_back( 0.037252001464366913, 0.01257800031453371, 1.1174131631851196 );
    result.positions.emplace_back( 0.38507801294326782, -0.14499600231647491, 1.0496261119842529 );
    result.positions.emplace_back( 0.5634620189666748, -0.0041160001419484615, 0.96566587686538696 );
    result.positions.emplace_back( 0.42938399314880371, -0.3673500120639801, 1.0322933197021484 );
    result.positions.emplace_back( 0.75544601678848267, -0.082025997340679169, 0.82419741153717041 );
    result.positions.emplace_back( 1, -0.25, 0.5 );
    result.positions.emplace_back( 0.80152601003646851, -0.27695000171661377, 0.77945882081985474 );
    result.positions.emplace_back( 0.66108399629592896, -0.42113199830055237, 0.90164732933044434 );
    result.positions.emplace_back( 0.80979597568511963, -0.54971802234649658, 0.77086341381072998 );
    result.positions.emplace_back( 1, -0.75, 0.5 );
    result.positions.emplace_back( 0.75, -1, 0.82915621995925903 );
    result.positions.emplace_back( 0.78551197052001953, -0.76323801279067993, 0.79559469223022461 );
    result.positions.emplace_back( 0.59068602323532104, -0.81882798671722412, 0.94925761222839355 );
    result.positions.emplace_back( 0.40692201256752014, -0.68349599838256836, 1.0413522720336914 );
    result.positions.emplace_back( 0.0089339995756745338, -0.76525002717971802, 1.1179982423782349 );
    result.positions.emplace_back( -0.14526799321174622, -0.85534101724624634, 1.1085563898086548 );
    result.positions.emplace_back( 0.17718400061130524, -0.67999798059463501, 1.1039048433303833 );
    result.positions.emplace_back( 0.158843994140625, -0.85245698690414429, 1.1066926717758179 );
    result.positions.emplace_back( 0.33550798892974854, -0.8452410101890564, 1.0665056705474854 );
    result.positions.emplace_back( 0.82675999402999878, 0.625, 0.75264060497283936 );
    result.positions.emplace_back( 0.81870800256729126, 0.81870800256729126, 0.76139163970947266 );
    result.positions.emplace_back( 0.40799000859260559, 0.52600598335266113, 1.0409343242645264 );
    result.positions.emplace_back( 0.27781200408935547, 0.30970001220703125, 1.0829683542251587 );
    result.positions.emplace_back( 0.82675999402999878, 0.375, 0.75264060497283936 );
    result.positions.emplace_back( 0.118306003510952, 0.17189200222492218, 1.1117570400238037 );
    result.positions.emplace_back( 0.12758000195026398, 0.32236999273300171, 1.1107310056686401 );
    result.positions.emplace_back( 0.019991999492049217, 0.44477599859237671, 1.1178551912307739 );
    result.positions.emplace_back( -0.11665599793195724, 0.39441600441932678, 1.111931324005127 );
    result.positions.emplace_back( 0.21124200522899628, 0.41735199093818665, 1.0978965759277344 );
    result.positions.emplace_back( 0.65684002637863159, 0.322052001953125, 0.9047437310218811 );
    result.positions.emplace_back( 0.50081402063369751, 0.38547199964523315, 0.99959260225296021 );
    result.positions.emplace_back( -0.54811602830886841, -0.39416998624801636, 0.97445821762084961 );
    result.positions.emplace_back( -0.51706999540328979, -0.55416601896286011, 0.99128127098083496 );
    result.positions.emplace_back( -0.70135402679443359, -0.35523200035095215, 0.87069088220596313 );
    result.positions.emplace_back( -0.83553999662399292, -0.45884200930595398, 0.74288147687911987 );
    result.positions.emplace_back( -0.81270700693130493, -0.66376602649688721, 0.76779383420944214 );
    result.positions.emplace_back( -0.84346699714660645, -0.84346699714660645, 0.73386877775192261 );
    result.positions.emplace_back( -0.45618799328804016, -0.67418199777603149, 1.0207313299179077 );
    result.positions.emplace_back( -0.62380397319793701, -0.63507002592086792, 0.9278300404548645 );
    result.positions.emplace_back( -0.71408802270889282, 0.2874700129032135, 0.86027806997299194 );
    result.positions.emplace_back( -0.86836701631546021, 0.3785020112991333, 0.70422917604446411 );
    result.positions.emplace_back( -0.5926399827003479, 0.37452200055122375, 0.94803893566131592 );
    result.positions.emplace_back( -0.57659202814102173, 0.51892602443695068, 0.95788395404815674 );
    result.positions.emplace_back( -1, -0.375, 0.5 );
    result.positions.emplace_back( -0.86586999893188477, -0.3125, 0.70729708671569824 );
    result.positions.emplace_back( 0.625, 0.91562402248382568, 0.92702478170394897 );
    result.positions.emplace_back( 0.48021200299263, 0.83867001533508301, 1.0096516609191895 );
    result.positions.emplace_back( 0.48668000102043152, 0.6725040078163147, 1.0065498352050781 );
    result.positions.emplace_back( 0.375, 1, 1.0532686710357666 );
    result.positions.emplace_back( 0.61513400077819824, 0.62980800867080688, 0.93360066413879395 );
    result.positions.emplace_back( 0.91489201784133911, 0.125, 0.64262944459915161 );
    result.positions.emplace_back( 0.83928197622299194, 0.23887999355792999, 0.73865127563476562 );
    result.positions.emplace_back( 0.86427998542785645, -0.00093400001060217619, 0.70923906564712524 );
    result.positions.emplace_back( 0.88968199491500854, -0.14860400557518005, 0.67710113525390625 );
    result.positions.emplace_back( 0.25109401345252991, 0.86577999591827393, 1.0894731283187866 );
    result.positions.emplace_back( 0.125, 1, 1.1110242605209351 );
    result.positions.emplace_back( 0.20184800028800964, 0.68413001298904419, 1.0996624231338501 );
    result.positions.emplace_back( 0.054712001234292984, 0.69036602973937988, 1.116694450378418 );
    result.positions.emplace_back( 0.28616398572921753, 0.58061802387237549, 1.0807914733886719 );
    result.positions.emplace_back( 0.019212000072002411, 0.87986397743225098, 1.1178689002990723 );
    result.positions.emplace_back( -0.23108799755573273, 0.84657198190689087, 1.0938913822174072 );
    result.positions.emplace_back( -0.360944002866745, 0.90844398736953735, 1.0581679344177246 );
    result.positions.emplace_back( -0.125, 1, 1.1110242605209351 );
    result.positions.emplace_back( -0.12473800033330917, 0.6932380199432373, 1.1110537052154541 );
    result.positions.emplace_back( -0.37681201100349426, 0.45986801385879517, 1.0526218414306641 );
    result.positions.emplace_back( -0.31070199608802795, 0.57655799388885498, 1.073994517326355 );
    result.positions.emplace_back( -0.11302600055932999, 0.16462400555610657, 1.1123062372207642 );
    result.positions.emplace_back( -0.27159398794174194, 0.10945600271224976, 1.0845444202423096 );
    result.positions.emplace_back( -0.39252001047134399, 0.21243399381637573, 1.0468658208847046 );
    result.positions.emplace_back( -0.44950199127197266, -0.071883998811244965, 1.023693323135376 );
    result.positions.emplace_back( -0.29795798659324646, -0.023506000638008118, 1.0775996446609497 );
    result.positions.emplace_back( -0.50093001127243042, 0.68192797899246216, 0.9995344877243042 );
    result.positions.emplace_back( -1, 0.125, 0.5 );
    result.positions.emplace_back( -0.51828402280807495, 0.067322000861167908, 0.99064713716506958 );
    result.positions.emplace_back( -0.66159200668334961, 0.081064000725746155, 0.90127468109130859 );
    result.positions.emplace_back( -0.77497601509094238, -0.041939999908208847, 0.80586117506027222 );
    result.positions.emplace_back( -0.89630097150802612, -0.13643799722194672, 0.66831469535827637 );
    result.positions.emplace_back( -0.39664199948310852, -0.25385200977325439, 1.0453109741210938 );
    result.positions.emplace_back( -0.625, -0.91831797361373901, 0.92702478170394897 );
    result.positions.emplace_back( -0.50002598762512207, -0.86355197429656982, 0.99998700618743896 );
    result.positions.emplace_back( -0.375, -1, 1.0532686710357666 );
    result.positions.emplace_back( -0.72147601842880249, -0.84365701675415039, 0.85409152507781982 );
    result.positions.emplace_back( -0.63539999723434448, -0.1595660001039505, 0.91992765665054321 );
    result.positions.emplace_back( -0.71018999814987183, 0.59030002355575562, 0.86349880695343018 );
    result.positions.emplace_back( -1, 0.625, 0.5 );
    result.positions.emplace_back( -0.875, 1, 0.69597053527832031 );
    result.positions.emplace_back( -1, 0.875, 0.5 );
    result.positions.emplace_back( -0.88835102319717407, 0.7319219708442688, 0.67884641885757446 );
    result.positions.emplace_back( -0.74088001251220703, 0.73235601186752319, 0.83731526136398315 );
    result.positions.emplace_back( -0.53157597780227661, 0.87923198938369751, 0.98357862234115601 );
    result.positions.emplace_back( -0.625, 1, 0.92702478170394897 );
    result.positions.emplace_back( -0.29844799637794495, -0.69650399684906006, 1.0774641036987305 );
    result.positions.emplace_back( -0.23956599831581116, -0.58272397518157959, 1.0920660495758057 );
    result.positions.emplace_back( -0.30603599548339844, -0.47429201006889343, 1.0753334760665894 );
    result.positions.emplace_back( -0.10000800341367722, -0.5735359787940979, 1.1135522127151489 );
    result.positions.emplace_back( 0.10712199658155441, -0.41645601391792297, 1.112890362739563 );
    result.positions.emplace_back( 0.25920999050140381, -0.33255401253700256, 1.0875707864761353 );
    result.positions.emplace_back( -0.209866002202034, -0.18606199324131012, 1.0981603860855103 );
    result.positions.emplace_back( 0.021242000162601471, -0.21931600570678711, 1.1178321838378906 );
    result.positions.emplace_back( 0.15523000061511993, -0.048806000500917435, 1.1072053909301758 );
    result.positions.emplace_back( -0.07164599746465683, -0.03606799989938736, 1.1157360076904297 );
    result.positions.emplace_back( 0.41438999772071838, 0.078401997685432434, 1.0384030342102051 );
    result.positions.emplace_back( 0.31040999293327332, 0.17297600209712982, 1.0740789175033569 );
    result.positions.emplace_back( 0.517333984375, -0.12908400595188141, 0.99114352464675903 );
    result.positions.emplace_back( 0.62146598100662231, 0.1257220059633255, 0.92939764261245728 );
    result.positions.emplace_back( 0.71958798170089722, -0.19341200590133667, 0.8556828498840332 );
    result.positions.emplace_back( 0.91590601205825806, -0.375, 0.64118343591690063 );
    result.positions.emplace_back( 0.68995398283004761, -0.30876201391220093, 0.87975192070007324 );
    result.positions.emplace_back( 0.55652600526809692, -0.34558999538421631, 0.96967977285385132 );
    result.positions.emplace_back( 0.51770597696304321, -0.50109398365020752, 0.99094927310943604 );
    result.positions.emplace_back( 0.38367000222206116, -0.49357399344444275, 1.0501415729522705 );
    result.positions.emplace_back( 0.69712799787521362, -0.52973401546478271, 0.87407809495925903 );
    result.positions.emplace_back( 1, -0.625, 0.5 );
    result.positions.emplace_back( 0.74273800849914551, -0.65023201704025269, 0.83566755056381226 );
    result.positions.emplace_back( 0.875, -0.89770501852035522, 0.69597053527832031 );
    result.positions.emplace_back( 0.625, -1, 0.92702478170394897 );
    result.positions.emplace_back( 0.71153998374938965, -0.87318700551986694, 0.86238670349121094 );
    result.positions.emplace_back( 0.5323219895362854, -0.70564800500869751, 0.98317509889602661 );
    result.positions.emplace_back( -0.2785240113735199, -0.86910802125930786, 1.0827854871749878 );
    result.positions.emplace_back( -0.125, -1, 1.1110242605209351 );
    result.positions.emplace_back( -0.026599999517202377, -0.88144302368164062, 1.1177175045013428 );
    result.positions.emplace_back( 0.14660200476646423, -0.56496602296829224, 1.1083807945251465 );
    result.positions.emplace_back( 0.066221997141838074, -0.6696619987487793, 1.1160711050033569 );
    result.positions.emplace_back( 0.29289799928665161, -0.62619197368621826, 1.0789859294891357 );
    result.positions.emplace_back( 0.125, -1, 1.1110242605209351 );
    result.positions.emplace_back( 0.375, -1, 1.0532686710357666 );
    result.positions.emplace_back( 0.4670499861240387, -0.8702239990234375, 1.0158072710037231 );
    result.positions.emplace_back( 1, 0.625, 0.5 );
    result.positions.emplace_back( 0.88667398691177368, 0.72451198101043701, 0.68103539943695068 );
    result.positions.emplace_back( 1, 0.875, 0.5 );
    result.positions.emplace_back( 0.875, 1, 0.69597053527832031 );
    result.positions.emplace_back( 0.74223601818084717, 0.71850800514221191, 0.83611345291137695 );
    result.positions.emplace_back( 1, 0.375, 0.5 );
    result.positions.emplace_back( 0.86828398704528809, 0.5, 0.70433151721954346 );
    result.positions.emplace_back( 0.5299760103225708, 0.50565600395202637, 0.98444169759750366 );
    result.positions.emplace_back( 0.37123000621795654, 0.40080401301383972, 1.0546033382415771 );
    result.positions.emplace_back( -0.89529401063919067, -0.56923401355743408, 0.66966307163238525 );
    result.positions.emplace_back( -1, -0.875, 0.5 );
    result.positions.emplace_back( -0.875, -1, 0.69597053527832031 );
    result.positions.emplace_back( -0.83652198314666748, 0.50618600845336914, 0.7417755126953125 );
    result.positions.emplace_back( -1, 0.375, 0.5 );
    result.positions.emplace_back( -0.86205202341079712, 0.24036200344562531, 0.71194547414779663 );
    result.positions.emplace_back( 0.36907801032066345, 0.88116598129272461, 1.0553584098815918 );
    result.positions.emplace_back( 0.0038459999486804008, 0.12984800338745117, 1.1180273294448853 );
    result.positions.emplace_back( -0.87700700759887695, 0.035264000296592712, 0.693439781665802 );
    result.positions.emplace_back( 0.3616119921207428, -0.26526200771331787, 1.057939887046814 );
    result.positions.emplace_back( 0.14300400018692017, -0.30170199275016785, 1.1088507175445557 );
    result.positions.emplace_back( 0.34700599312782288, -0.02638000063598156, 1.0628201961517334 );
    result.positions.emplace_back( 0.79238802194595337, -0.41956600546836853, 0.78874665498733521 );
    result.positions.emplace_back( 0.87410002946853638, -0.66517198085784912, 0.69710057973861694 );
    result.positions.emplace_back( 0.48311600089073181, -0.24707800149917603, 1.0082652568817139 );
    
    result.normals.emplace_back( -0.84309303760528564, 0, 0.53776776790618896 );
    result.normals.emplace_back( -0.84309303760528564, 0, 0.53776776790618896 );
    result.normals.emplace_back( 0.84309303760528564, 0, 0.53776776790618896 );
    result.normals.emplace_back( 0.83028727769851685, -0.049000386148691177, 0.55517733097076416 );
    result.normals.emplace_back( -0.39939269423484802, 0.00055975629948079586, 0.91677981615066528 );
    result.normals.emplace_back( -0.84652447700500488, 0.0040433909744024277, 0.53233456611633301 );
    result.normals.emplace_back( 0.007865401916205883, 0.0044342176988720894, 0.99995923042297363 );
    result.normals.emplace_back( -0.0056517492048442364, -0.0022781114093959332, 0.9999813437461853 );
    result.normals.emplace_back( 0.84786981344223022, -0.0051561025902628899, 0.53017932176589966 );
    result.normals.emplace_back( -0.34331062436103821, -0.0022825701162219048, 0.93921911716461182 );
    result.normals.emplace_back( 0.215266153216362, -0.0056633912026882172, 0.9765390157699585 );
    result.normals.emplace_back( 0.83237135410308838, -0.020955121144652367, 0.55382198095321655 );
    result.normals.emplace_back( 0.60522961616516113, 0.0034323956351727247, 0.79604357481002808 );
    result.normals.emplace_back( 0.46049082279205322, 0.018196027725934982, 0.88747793436050415 );
    result.normals.emplace_back( 0.12866979837417603, -0.0033359292428940535, 0.99168193340301514 );
    result.normals.emplace_back( -0.83278441429138184, 0.0065201004035770893, 0.55355900526046753 );
    result.normals.emplace_back( -0.43184006214141846, 0.011991654522716999, 0.9018704891204834 );
    result.normals.emplace_back( -0.53513503074645996, -0.0084986304864287376, 0.84472370147705078 );
    result.normals.emplace_back( -0.83817827701568604, 0.013073671609163284, 0.54523962736129761 );
    result.normals.emplace_back( -0.45923250913619995, -0.02064485102891922, 0.88807612657546997 );
    result.normals.emplace_back( 0.44996920228004456, -0.0056780180893838406, 0.89302611351013184 );
    result.normals.emplace_back( 0.22251319885253906, 0.0010377916041761637, 0.9749290943145752 );
    result.normals.emplace_back( 0.55025398731231689, 0.029104782268404961, 0.83448994159698486 );
    result.normals.emplace_back( -0.16166466474533081, 0.0025196003261953592, 0.98684245347976685 );
    result.normals.emplace_back( 0.84050416946411133, 0, 0.54180508852005005 );
    result.normals.emplace_back( 0.84762167930603027, 0, 0.53060108423233032 );
    result.normals.emplace_back( 0.83793354034423828, 0.014788441359996796, 0.54557186365127563 );
    result.normals.emplace_back( 0.45007827877998352, -0.006971113383769989, 0.89296185970306396 );
    result.normals.emplace_back( 0.65894824266433716, 0.0024207797832787037, 0.75218433141708374 );
    result.normals.emplace_back( 0.56749457120895386, 0.0075373570434749126, 0.82334268093109131 );
    result.normals.emplace_back( 0.30979812145233154, -0.007298655342310667, 0.95077437162399292 );
    result.normals.emplace_back( 0.68480813503265381, 0.0063842763192951679, 0.72869545221328735 );
    result.normals.emplace_back( 0.56390380859375, 0.0065205874852836132, 0.82581478357315063 );
    result.normals.emplace_back( 0.2234664112329483, 0.00059030938427895308, 0.97471141815185547 );
    result.normals.emplace_back( 0.11619647592306137, 0.0010461978381499648, 0.99322569370269775 );
    result.normals.emplace_back( -0.23764102160930634, -0.009978070855140686, 0.97130179405212402 );
    result.normals.emplace_back( -0.073890231549739838, -0.0022810278460383415, 0.99726372957229614 );
    result.normals.emplace_back( -0.23755297064781189, 0.018725303933024406, 0.97119402885437012 );
    result.normals.emplace_back( -0.054338362067937851, 0.0023421165533363819, 0.99851983785629272 );
    result.normals.emplace_back( -0.0084467865526676178, 0.00058801332488656044, 0.99996411800384521 );
    result.normals.emplace_back( -0.20964798331260681, 0.013113193213939667, 0.97768902778625488 );
    result.normals.emplace_back( -0.39230257272720337, 0.0029808531980961561, 0.91983139514923096 );
    result.normals.emplace_back( -0.64304465055465698, -0.0019774341490119696, 0.76582616567611694 );
    result.normals.emplace_back( -0.84827536344528198, 0, 0.52955538034439087 );
    result.normals.emplace_back( -0.22711706161499023, 0.00075398053741082549, 0.97386717796325684 );
    result.normals.emplace_back( -0.35338115692138672, -2.1883937733946368e-05, 0.93547946214675903 );
    result.normals.emplace_back( -0.29154959321022034, -0.0025231025647372007, 0.95655244588851929 );
    result.normals.emplace_back( -0.038425508886575699, 1.552403591631446e-05, 0.99926143884658813 );
    result.normals.emplace_back( -0.14713418483734131, -0.0025997015181928873, 0.98911315202713013 );
    result.normals.emplace_back( -0.37190946936607361, -0.0085503263399004936, 0.9282296895980835 );
    result.normals.emplace_back( -0.55865019559860229, -0.00080405245535075665, 0.82940292358398438 );
    result.normals.emplace_back( -0.67243701219558716, -0.0046204510144889355, 0.74013996124267578 );
    result.normals.emplace_back( -0.8389771580696106, -0.0013132010353729129, 0.54416513442993164 );
    result.normals.emplace_back( -0.70054936408996582, 0.0028957922477275133, 0.71359807252883911 );
    result.normals.emplace_back( -0.50917530059814453, 0.0011789553100243211, 0.86066198348999023 );
    result.normals.emplace_back( -0.47355270385742188, 0.00080651417374610901, 0.88076508045196533 );
    result.normals.emplace_back( -0.61045306921005249, -0.0047782184556126595, 0.7920379638671875 );
    result.normals.emplace_back( -0.8444373607635498, -0.0065451003611087799, 0.53561419248580933 );
    result.normals.emplace_back( -0.83155834674835205, -0.0072678118012845516, 0.55538982152938843 );
    result.normals.emplace_back( -0.66565185785293579, -0.024040034040808678, 0.74587517976760864 );
    result.normals.emplace_back( -0.56265056133270264, 0.011411810293793678, 0.82661610841751099 );
    result.normals.emplace_back( -0.34607324004173279, 0.0025931035634130239, 0.93820393085479736 );
    result.normals.emplace_back( -0.22266353666782379, -0.0035184987355023623, 0.97488903999328613 );
    result.normals.emplace_back( -0.68671518564224243, -0.0023439677897840738, 0.72692275047302246 );
    result.normals.emplace_back( -0.75248408317565918, 0.0016966069815680385, 0.65860825777053833 );
    result.normals.emplace_back( -0.7455059289932251, -0.005440552718937397, 0.6664767861366272 );
    result.normals.emplace_back( -0.59444218873977661, 0.00084882549708709121, 0.8041379451751709 );
    result.normals.emplace_back( -0.33523422479629517, 0.011472156271338463, 0.94206494092941284 );
    result.normals.emplace_back( -0.16330026090145111, 0.0021414824295789003, 0.98657411336898804 );
    result.normals.emplace_back( 0.017167139798402786, -0.0070150131359696388, 0.99982798099517822 );
    result.normals.emplace_back( 0.22388528287410736, 0.0017028170404955745, 0.97461408376693726 );
    result.normals.emplace_back( -0.19449760019779205, -0.00088368583237752318, 0.98090261220932007 );
    result.normals.emplace_back( -0.087792031466960907, -0.0047037089243531227, 0.99612772464752197 );
    result.normals.emplace_back( 0.15176518261432648, 0.004339960403740406, 0.98840707540512085 );
    result.normals.emplace_back( 0.047519464045763016, -4.6941862819949165e-05, 0.99887025356292725 );
    result.normals.emplace_back( 0.33298701047897339, 0.0058644679374992847, 0.94291317462921143 );
    result.normals.emplace_back( 0.50758242607116699, -0.0078388219699263573, 0.86156755685806274 );
    result.normals.emplace_back( 0.37968426942825317, -0.00059908872935920954, 0.92511594295501709 );
    result.normals.emplace_back( 0.66950398683547974, -0.01250807661563158, 0.74270319938659668 );
    result.normals.emplace_back( 0.84040546417236328, 0.0033478827681392431, 0.54194784164428711 );
    result.normals.emplace_back( 0.73214757442474365, 0.014594042673707008, 0.68098974227905273 );
    result.normals.emplace_back( 0.58775955438613892, -0.0063165635801851749, 0.80901098251342773 );
    result.normals.emplace_back( 0.74371635913848877, -0.0028923223726451397, 0.66848897933959961 );
    result.normals.emplace_back( 0.83347415924072266, -0.0013045001542195678, 0.55255693197250366 );
    result.normals.emplace_back( 0.69405275583267212, -0.021990535780787468, 0.71958810091018677 );
    result.normals.emplace_back( 0.71229672431945801, -0.0067652431316673756, 0.70184594392776489 );
    result.normals.emplace_back( 0.54035389423370361, 0.0013137011555954814, 0.84143674373626709 );
    result.normals.emplace_back( 0.36827060580253601, 0.0014927852898836136, 0.92971748113632202 );
    result.normals.emplace_back( 0.0014925823779776692, -0.0038748958613723516, 0.99999135732650757 );
    result.normals.emplace_back( -0.12811890244483948, 0.0045769112184643745, 0.99174827337265015 );
    result.normals.emplace_back( 0.16708160936832428, -0.00098125915974378586, 0.98594260215759277 );
    result.normals.emplace_back( 0.14218141138553619, 0.00053401017794385552, 0.98984044790267944 );
    result.normals.emplace_back( 0.2921980619430542, 0.00070422713179141283, 0.95635753870010376 );
    result.normals.emplace_back( 0.7372930645942688, -0.008106268011033535, 0.67552447319030762 );
    result.normals.emplace_back( 0.73483633995056152, -0.0034277501981705427, 0.67823588848114014 );
    result.normals.emplace_back( 0.36348637938499451, 0.012304525822401047, 0.93151825666427612 );
    result.normals.emplace_back( 0.25801652669906616, -0.0061474498361349106, 0.96612089872360229 );
    result.normals.emplace_back( 0.74067431688308716, 0.0041641318239271641, 0.67185127735137939 );
    result.normals.emplace_back( 0.11727439612150192, -0.0023306484799832106, 0.99309676885604858 );
    result.normals.emplace_back( 0.11522610485553741, 0.0025545933749526739, 0.993336021900177 );
    result.normals.emplace_back( 0.028639338910579681, 0.0067672310397028923, 0.99956691265106201 );
    result.normals.emplace_back( -0.10863005369901657, 0.0056211329065263271, 0.99406629800796509 );
    result.normals.emplace_back( 0.1860281378030777, -0.0015013338997960091, 0.98254334926605225 );
    result.normals.emplace_back( 0.5969356894493103, 0.0043026870116591454, 0.80227756500244141 );
    result.normals.emplace_back( 0.45469042658805847, -0.0033493426162749529, 0.89064329862594604 );
    result.normals.emplace_back( -0.49364557862281799, 0.0047265891917049885, 0.86965042352676392 );
    result.normals.emplace_back( -0.46002376079559326, -0.00060895411297678947, 0.88790637254714966 );
    result.normals.emplace_back( -0.63037139177322388, -0.0026619196869432926, 0.77628916501998901 );
    result.normals.emplace_back( -0.75221800804138184, 0.0093752108514308929, 0.65884768962860107 );
    result.normals.emplace_back( -0.72917675971984863, -0.0061468742787837982, 0.68429785966873169 );
    result.normals.emplace_back( -0.77194499969482422, 0.010425080545246601, 0.63560384511947632 );
    result.normals.emplace_back( -0.41460597515106201, 0.0032031580340117216, 0.90999537706375122 );
    result.normals.emplace_back( -0.56585443019866943, -0.0047201602719724178, 0.82449162006378174 );
    result.normals.emplace_back( -0.64636868238449097, 0.0039595901034772396, 0.76301491260528564 );
    result.normals.emplace_back( -0.78383076190948486, 0.0052562206983566284, 0.62095242738723755 );
    result.normals.emplace_back( -0.52976757287979126, -0.00070724420947954059, 0.84814256429672241 );
    result.normals.emplace_back( -0.51259291172027588, -0.004021928645670414, 0.85862225294113159 );
    result.normals.emplace_back( -0.83394765853881836, -0.0065005314536392689, 0.55180525779724121 );
    result.normals.emplace_back( -0.78259181976318359, -0.010496840812265873, 0.62244665622711182 );
    result.normals.emplace_back( 0.56933605670928955, 0.033070739358663559, 0.82143950462341309 );
    result.normals.emplace_back( 0.43403932452201843, -0.0020046811550855637, 0.90089178085327148 );
    result.normals.emplace_back( 0.42948991060256958, 0.0026546407025307417, 0.90306770801544189 );
    result.normals.emplace_back( 0.33848881721496582, -0.00032099478994496167, 0.94097030162811279 );
    result.normals.emplace_back( 0.56384336948394775, -0.00010992358147632331, 0.8258817195892334 );
    result.normals.emplace_back( 0.81843811273574829, 0.0099585894495248795, 0.57450830936431885 );
    result.normals.emplace_back( 0.75873959064483643, 0.0056056072935461998, 0.65136998891830444 );
    result.normals.emplace_back( 0.77816486358642578, 0.0023120057303458452, 0.62805569171905518 );
    result.normals.emplace_back( 0.80063289403915405, -0.028350725769996643, 0.59848403930664062 );
    result.normals.emplace_back( 0.22282508015632629, 0.0015063340542837977, 0.97485727071762085 );
    result.normals.emplace_back( 0.1142461970448494, 0.0019254179205745459, 0.99345064163208008 );
    result.normals.emplace_back( 0.17825622856616974, 0.00066459045046940446, 0.98398387432098389 );
    result.normals.emplace_back( 0.043930675834417343, -0.0092412633821368217, 0.99899184703826904 );
    result.normals.emplace_back( 0.26635593175888062, 0.0024858235847204924, 0.9638715386390686 );
    result.normals.emplace_back( 0.013601922430098057, 0.0016572212334722281, 0.99990606307983398 );
    result.normals.emplace_back( -0.21568363904953003, -0.0052130594849586487, 0.97644937038421631 );
    result.normals.emplace_back( -0.32745069265365601, 0.011132678017020226, 0.94480270147323608 );
    result.normals.emplace_back( -0.10955953598022461, -0.00094198761507868767, 0.993979811668396 );
    result.normals.emplace_back( -0.11405163258314133, -0.016387682408094406, 0.99333959817886353 );
    result.normals.emplace_back( -0.34572330117225647, -0.0033279391936957836, 0.93833059072494507 );
    result.normals.emplace_back( -0.27109959721565247, 0.017244227230548859, 0.96239686012268066 );
    result.normals.emplace_back( -0.10879702121019363, 0.00079418608220294118, 0.9940636157989502 );
    result.normals.emplace_back( -0.24082690477371216, 0.0035483401734381914, 0.97056162357330322 );
    result.normals.emplace_back( -0.35207396745681763, 0.0098524857312440872, 0.9359203577041626 );
    result.normals.emplace_back( -0.40744930505752563, -0.0013480908237397671, 0.91322684288024902 );
    result.normals.emplace_back( -0.27119612693786621, -0.00057701073819771409, 0.96252399682998657 );
    result.normals.emplace_back( -0.43362584710121155, -0.0017955052899196744, 0.90109121799468994 );
    result.normals.emplace_back( -0.84110444784164429, 0.0032011154107749462, 0.54086333513259888 );
    result.normals.emplace_back( -0.46449795365333557, 0.0043687890283763409, 0.88556331396102905 );
    result.normals.emplace_back( -0.59493577480316162, -0.0088009228929877281, 0.80372506380081177 );
    result.normals.emplace_back( -0.68962758779525757, -0.0044158259406685829, 0.72415071725845337 );
    result.normals.emplace_back( -0.8052409291267395, -0.0026359772309660912, 0.5929419994354248 );
    result.normals.emplace_back( -0.35231587290763855, -0.0075791915878653526, 0.93585050106048584 );
    result.normals.emplace_back( -0.55825865268707275, -0.045240998268127441, 0.82843255996704102 );
    result.normals.emplace_back( -0.45177909731864929, 0.0017944093560799956, 0.89212805032730103 );
    result.normals.emplace_back( -0.33887419104576111, -0.0031116455793380737, 0.9408266544342041 );
    result.normals.emplace_back( -0.64839392900466919, 0.011803326196968555, 0.76121348142623901 );
    result.normals.emplace_back( -0.56712734699249268, 0.0030059840064495802, 0.82362461090087891 );
    result.normals.emplace_back( -0.63785296678543091, -0.0044140098616480827, 0.77014553546905518 );
    result.normals.emplace_back( -0.83418667316436768, -0.010592597536742687, 0.551380455493927 );
    result.normals.emplace_back( -0.79663312435150146, -0.014839829877018929, 0.60428094863891602 );
    result.normals.emplace_back( -0.83833777904510498, 0.0016583278775215149, 0.54514873027801514 );
    result.normals.emplace_back( -0.80483108758926392, -0.004876195453107357, 0.59348380565643311 );
    result.normals.emplace_back( -0.6689683198928833, 0.011703144758939743, 0.74319875240325928 );
    result.normals.emplace_back( -0.47248199582099915, 0.0030463982839137316, 0.88133507966995239 );
    result.normals.emplace_back( -0.56071972846984863, 0.005705743096768856, 0.82798600196838379 );
    result.normals.emplace_back( -0.27078309655189514, 0.00051820039516314864, 0.96264022588729858 );
    result.normals.emplace_back( -0.21182526648044586, -0.00019324505410622805, 0.97730755805969238 );
    result.normals.emplace_back( -0.28623777627944946, 0.00055340537801384926, 0.95815843343734741 );
    result.normals.emplace_back( -0.086255930364131927, -0.0047105923295021057, 0.99626195430755615 );
    result.normals.emplace_back( 0.096411235630512238, 0.0070629362016916275, 0.99531650543212891 );
    result.normals.emplace_back( 0.23625388741493225, 0.0077263112179934978, 0.97166067361831665 );
    result.normals.emplace_back( -0.18696075677871704, -0.0014661323511973023, 0.98236626386642456 );
    result.normals.emplace_back( 0.026181560009717941, -0.0052442718297243118, 0.99964350461959839 );
    result.normals.emplace_back( 0.14846441149711609, 0.010948201641440392, 0.98885715007781982 );
    result.normals.emplace_back( -0.061549622565507889, 0.0007581626414321363, 0.99810373783111572 );
    result.normals.emplace_back( 0.38215115666389465, -0.0044247829355299473, 0.92408931255340576 );
    result.normals.emplace_back( 0.2853122353553772, 0.0088315326720476151, 0.95839387178421021 );
    result.normals.emplace_back( 0.47443974018096924, 0.014064760878682137, 0.88017559051513672 );
    result.normals.emplace_back( 0.55452394485473633, -0.0068101631477475166, 0.83213996887207031 );
    result.normals.emplace_back( 0.63980072736740112, 0.022120475769042969, 0.76822245121002197 );
    result.normals.emplace_back( 0.81628060340881348, 0.015439570881426334, 0.57744914293289185 );
    result.normals.emplace_back( 0.61826348304748535, -0.0033202823251485825, 0.78596389293670654 );
    result.normals.emplace_back( 0.50147682428359985, -0.0021451008506119251, 0.86516839265823364 );
    result.normals.emplace_back( 0.4701673686504364, 3.2719653972890228e-05, 0.88257730007171631 );
    result.normals.emplace_back( 0.3427746593952179, 0.0026520860847085714, 0.93941396474838257 );
    result.normals.emplace_back( 0.61897027492523193, 0.0040971753187477589, 0.78540366888046265 );
    result.normals.emplace_back( 0.83110380172729492, 0.013745392672717571, 0.55594748258590698 );
    result.normals.emplace_back( 0.663124680519104, -0.010017445310950279, 0.74844193458557129 );
    result.normals.emplace_back( 0.79054629802703857, -0.03824242576956749, 0.61120712757110596 );
    result.normals.emplace_back( 0.56058502197265625, -0.006342724896967411, 0.82807260751724243 );
    result.normals.emplace_back( 0.64008867740631104, 0.020969687029719353, 0.76801484823226929 );
    result.normals.emplace_back( 0.47040960192680359, 0.0018904237076640129, 0.88244622945785522 );
    result.normals.emplace_back( -0.24569711089134216, 0.00036236539017409086, 0.96934664249420166 );
    result.normals.emplace_back( -0.11233615875244141, -0.0041220183484256268, 0.99366176128387451 );
    result.normals.emplace_back( -0.015711812302470207, 0.0048279627226293087, 0.99986493587493896 );
    result.normals.emplace_back( 0.13598908483982086, 0.0010813408298417926, 0.99070972204208374 );
    result.normals.emplace_back( 0.053816743195056915, 0.00070161203620955348, 0.99855053424835205 );
    result.normals.emplace_back( 0.25745335221290588, -0.0013457515742629766, 0.96628981828689575 );
    result.normals.emplace_back( 0.10435246676206589, 0.0049982001073658466, 0.99452781677246094 );
    result.normals.emplace_back( 0.33698880672454834, -0.0044392906129360199, 0.94149821996688843 );
    result.normals.emplace_back( 0.41683802008628845, 0.00072929845191538334, 0.90898042917251587 );
    result.normals.emplace_back( 0.83861321210861206, -0.0040643536485731602, 0.54471224546432495 );
    result.normals.emplace_back( 0.8039659857749939, -0.0012470724759623408, 0.59467399120330811 );
    result.normals.emplace_back( 0.83701872825622559, 0.00096451700665056705, 0.54717344045639038 );
    result.normals.emplace_back( 0.7967991828918457, -0.018779106438159943, 0.60395240783691406 );
    result.normals.emplace_back( 0.6592680811882019, 8.4625513409264386e-05, 0.75190800428390503 );
    result.normals.emplace_back( 0.83197075128555298, -0.0058807726018130779, 0.55478823184967041 );
    result.normals.emplace_back( 0.78297138214111328, -8.3600211198131547e-09, 0.62205773591995239 );
    result.normals.emplace_back( 0.48051977157592773, -0.0058036800473928452, 0.8769647479057312 );
    result.normals.emplace_back( 0.33054384589195251, -0.014064372517168522, 0.94368582963943481 );
    result.normals.emplace_back( -0.81466323137283325, -0.00015934558177832514, 0.57993423938751221 );
    result.normals.emplace_back( -0.83559811115264893, 0.0065346304327249527, 0.54930233955383301 );
    result.normals.emplace_back( -0.79560685157775879, 0.0073563149198889732, 0.60576868057250977 );
    result.normals.emplace_back( -0.76037085056304932, 0.00027258944464847445, 0.64948916435241699 );
    result.normals.emplace_back( -0.84053617715835571, 0, 0.5417555570602417 );
    result.normals.emplace_back( -0.77939993143081665, 0.0065566617995500565, 0.62649238109588623 );
    result.normals.emplace_back( 0.33386000990867615, -0.00073904555756598711, 0.94262242317199707 );
    result.normals.emplace_back( 0.0034761845599859953, 0.0038742520846426487, 0.99998646974563599 );
    result.normals.emplace_back( -0.79504746198654175, 0.0012513317633420229, 0.60654592514038086 );
    result.normals.emplace_back( 0.30835169553756714, 0.0026643557939678431, 0.95126867294311523 );
    result.normals.emplace_back( 0.12162300944328308, -0.0057298620231449604, 0.99255985021591187 );
    result.normals.emplace_back( 0.31147500872612, -0.0039104856550693512, 0.95024633407592773 );
    result.normals.emplace_back( 0.71211338043212891, 0.0015369126340374351, 0.70206272602081299 );
    result.normals.emplace_back( 0.80253410339355469, -0.015063815750181675, 0.59641605615615845 );
    result.normals.emplace_back( 0.43265563249588013, 0.0008514956571161747, 0.90155887603759766 );
    
    
    result.face_positions.emplace_back( 146, 5, 218 );
    result.face_positions.emplace_back( 192, 89, 48 );
    result.face_positions.emplace_back( 121, 120, 30 );
    result.face_positions.emplace_back( 171, 23, 144 );
    result.face_positions.emplace_back( 4, 115, 54 );
    result.face_positions.emplace_back( 64, 213, 157 );
    result.face_positions.emplace_back( 210, 108, 18 );
    result.face_positions.emplace_back( 38, 137, 139 );
    result.face_positions.emplace_back( 82, 185, 187 );
    result.face_positions.emplace_back( 201, 207, 24 );
    result.face_positions.emplace_back( 178, 78, 31 );
    result.face_positions.emplace_back( 143, 55, 151 );
    result.face_positions.emplace_back( 68, 168, 47 );
    result.face_positions.emplace_back( 127, 179, 80 );
    result.face_positions.emplace_back( 119, 28, 13 );
    result.face_positions.emplace_back( 34, 130, 128 );
    result.face_positions.emplace_back( 36, 137, 131 );
    result.face_positions.emplace_back( 204, 28, 94 );
    result.face_positions.emplace_back( 27, 104, 209 );
    result.face_positions.emplace_back( 105, 55, 107 );
    result.face_positions.emplace_back( 49, 135, 163 );
    result.face_positions.emplace_back( 36, 131, 133 );
    result.face_positions.emplace_back( 71, 171, 46 );
    result.face_positions.emplace_back( 196, 90, 195 );
    result.face_positions.emplace_back( 105, 151, 55 );
    result.face_positions.emplace_back( 9, 151, 105 );
    result.face_positions.emplace_back( 80, 179, 181 );
    result.face_positions.emplace_back( 221, 76, 175 );
    result.face_positions.emplace_back( 219, 77, 224 );
    result.face_positions.emplace_back( 147, 143, 45 );
    result.face_positions.emplace_back( 140, 217, 39 );
    result.face_positions.emplace_back( 31, 125, 103 );
    result.face_positions.emplace_back( 205, 94, 29 );
    result.face_positions.emplace_back( 25, 202, 201 );
    result.face_positions.emplace_back( 206, 24, 207 );
    result.face_positions.emplace_back( 175, 76, 178 );
    result.face_positions.emplace_back( 12, 104, 103 );
    result.face_positions.emplace_back( 221, 177, 76 );
    result.face_positions.emplace_back( 29, 119, 120 );
    result.face_positions.emplace_back( 97, 207, 12 );
    result.face_positions.emplace_back( 129, 7, 133 );
    result.face_positions.emplace_back( 130, 132, 30 );
    result.face_positions.emplace_back( 8, 26, 124 );
    result.face_positions.emplace_back( 90, 91, 92 );
    result.face_positions.emplace_back( 82, 186, 11 );
    result.face_positions.emplace_back( 137, 134, 35 );
    result.face_positions.emplace_back( 120, 13, 216 );
    result.face_positions.emplace_back( 132, 130, 14 );
    result.face_positions.emplace_back( 138, 41, 116 );
    result.face_positions.emplace_back( 130, 131, 14 );
    result.face_positions.emplace_back( 135, 49, 134 );
    result.face_positions.emplace_back( 134, 137, 36 );
    result.face_positions.emplace_back( 139, 41, 138 );
    result.face_positions.emplace_back( 136, 37, 134 );
    result.face_positions.emplace_back( 101, 44, 140 );
    result.face_positions.emplace_back( 74, 98, 217 );
    result.face_positions.emplace_back( 101, 38, 40 );
    result.face_positions.emplace_back( 40, 138, 44 );
    result.face_positions.emplace_back( 38, 101, 100 );
    result.face_positions.emplace_back( 139, 35, 145 );
    result.face_positions.emplace_back( 15, 114, 213 );
    result.face_positions.emplace_back( 148, 149, 17 );
    result.face_positions.emplace_back( 116, 115, 4 );
    result.face_positions.emplace_back( 116, 50, 157 );
    result.face_positions.emplace_back( 66, 65, 162 );
    result.face_positions.emplace_back( 147, 142, 54 );
    result.face_positions.emplace_back( 44, 141, 140 );
    result.face_positions.emplace_back( 141, 45, 144 );
    result.face_positions.emplace_back( 45, 141, 142 );
    result.face_positions.emplace_back( 9, 167, 71 );
    result.face_positions.emplace_back( 141, 144, 23 );
    result.face_positions.emplace_back( 106, 167, 9 );
    result.face_positions.emplace_back( 74, 172, 173 );
    result.face_positions.emplace_back( 67, 106, 111 );
    result.face_positions.emplace_back( 88, 196, 168 );
    result.face_positions.emplace_back( 49, 35, 134 );
    result.face_positions.emplace_back( 51, 65, 66 );
    result.face_positions.emplace_back( 159, 1, 160 );
    result.face_positions.emplace_back( 145, 50, 116 );
    result.face_positions.emplace_back( 148, 147, 54 );
    result.face_positions.emplace_back( 161, 160, 43 );
    result.face_positions.emplace_back( 114, 113, 42 );
    result.face_positions.emplace_back( 113, 114, 215 );
    result.face_positions.emplace_back( 54, 115, 113 );
    result.face_positions.emplace_back( 148, 54, 113 );
    result.face_positions.emplace_back( 149, 63, 156 );
    result.face_positions.emplace_back( 150, 63, 149 );
    result.face_positions.emplace_back( 212, 59, 110 );
    result.face_positions.emplace_back( 106, 67, 167 );
    result.face_positions.emplace_back( 109, 210, 58 );
    result.face_positions.emplace_back( 55, 143, 156 );
    result.face_positions.emplace_back( 19, 152, 59 );
    result.face_positions.emplace_back( 155, 109, 110 );
    result.face_positions.emplace_back( 152, 153, 60 );
    result.face_positions.emplace_back( 109, 56, 108 );
    result.face_positions.emplace_back( 194, 89, 193 );
    result.face_positions.emplace_back( 111, 165, 67 );
    result.face_positions.emplace_back( 18, 108, 117 );
    result.face_positions.emplace_back( 154, 61, 153 );
    result.face_positions.emplace_back( 213, 158, 15 );
    result.face_positions.emplace_back( 161, 65, 160 );
    result.face_positions.emplace_back( 65, 161, 162 );
    result.face_positions.emplace_back( 50, 145, 163 );
    result.face_positions.emplace_back( 164, 51, 66 );
    result.face_positions.emplace_back( 167, 166, 68 );
    result.face_positions.emplace_back( 9, 105, 106 );
    result.face_positions.emplace_back( 68, 166, 168 );
    result.face_positions.emplace_back( 68, 47, 71 );
    result.face_positions.emplace_back( 198, 70, 91 );
    result.face_positions.emplace_back( 195, 169, 69 );
    result.face_positions.emplace_back( 197, 92, 87 );
    result.face_positions.emplace_back( 200, 191, 87 );
    result.face_positions.emplace_back( 71, 47, 72 );
    result.face_positions.emplace_back( 151, 71, 46 );
    result.face_positions.emplace_back( 172, 72, 47 );
    result.face_positions.emplace_back( 172, 74, 174 );
    result.face_positions.emplace_back( 69, 169, 47 );
    result.face_positions.emplace_back( 73, 170, 219 );
    result.face_positions.emplace_back( 74, 10, 98 );
    result.face_positions.emplace_back( 23, 72, 174 );
    result.face_positions.emplace_back( 221, 173, 73 );
    result.face_positions.emplace_back( 169, 21, 170 );
    result.face_positions.emplace_back( 76, 177, 78 );
    result.face_positions.emplace_back( 178, 76, 78 );
    result.face_positions.emplace_back( 184, 87, 183 );
    result.face_positions.emplace_back( 183, 81, 182 );
    result.face_positions.emplace_back( 79, 127, 80 );
    result.face_positions.emplace_back( 78, 127, 126 );
    result.face_positions.emplace_back( 81, 185, 222 );
    result.face_positions.emplace_back( 127, 8, 126 );
    result.face_positions.emplace_back( 11, 79, 180 );
    result.face_positions.emplace_back( 81, 181, 182 );
    result.face_positions.emplace_back( 222, 185, 82 );
    result.face_positions.emplace_back( 188, 190, 84 );
    result.face_positions.emplace_back( 82, 11, 180 );
    result.face_positions.emplace_back( 85, 188, 83 );
    result.face_positions.emplace_back( 186, 223, 83 );
    result.face_positions.emplace_back( 85, 190, 188 );
    result.face_positions.emplace_back( 85, 187, 86 );
    result.face_positions.emplace_back( 86, 32, 191 );
    result.face_positions.emplace_back( 190, 189, 84 );
    result.face_positions.emplace_back( 185, 183, 32 );
    result.face_positions.emplace_back( 197, 195, 90 );
    result.face_positions.emplace_back( 89, 88, 48 );
    result.face_positions.emplace_back( 90, 196, 91 );
    result.face_positions.emplace_back( 48, 165, 192 );
    result.face_positions.emplace_back( 194, 193, 6 );
    result.face_positions.emplace_back( 197, 90, 92 );
    result.face_positions.emplace_back( 91, 88, 194 );
    result.face_positions.emplace_back( 91, 70, 92 );
    result.face_positions.emplace_back( 20, 200, 199 );
    result.face_positions.emplace_back( 86, 200, 20 );
    result.face_positions.emplace_back( 205, 202, 94 );
    result.face_positions.emplace_back( 93, 205, 123 );
    result.face_positions.emplace_back( 204, 203, 2 );
    result.face_positions.emplace_back( 94, 28, 119 );
    result.face_positions.emplace_back( 209, 132, 102 );
    result.face_positions.emplace_back( 208, 121, 95 );
    result.face_positions.emplace_back( 98, 99, 39 );
    result.face_positions.emplace_back( 96, 98, 176 );
    result.face_positions.emplace_back( 103, 97, 12 );
    result.face_positions.emplace_back( 97, 103, 125 );
    result.face_positions.emplace_back( 176, 98, 10 );
    result.face_positions.emplace_back( 99, 98, 96 );
    result.face_positions.emplace_back( 96, 102, 99 );
    result.face_positions.emplace_back( 100, 14, 38 );
    result.face_positions.emplace_back( 39, 99, 100 );
    result.face_positions.emplace_back( 100, 99, 102 );
    result.face_positions.emplace_back( 44, 101, 40 );
    result.face_positions.emplace_back( 39, 100, 101 );
    result.face_positions.emplace_back( 102, 96, 209 );
    result.face_positions.emplace_back( 100, 102, 14 );
    result.face_positions.emplace_back( 104, 12, 208 );
    result.face_positions.emplace_back( 103, 27, 178 );
    result.face_positions.emplace_back( 209, 104, 95 );
    result.face_positions.emplace_back( 27, 103, 104 );
    result.face_positions.emplace_back( 55, 156, 107 );
    result.face_positions.emplace_back( 105, 56, 106 );
    result.face_positions.emplace_back( 56, 112, 106 );
    result.face_positions.emplace_back( 111, 61, 165 );
    result.face_positions.emplace_back( 117, 118, 57 );
    result.face_positions.emplace_back( 56, 105, 107 );
    result.face_positions.emplace_back( 56, 107, 108 );
    result.face_positions.emplace_back( 107, 63, 118 );
    result.face_positions.emplace_back( 110, 109, 58 );
    result.face_positions.emplace_back( 112, 109, 60 );
    result.face_positions.emplace_back( 212, 211, 0 );
    result.face_positions.emplace_back( 59, 152, 155 );
    result.face_positions.emplace_back( 112, 111, 106 );
    result.face_positions.emplace_back( 153, 111, 60 );
    result.face_positions.emplace_back( 109, 112, 56 );
    result.face_positions.emplace_back( 111, 112, 60 );
    result.face_positions.emplace_back( 213, 114, 42 );
    result.face_positions.emplace_back( 148, 113, 53 );
    result.face_positions.emplace_back( 214, 52, 114 );
    result.face_positions.emplace_back( 215, 114, 52 );
    result.face_positions.emplace_back( 4, 138, 116 );
    result.face_positions.emplace_back( 42, 113, 115 );
    result.face_positions.emplace_back( 116, 41, 145 );
    result.face_positions.emplace_back( 42, 115, 116 );
    result.face_positions.emplace_back( 117, 108, 118 );
    result.face_positions.emplace_back( 118, 63, 150 );
    result.face_positions.emplace_back( 107, 118, 108 );
    result.face_positions.emplace_back( 120, 119, 13 );
    result.face_positions.emplace_back( 94, 119, 29 );
    result.face_positions.emplace_back( 33, 128, 216 );
    result.face_positions.emplace_back( 30, 132, 121 );
    result.face_positions.emplace_back( 208, 123, 121 );
    result.face_positions.emplace_back( 29, 120, 121 );
    result.face_positions.emplace_back( 93, 123, 12 );
    result.face_positions.emplace_back( 13, 122, 216 );
    result.face_positions.emplace_back( 29, 121, 123 );
    result.face_positions.emplace_back( 26, 206, 125 );
    result.face_positions.emplace_back( 126, 31, 78 );
    result.face_positions.emplace_back( 31, 124, 125 );
    result.face_positions.emplace_back( 26, 125, 124 );
    result.face_positions.emplace_back( 8, 124, 126 );
    result.face_positions.emplace_back( 31, 126, 124 );
    result.face_positions.emplace_back( 127, 78, 179 );
    result.face_positions.emplace_back( 8, 127, 79 );
    result.face_positions.emplace_back( 30, 120, 216 );
    result.face_positions.emplace_back( 129, 128, 33 );
    result.face_positions.emplace_back( 128, 130, 30 );
    result.face_positions.emplace_back( 128, 129, 34 );
    result.face_positions.emplace_back( 131, 130, 34 );
    result.face_positions.emplace_back( 131, 34, 133 );
    result.face_positions.emplace_back( 14, 131, 38 );
    result.face_positions.emplace_back( 102, 132, 14 );
    result.face_positions.emplace_back( 132, 95, 121 );
    result.face_positions.emplace_back( 129, 133, 34 );
    result.face_positions.emplace_back( 136, 133, 7 );
    result.face_positions.emplace_back( 136, 134, 36 );
    result.face_positions.emplace_back( 134, 37, 135 );
    result.face_positions.emplace_back( 37, 16, 135 );
    result.face_positions.emplace_back( 163, 135, 16 );
    result.face_positions.emplace_back( 137, 35, 139 );
    result.face_positions.emplace_back( 133, 136, 36 );
    result.face_positions.emplace_back( 131, 137, 38 );
    result.face_positions.emplace_back( 44, 138, 4 );
    result.face_positions.emplace_back( 139, 138, 40 );
    result.face_positions.emplace_back( 139, 40, 38 );
    result.face_positions.emplace_back( 145, 35, 49 );
    result.face_positions.emplace_back( 140, 23, 174 );
    result.face_positions.emplace_back( 101, 140, 39 );
    result.face_positions.emplace_back( 140, 141, 23 );
    result.face_positions.emplace_back( 142, 141, 44 );
    result.face_positions.emplace_back( 44, 4, 142 );
    result.face_positions.emplace_back( 54, 142, 4 );
    result.face_positions.emplace_back( 143, 17, 156 );
    result.face_positions.emplace_back( 144, 143, 46 );
    result.face_positions.emplace_back( 143, 144, 45 );
    result.face_positions.emplace_back( 144, 46, 171 );
    result.face_positions.emplace_back( 139, 145, 41 );
    result.face_positions.emplace_back( 145, 49, 163 );
    result.face_positions.emplace_back( 143, 147, 17 );
    result.face_positions.emplace_back( 146, 218, 215 );
    result.face_positions.emplace_back( 142, 147, 45 );
    result.face_positions.emplace_back( 148, 53, 149 );
    result.face_positions.emplace_back( 147, 148, 17 );
    result.face_positions.emplace_back( 53, 218, 149 );
    result.face_positions.emplace_back( 150, 57, 118 );
    result.face_positions.emplace_back( 218, 150, 149 );
    result.face_positions.emplace_back( 5, 57, 150 );
    result.face_positions.emplace_back( 71, 151, 9 );
    result.face_positions.emplace_back( 143, 151, 46 );
    result.face_positions.emplace_back( 153, 152, 19 );
    result.face_positions.emplace_back( 155, 152, 60 );
    result.face_positions.emplace_back( 154, 62, 192 );
    result.face_positions.emplace_back( 153, 61, 111 );
    result.face_positions.emplace_back( 109, 155, 60 );
    result.face_positions.emplace_back( 153, 19, 154 );
    result.face_positions.emplace_back( 59, 155, 110 );
    result.face_positions.emplace_back( 149, 156, 17 );
    result.face_positions.emplace_back( 107, 156, 63 );
    result.face_positions.emplace_back( 116, 157, 42 );
    result.face_positions.emplace_back( 162, 157, 50 );
    result.face_positions.emplace_back( 158, 161, 43 );
    result.face_positions.emplace_back( 161, 158, 64 );
    result.face_positions.emplace_back( 65, 51, 159 );
    result.face_positions.emplace_back( 159, 160, 65 );
    result.face_positions.emplace_back( 162, 161, 64 );
    result.face_positions.emplace_back( 157, 162, 64 );
    result.face_positions.emplace_back( 66, 162, 50 );
    result.face_positions.emplace_back( 164, 163, 16 );
    result.face_positions.emplace_back( 163, 66, 50 );
    result.face_positions.emplace_back( 165, 61, 192 );
    result.face_positions.emplace_back( 163, 164, 66 );
    result.face_positions.emplace_back( 166, 165, 48 );
    result.face_positions.emplace_back( 165, 166, 67 );
    result.face_positions.emplace_back( 168, 166, 48 );
    result.face_positions.emplace_back( 166, 167, 67 );
    result.face_positions.emplace_back( 71, 167, 68 );
    result.face_positions.emplace_back( 88, 168, 48 );
    result.face_positions.emplace_back( 47, 168, 69 );
    result.face_positions.emplace_back( 21, 184, 170 );
    result.face_positions.emplace_back( 220, 172, 47 );
    result.face_positions.emplace_back( 219, 170, 77 );
    result.face_positions.emplace_back( 73, 220, 170 );
    result.face_positions.emplace_back( 71, 72, 171 );
    result.face_positions.emplace_back( 171, 72, 23 );
    result.face_positions.emplace_back( 220, 47, 169 );
    result.face_positions.emplace_back( 172, 73, 173 );
    result.face_positions.emplace_back( 221, 73, 75 );
    result.face_positions.emplace_back( 10, 74, 173 );
    result.face_positions.emplace_back( 172, 174, 72 );
    result.face_positions.emplace_back( 174, 74, 217 );
    result.face_positions.emplace_back( 176, 27, 96 );
    result.face_positions.emplace_back( 221, 175, 10 );
    result.face_positions.emplace_back( 10, 175, 176 );
    result.face_positions.emplace_back( 27, 176, 175 );
    result.face_positions.emplace_back( 75, 219, 224 );
    result.face_positions.emplace_back( 177, 22, 179 );
    result.face_positions.emplace_back( 103, 178, 31 );
    result.face_positions.emplace_back( 175, 178, 27 );
    result.face_positions.emplace_back( 177, 179, 78 );
    result.face_positions.emplace_back( 181, 179, 22 );
    result.face_positions.emplace_back( 79, 80, 180 );
    result.face_positions.emplace_back( 181, 222, 80 );
    result.face_positions.emplace_back( 182, 181, 22 );
    result.face_positions.emplace_back( 222, 181, 81 );
    result.face_positions.emplace_back( 224, 22, 177 );
    result.face_positions.emplace_back( 182, 77, 183 );
    result.face_positions.emplace_back( 184, 183, 77 );
    result.face_positions.emplace_back( 191, 183, 87 );
    result.face_positions.emplace_back( 170, 184, 77 );
    result.face_positions.emplace_back( 184, 21, 197 );
    result.face_positions.emplace_back( 183, 185, 81 );
    result.face_positions.emplace_back( 187, 185, 32 );
    result.face_positions.emplace_back( 86, 187, 32 );
    result.face_positions.emplace_back( 223, 186, 82 );
    result.face_positions.emplace_back( 223, 187, 85 );
    result.face_positions.emplace_back( 84, 3, 188 );
    result.face_positions.emplace_back( 83, 188, 3 );
    result.face_positions.emplace_back( 85, 86, 190 );
    result.face_positions.emplace_back( 86, 20, 189 );
    result.face_positions.emplace_back( 189, 190, 86 );
    result.face_positions.emplace_back( 183, 191, 32 );
    result.face_positions.emplace_back( 200, 87, 92 );
    result.face_positions.emplace_back( 154, 192, 61 );
    result.face_positions.emplace_back( 62, 89, 192 );
    result.face_positions.emplace_back( 194, 6, 198 );
    result.face_positions.emplace_back( 89, 62, 193 );
    result.face_positions.emplace_back( 88, 89, 194 );
    result.face_positions.emplace_back( 169, 195, 21 );
    result.face_positions.emplace_back( 196, 195, 69 );
    result.face_positions.emplace_back( 168, 196, 69 );
    result.face_positions.emplace_back( 91, 196, 88 );
    result.face_positions.emplace_back( 184, 197, 87 );
    result.face_positions.emplace_back( 195, 197, 21 );
    result.face_positions.emplace_back( 191, 200, 86 );
    result.face_positions.emplace_back( 194, 198, 91 );
    result.face_positions.emplace_back( 92, 70, 199 );
    result.face_positions.emplace_back( 199, 200, 92 );
    result.face_positions.emplace_back( 201, 202, 93 );
    result.face_positions.emplace_back( 207, 201, 93 );
    result.face_positions.emplace_back( 203, 202, 25 );
    result.face_positions.emplace_back( 123, 205, 29 );
    result.face_positions.emplace_back( 202, 203, 94 );
    result.face_positions.emplace_back( 203, 204, 94 );
    result.face_positions.emplace_back( 202, 205, 93 );
    result.face_positions.emplace_back( 12, 207, 93 );
    result.face_positions.emplace_back( 125, 206, 97 );
    result.face_positions.emplace_back( 206, 207, 97 );
    result.face_positions.emplace_back( 123, 208, 12 );
    result.face_positions.emplace_back( 95, 104, 208 );
    result.face_positions.emplace_back( 209, 95, 132 );
    result.face_positions.emplace_back( 27, 209, 96 );
    result.face_positions.emplace_back( 58, 210, 18 );
    result.face_positions.emplace_back( 109, 108, 210 );
    result.face_positions.emplace_back( 157, 213, 42 );
    result.face_positions.emplace_back( 110, 58, 211 );
    result.face_positions.emplace_back( 211, 212, 110 );
    result.face_positions.emplace_back( 213, 64, 158 );
    result.face_positions.emplace_back( 146, 215, 52 );
    result.face_positions.emplace_back( 114, 15, 214 );
    result.face_positions.emplace_back( 113, 215, 53 );
    result.face_positions.emplace_back( 33, 216, 122 );
    result.face_positions.emplace_back( 30, 216, 128 );
    result.face_positions.emplace_back( 39, 217, 98 );
    result.face_positions.emplace_back( 174, 217, 140 );
    result.face_positions.emplace_back( 218, 53, 215 );
    result.face_positions.emplace_back( 150, 218, 5 );
    result.face_positions.emplace_back( 77, 182, 224 );
    result.face_positions.emplace_back( 73, 219, 75 );
    result.face_positions.emplace_back( 172, 220, 73 );
    result.face_positions.emplace_back( 169, 170, 220 );
    result.face_positions.emplace_back( 173, 221, 10 );
    result.face_positions.emplace_back( 177, 221, 75 );
    result.face_positions.emplace_back( 82, 180, 222 );
    result.face_positions.emplace_back( 80, 222, 180 );
    result.face_positions.emplace_back( 187, 223, 82 );
    result.face_positions.emplace_back( 83, 223, 85 );
    result.face_positions.emplace_back( 22, 224, 182 );
    result.face_positions.emplace_back( 75, 224, 177 );
    
    result.face_normals.emplace_back( 146, 5, 218 );
    result.face_normals.emplace_back( 192, 89, 48 );
    result.face_normals.emplace_back( 121, 120, 30 );
    result.face_normals.emplace_back( 171, 23, 144 );
    result.face_normals.emplace_back( 4, 115, 54 );
    result.face_normals.emplace_back( 64, 213, 157 );
    result.face_normals.emplace_back( 210, 108, 18 );
    result.face_normals.emplace_back( 38, 137, 139 );
    result.face_normals.emplace_back( 82, 185, 187 );
    result.face_normals.emplace_back( 201, 207, 24 );
    result.face_normals.emplace_back( 178, 78, 31 );
    result.face_normals.emplace_back( 143, 55, 151 );
    result.face_normals.emplace_back( 68, 168, 47 );
    result.face_normals.emplace_back( 127, 179, 80 );
    result.face_normals.emplace_back( 119, 28, 13 );
    result.face_normals.emplace_back( 34, 130, 128 );
    result.face_normals.emplace_back( 36, 137, 131 );
    result.face_normals.emplace_back( 204, 28, 94 );
    result.face_normals.emplace_back( 27, 104, 209 );
    result.face_normals.emplace_back( 105, 55, 107 );
    result.face_normals.emplace_back( 49, 135, 163 );
    result.face_normals.emplace_back( 36, 131, 133 );
    result.face_normals.emplace_back( 71, 171, 46 );
    result.face_normals.emplace_back( 196, 90, 195 );
    result.face_normals.emplace_back( 105, 151, 55 );
    result.face_normals.emplace_back( 9, 151, 105 );
    result.face_normals.emplace_back( 80, 179, 181 );
    result.face_normals.emplace_back( 221, 76, 175 );
    result.face_normals.emplace_back( 219, 77, 224 );
    result.face_normals.emplace_back( 147, 143, 45 );
    result.face_normals.emplace_back( 140, 217, 39 );
    result.face_normals.emplace_back( 31, 125, 103 );
    result.face_normals.emplace_back( 205, 94, 29 );
    result.face_normals.emplace_back( 25, 202, 201 );
    result.face_normals.emplace_back( 206, 24, 207 );
    result.face_normals.emplace_back( 175, 76, 178 );
    result.face_normals.emplace_back( 12, 104, 103 );
    result.face_normals.emplace_back( 221, 177, 76 );
    result.face_normals.emplace_back( 29, 119, 120 );
    result.face_normals.emplace_back( 97, 207, 12 );
    result.face_normals.emplace_back( 129, 7, 133 );
    result.face_normals.emplace_back( 130, 132, 30 );
    result.face_normals.emplace_back( 8, 26, 124 );
    result.face_normals.emplace_back( 90, 91, 92 );
    result.face_normals.emplace_back( 82, 186, 11 );
    result.face_normals.emplace_back( 137, 134, 35 );
    result.face_normals.emplace_back( 120, 13, 216 );
    result.face_normals.emplace_back( 132, 130, 14 );
    result.face_normals.emplace_back( 138, 41, 116 );
    result.face_normals.emplace_back( 130, 131, 14 );
    result.face_normals.emplace_back( 135, 49, 134 );
    result.face_normals.emplace_back( 134, 137, 36 );
    result.face_normals.emplace_back( 139, 41, 138 );
    result.face_normals.emplace_back( 136, 37, 134 );
    result.face_normals.emplace_back( 101, 44, 140 );
    result.face_normals.emplace_back( 74, 98, 217 );
    result.face_normals.emplace_back( 101, 38, 40 );
    result.face_normals.emplace_back( 40, 138, 44 );
    result.face_normals.emplace_back( 38, 101, 100 );
    result.face_normals.emplace_back( 139, 35, 145 );
    result.face_normals.emplace_back( 15, 114, 213 );
    result.face_normals.emplace_back( 148, 149, 17 );
    result.face_normals.emplace_back( 116, 115, 4 );
    result.face_normals.emplace_back( 116, 50, 157 );
    result.face_normals.emplace_back( 66, 65, 162 );
    result.face_normals.emplace_back( 147, 142, 54 );
    result.face_normals.emplace_back( 44, 141, 140 );
    result.face_normals.emplace_back( 141, 45, 144 );
    result.face_normals.emplace_back( 45, 141, 142 );
    result.face_normals.emplace_back( 9, 167, 71 );
    result.face_normals.emplace_back( 141, 144, 23 );
    result.face_normals.emplace_back( 106, 167, 9 );
    result.face_normals.emplace_back( 74, 172, 173 );
    result.face_normals.emplace_back( 67, 106, 111 );
    result.face_normals.emplace_back( 88, 196, 168 );
    result.face_normals.emplace_back( 49, 35, 134 );
    result.face_normals.emplace_back( 51, 65, 66 );
    result.face_normals.emplace_back( 159, 1, 160 );
    result.face_normals.emplace_back( 145, 50, 116 );
    result.face_normals.emplace_back( 148, 147, 54 );
    result.face_normals.emplace_back( 161, 160, 43 );
    result.face_normals.emplace_back( 114, 113, 42 );
    result.face_normals.emplace_back( 113, 114, 215 );
    result.face_normals.emplace_back( 54, 115, 113 );
    result.face_normals.emplace_back( 148, 54, 113 );
    result.face_normals.emplace_back( 149, 63, 156 );
    result.face_normals.emplace_back( 150, 63, 149 );
    result.face_normals.emplace_back( 212, 59, 110 );
    result.face_normals.emplace_back( 106, 67, 167 );
    result.face_normals.emplace_back( 109, 210, 58 );
    result.face_normals.emplace_back( 55, 143, 156 );
    result.face_normals.emplace_back( 19, 152, 59 );
    result.face_normals.emplace_back( 155, 109, 110 );
    result.face_normals.emplace_back( 152, 153, 60 );
    result.face_normals.emplace_back( 109, 56, 108 );
    result.face_normals.emplace_back( 194, 89, 193 );
    result.face_normals.emplace_back( 111, 165, 67 );
    result.face_normals.emplace_back( 18, 108, 117 );
    result.face_normals.emplace_back( 154, 61, 153 );
    result.face_normals.emplace_back( 213, 158, 15 );
    result.face_normals.emplace_back( 161, 65, 160 );
    result.face_normals.emplace_back( 65, 161, 162 );
    result.face_normals.emplace_back( 50, 145, 163 );
    result.face_normals.emplace_back( 164, 51, 66 );
    result.face_normals.emplace_back( 167, 166, 68 );
    result.face_normals.emplace_back( 9, 105, 106 );
    result.face_normals.emplace_back( 68, 166, 168 );
    result.face_normals.emplace_back( 68, 47, 71 );
    result.face_normals.emplace_back( 198, 70, 91 );
    result.face_normals.emplace_back( 195, 169, 69 );
    result.face_normals.emplace_back( 197, 92, 87 );
    result.face_normals.emplace_back( 200, 191, 87 );
    result.face_normals.emplace_back( 71, 47, 72 );
    result.face_normals.emplace_back( 151, 71, 46 );
    result.face_normals.emplace_back( 172, 72, 47 );
    result.face_normals.emplace_back( 172, 74, 174 );
    result.face_normals.emplace_back( 69, 169, 47 );
    result.face_normals.emplace_back( 73, 170, 219 );
    result.face_normals.emplace_back( 74, 10, 98 );
    result.face_normals.emplace_back( 23, 72, 174 );
    result.face_normals.emplace_back( 221, 173, 73 );
    result.face_normals.emplace_back( 169, 21, 170 );
    result.face_normals.emplace_back( 76, 177, 78 );
    result.face_normals.emplace_back( 178, 76, 78 );
    result.face_normals.emplace_back( 184, 87, 183 );
    result.face_normals.emplace_back( 183, 81, 182 );
    result.face_normals.emplace_back( 79, 127, 80 );
    result.face_normals.emplace_back( 78, 127, 126 );
    result.face_normals.emplace_back( 81, 185, 222 );
    result.face_normals.emplace_back( 127, 8, 126 );
    result.face_normals.emplace_back( 11, 79, 180 );
    result.face_normals.emplace_back( 81, 181, 182 );
    result.face_normals.emplace_back( 222, 185, 82 );
    result.face_normals.emplace_back( 188, 190, 84 );
    result.face_normals.emplace_back( 82, 11, 180 );
    result.face_normals.emplace_back( 85, 188, 83 );
    result.face_normals.emplace_back( 186, 223, 83 );
    result.face_normals.emplace_back( 85, 190, 188 );
    result.face_normals.emplace_back( 85, 187, 86 );
    result.face_normals.emplace_back( 86, 32, 191 );
    result.face_normals.emplace_back( 190, 189, 84 );
    result.face_normals.emplace_back( 185, 183, 32 );
    result.face_normals.emplace_back( 197, 195, 90 );
    result.face_normals.emplace_back( 89, 88, 48 );
    result.face_normals.emplace_back( 90, 196, 91 );
    result.face_normals.emplace_back( 48, 165, 192 );
    result.face_normals.emplace_back( 194, 193, 6 );
    result.face_normals.emplace_back( 197, 90, 92 );
    result.face_normals.emplace_back( 91, 88, 194 );
    result.face_normals.emplace_back( 91, 70, 92 );
    result.face_normals.emplace_back( 20, 200, 199 );
    result.face_normals.emplace_back( 86, 200, 20 );
    result.face_normals.emplace_back( 205, 202, 94 );
    result.face_normals.emplace_back( 93, 205, 123 );
    result.face_normals.emplace_back( 204, 203, 2 );
    result.face_normals.emplace_back( 94, 28, 119 );
    result.face_normals.emplace_back( 209, 132, 102 );
    result.face_normals.emplace_back( 208, 121, 95 );
    result.face_normals.emplace_back( 98, 99, 39 );
    result.face_normals.emplace_back( 96, 98, 176 );
    result.face_normals.emplace_back( 103, 97, 12 );
    result.face_normals.emplace_back( 97, 103, 125 );
    result.face_normals.emplace_back( 176, 98, 10 );
    result.face_normals.emplace_back( 99, 98, 96 );
    result.face_normals.emplace_back( 96, 102, 99 );
    result.face_normals.emplace_back( 100, 14, 38 );
    result.face_normals.emplace_back( 39, 99, 100 );
    result.face_normals.emplace_back( 100, 99, 102 );
    result.face_normals.emplace_back( 44, 101, 40 );
    result.face_normals.emplace_back( 39, 100, 101 );
    result.face_normals.emplace_back( 102, 96, 209 );
    result.face_normals.emplace_back( 100, 102, 14 );
    result.face_normals.emplace_back( 104, 12, 208 );
    result.face_normals.emplace_back( 103, 27, 178 );
    result.face_normals.emplace_back( 209, 104, 95 );
    result.face_normals.emplace_back( 27, 103, 104 );
    result.face_normals.emplace_back( 55, 156, 107 );
    result.face_normals.emplace_back( 105, 56, 106 );
    result.face_normals.emplace_back( 56, 112, 106 );
    result.face_normals.emplace_back( 111, 61, 165 );
    result.face_normals.emplace_back( 117, 118, 57 );
    result.face_normals.emplace_back( 56, 105, 107 );
    result.face_normals.emplace_back( 56, 107, 108 );
    result.face_normals.emplace_back( 107, 63, 118 );
    result.face_normals.emplace_back( 110, 109, 58 );
    result.face_normals.emplace_back( 112, 109, 60 );
    result.face_normals.emplace_back( 212, 211, 0 );
    result.face_normals.emplace_back( 59, 152, 155 );
    result.face_normals.emplace_back( 112, 111, 106 );
    result.face_normals.emplace_back( 153, 111, 60 );
    result.face_normals.emplace_back( 109, 112, 56 );
    result.face_normals.emplace_back( 111, 112, 60 );
    result.face_normals.emplace_back( 213, 114, 42 );
    result.face_normals.emplace_back( 148, 113, 53 );
    result.face_normals.emplace_back( 214, 52, 114 );
    result.face_normals.emplace_back( 215, 114, 52 );
    result.face_normals.emplace_back( 4, 138, 116 );
    result.face_normals.emplace_back( 42, 113, 115 );
    result.face_normals.emplace_back( 116, 41, 145 );
    result.face_normals.emplace_back( 42, 115, 116 );
    result.face_normals.emplace_back( 117, 108, 118 );
    result.face_normals.emplace_back( 118, 63, 150 );
    result.face_normals.emplace_back( 107, 118, 108 );
    result.face_normals.emplace_back( 120, 119, 13 );
    result.face_normals.emplace_back( 94, 119, 29 );
    result.face_normals.emplace_back( 33, 128, 216 );
    result.face_normals.emplace_back( 30, 132, 121 );
    result.face_normals.emplace_back( 208, 123, 121 );
    result.face_normals.emplace_back( 29, 120, 121 );
    result.face_normals.emplace_back( 93, 123, 12 );
    result.face_normals.emplace_back( 13, 122, 216 );
    result.face_normals.emplace_back( 29, 121, 123 );
    result.face_normals.emplace_back( 26, 206, 125 );
    result.face_normals.emplace_back( 126, 31, 78 );
    result.face_normals.emplace_back( 31, 124, 125 );
    result.face_normals.emplace_back( 26, 125, 124 );
    result.face_normals.emplace_back( 8, 124, 126 );
    result.face_normals.emplace_back( 31, 126, 124 );
    result.face_normals.emplace_back( 127, 78, 179 );
    result.face_normals.emplace_back( 8, 127, 79 );
    result.face_normals.emplace_back( 30, 120, 216 );
    result.face_normals.emplace_back( 129, 128, 33 );
    result.face_normals.emplace_back( 128, 130, 30 );
    result.face_normals.emplace_back( 128, 129, 34 );
    result.face_normals.emplace_back( 131, 130, 34 );
    result.face_normals.emplace_back( 131, 34, 133 );
    result.face_normals.emplace_back( 14, 131, 38 );
    result.face_normals.emplace_back( 102, 132, 14 );
    result.face_normals.emplace_back( 132, 95, 121 );
    result.face_normals.emplace_back( 129, 133, 34 );
    result.face_normals.emplace_back( 136, 133, 7 );
    result.face_normals.emplace_back( 136, 134, 36 );
    result.face_normals.emplace_back( 134, 37, 135 );
    result.face_normals.emplace_back( 37, 16, 135 );
    result.face_normals.emplace_back( 163, 135, 16 );
    result.face_normals.emplace_back( 137, 35, 139 );
    result.face_normals.emplace_back( 133, 136, 36 );
    result.face_normals.emplace_back( 131, 137, 38 );
    result.face_normals.emplace_back( 44, 138, 4 );
    result.face_normals.emplace_back( 139, 138, 40 );
    result.face_normals.emplace_back( 139, 40, 38 );
    result.face_normals.emplace_back( 145, 35, 49 );
    result.face_normals.emplace_back( 140, 23, 174 );
    result.face_normals.emplace_back( 101, 140, 39 );
    result.face_normals.emplace_back( 140, 141, 23 );
    result.face_normals.emplace_back( 142, 141, 44 );
    result.face_normals.emplace_back( 44, 4, 142 );
    result.face_normals.emplace_back( 54, 142, 4 );
    result.face_normals.emplace_back( 143, 17, 156 );
    result.face_normals.emplace_back( 144, 143, 46 );
    result.face_normals.emplace_back( 143, 144, 45 );
    result.face_normals.emplace_back( 144, 46, 171 );
    result.face_normals.emplace_back( 139, 145, 41 );
    result.face_normals.emplace_back( 145, 49, 163 );
    result.face_normals.emplace_back( 143, 147, 17 );
    result.face_normals.emplace_back( 146, 218, 215 );
    result.face_normals.emplace_back( 142, 147, 45 );
    result.face_normals.emplace_back( 148, 53, 149 );
    result.face_normals.emplace_back( 147, 148, 17 );
    result.face_normals.emplace_back( 53, 218, 149 );
    result.face_normals.emplace_back( 150, 57, 118 );
    result.face_normals.emplace_back( 218, 150, 149 );
    result.face_normals.emplace_back( 5, 57, 150 );
    result.face_normals.emplace_back( 71, 151, 9 );
    result.face_normals.emplace_back( 143, 151, 46 );
    result.face_normals.emplace_back( 153, 152, 19 );
    result.face_normals.emplace_back( 155, 152, 60 );
    result.face_normals.emplace_back( 154, 62, 192 );
    result.face_normals.emplace_back( 153, 61, 111 );
    result.face_normals.emplace_back( 109, 155, 60 );
    result.face_normals.emplace_back( 153, 19, 154 );
    result.face_normals.emplace_back( 59, 155, 110 );
    result.face_normals.emplace_back( 149, 156, 17 );
    result.face_normals.emplace_back( 107, 156, 63 );
    result.face_normals.emplace_back( 116, 157, 42 );
    result.face_normals.emplace_back( 162, 157, 50 );
    result.face_normals.emplace_back( 158, 161, 43 );
    result.face_normals.emplace_back( 161, 158, 64 );
    result.face_normals.emplace_back( 65, 51, 159 );
    result.face_normals.emplace_back( 159, 160, 65 );
    result.face_normals.emplace_back( 162, 161, 64 );
    result.face_normals.emplace_back( 157, 162, 64 );
    result.face_normals.emplace_back( 66, 162, 50 );
    result.face_normals.emplace_back( 164, 163, 16 );
    result.face_normals.emplace_back( 163, 66, 50 );
    result.face_normals.emplace_back( 165, 61, 192 );
    result.face_normals.emplace_back( 163, 164, 66 );
    result.face_normals.emplace_back( 166, 165, 48 );
    result.face_normals.emplace_back( 165, 166, 67 );
    result.face_normals.emplace_back( 168, 166, 48 );
    result.face_normals.emplace_back( 166, 167, 67 );
    result.face_normals.emplace_back( 71, 167, 68 );
    result.face_normals.emplace_back( 88, 168, 48 );
    result.face_normals.emplace_back( 47, 168, 69 );
    result.face_normals.emplace_back( 21, 184, 170 );
    result.face_normals.emplace_back( 220, 172, 47 );
    result.face_normals.emplace_back( 219, 170, 77 );
    result.face_normals.emplace_back( 73, 220, 170 );
    result.face_normals.emplace_back( 71, 72, 171 );
    result.face_normals.emplace_back( 171, 72, 23 );
    result.face_normals.emplace_back( 220, 47, 169 );
    result.face_normals.emplace_back( 172, 73, 173 );
    result.face_normals.emplace_back( 221, 73, 75 );
    result.face_normals.emplace_back( 10, 74, 173 );
    result.face_normals.emplace_back( 172, 174, 72 );
    result.face_normals.emplace_back( 174, 74, 217 );
    result.face_normals.emplace_back( 176, 27, 96 );
    result.face_normals.emplace_back( 221, 175, 10 );
    result.face_normals.emplace_back( 10, 175, 176 );
    result.face_normals.emplace_back( 27, 176, 175 );
    result.face_normals.emplace_back( 75, 219, 224 );
    result.face_normals.emplace_back( 177, 22, 179 );
    result.face_normals.emplace_back( 103, 178, 31 );
    result.face_normals.emplace_back( 175, 178, 27 );
    result.face_normals.emplace_back( 177, 179, 78 );
    result.face_normals.emplace_back( 181, 179, 22 );
    result.face_normals.emplace_back( 79, 80, 180 );
    result.face_normals.emplace_back( 181, 222, 80 );
    result.face_normals.emplace_back( 182, 181, 22 );
    result.face_normals.emplace_back( 222, 181, 81 );
    result.face_normals.emplace_back( 224, 22, 177 );
    result.face_normals.emplace_back( 182, 77, 183 );
    result.face_normals.emplace_back( 184, 183, 77 );
    result.face_normals.emplace_back( 191, 183, 87 );
    result.face_normals.emplace_back( 170, 184, 77 );
    result.face_normals.emplace_back( 184, 21, 197 );
    result.face_normals.emplace_back( 183, 185, 81 );
    result.face_normals.emplace_back( 187, 185, 32 );
    result.face_normals.emplace_back( 86, 187, 32 );
    result.face_normals.emplace_back( 223, 186, 82 );
    result.face_normals.emplace_back( 223, 187, 85 );
    result.face_normals.emplace_back( 84, 3, 188 );
    result.face_normals.emplace_back( 83, 188, 3 );
    result.face_normals.emplace_back( 85, 86, 190 );
    result.face_normals.emplace_back( 86, 20, 189 );
    result.face_normals.emplace_back( 189, 190, 86 );
    result.face_normals.emplace_back( 183, 191, 32 );
    result.face_normals.emplace_back( 200, 87, 92 );
    result.face_normals.emplace_back( 154, 192, 61 );
    result.face_normals.emplace_back( 62, 89, 192 );
    result.face_normals.emplace_back( 194, 6, 198 );
    result.face_normals.emplace_back( 89, 62, 193 );
    result.face_normals.emplace_back( 88, 89, 194 );
    result.face_normals.emplace_back( 169, 195, 21 );
    result.face_normals.emplace_back( 196, 195, 69 );
    result.face_normals.emplace_back( 168, 196, 69 );
    result.face_normals.emplace_back( 91, 196, 88 );
    result.face_normals.emplace_back( 184, 197, 87 );
    result.face_normals.emplace_back( 195, 197, 21 );
    result.face_normals.emplace_back( 191, 200, 86 );
    result.face_normals.emplace_back( 194, 198, 91 );
    result.face_normals.emplace_back( 92, 70, 199 );
    result.face_normals.emplace_back( 199, 200, 92 );
    result.face_normals.emplace_back( 201, 202, 93 );
    result.face_normals.emplace_back( 207, 201, 93 );
    result.face_normals.emplace_back( 203, 202, 25 );
    result.face_normals.emplace_back( 123, 205, 29 );
    result.face_normals.emplace_back( 202, 203, 94 );
    result.face_normals.emplace_back( 203, 204, 94 );
    result.face_normals.emplace_back( 202, 205, 93 );
    result.face_normals.emplace_back( 12, 207, 93 );
    result.face_normals.emplace_back( 125, 206, 97 );
    result.face_normals.emplace_back( 206, 207, 97 );
    result.face_normals.emplace_back( 123, 208, 12 );
    result.face_normals.emplace_back( 95, 104, 208 );
    result.face_normals.emplace_back( 209, 95, 132 );
    result.face_normals.emplace_back( 27, 209, 96 );
    result.face_normals.emplace_back( 58, 210, 18 );
    result.face_normals.emplace_back( 109, 108, 210 );
    result.face_normals.emplace_back( 157, 213, 42 );
    result.face_normals.emplace_back( 110, 58, 211 );
    result.face_normals.emplace_back( 211, 212, 110 );
    result.face_normals.emplace_back( 213, 64, 158 );
    result.face_normals.emplace_back( 146, 215, 52 );
    result.face_normals.emplace_back( 114, 15, 214 );
    result.face_normals.emplace_back( 113, 215, 53 );
    result.face_normals.emplace_back( 33, 216, 122 );
    result.face_normals.emplace_back( 30, 216, 128 );
    result.face_normals.emplace_back( 39, 217, 98 );
    result.face_normals.emplace_back( 174, 217, 140 );
    result.face_normals.emplace_back( 218, 53, 215 );
    result.face_normals.emplace_back( 150, 218, 5 );
    result.face_normals.emplace_back( 77, 182, 224 );
    result.face_normals.emplace_back( 73, 219, 75 );
    result.face_normals.emplace_back( 172, 220, 73 );
    result.face_normals.emplace_back( 169, 170, 220 );
    result.face_normals.emplace_back( 173, 221, 10 );
    result.face_normals.emplace_back( 177, 221, 75 );
    result.face_normals.emplace_back( 82, 180, 222 );
    result.face_normals.emplace_back( 80, 222, 180 );
    result.face_normals.emplace_back( 187, 223, 82 );
    result.face_normals.emplace_back( 83, 223, 85 );
    result.face_normals.emplace_back( 22, 224, 182 );
    result.face_normals.emplace_back( 75, 224, 177 );
    
    
    return result;
}

#endif