#ifndef __getComputeNormalsOutputUnweighted_h__
#define __getComputeNormalsOutputUnweighted_h__

#include "mesh.h"

inline graphics101::Mesh getComputeNormalsOutputUnweighted() {
    graphics101::Mesh result;
    
    result.positions.reserve( 225 );
    result.face_positions.reserve( 394 );
    
    result.normals.reserve( 225 );
    result.face_normals.reserve( 394 );
    
    result.texcoords.reserve( 0 );
    result.face_texcoords.reserve( 0 );
    
    result.positions.emplace_back( -1, -1, 0.5 );
    result.positions.emplace_back( -1, 1, 0.5 );
    result.positions.emplace_back( 1, 1, 0.5 );
    result.positions.emplace_back( 1, -1, 0.5 );
    result.positions.emplace_back( -0.44560998678207397, 0.34787198901176453, 1.0253934860229492 );
    result.positions.emplace_back( -1, 0, 0.5 );
    result.positions.emplace_back( 0, -1, 1.1180340051651001 );
    result.positions.emplace_back( 0, 1, 1.1180340051651001 );
    result.positions.emplace_back( 1, 0, 0.5 );
    result.positions.emplace_back( -0.37706199288368225, -0.37706199288368225, 1.0525323152542114 );
    result.positions.emplace_back( 0.24680200219154358, 0.047637999057769775, 1.0904535055160522 );
    result.positions.emplace_back( 1, -0.5, 0.5 );
    result.positions.emplace_back( 0.65351802110671997, 0.5, 0.90714621543884277 );
    result.positions.emplace_back( 0.5, 1, 1 );
    result.positions.emplace_back( 0.16120600700378418, 0.53361600637435913, 1.1063510179519653 );
    result.positions.emplace_back( -1, 0.5, 0.5 );
    result.positions.emplace_back( -0.5, 1, 1 );
    result.positions.emplace_back( -0.59368598461151123, -0.031837999820709229, 0.94738423824310303 );
    result.positions.emplace_back( -1, -0.5, 0.5 );
    result.positions.emplace_back( -0.5, -1, 1 );
    result.positions.emplace_back( 0.5, -1, 1 );
    result.positions.emplace_back( 0.25, -0.50600600242614746, 1.0897247791290283 );
    result.positions.emplace_back( 0.60752999782562256, -0.22710999846458435, 0.93856662511825562 );
    result.positions.emplace_back( -0.17492400109767914, 0.023585999384522438, 1.1042652130126953 );
    result.positions.emplace_back( 1, 0.5, 0.5 );
    result.positions.emplace_back( 1, 0.75, 0.5 );
    result.positions.emplace_back( 1, 0.25, 0.5 );
    result.positions.emplace_back( 0.51282399892807007, 0.21747800707817078, 0.99348455667495728 );
    result.positions.emplace_back( 0.75, 1, 0.82915621995925903 );
    result.positions.emplace_back( 0.625, 0.76481199264526367, 0.92702478170394897 );
    result.positions.emplace_back( 0.33668598532676697, 0.76238799095153809, 1.0661343336105347 );
    result.positions.emplace_back( 0.76367002725601196, 0.125, 0.81658321619033813 );
    result.positions.emplace_back( 0.62593197822570801, -0.61931401491165161, 0.92639577388763428 );
    result.positions.emplace_back( 0.25, 1, 1.0897247791290283 );
    result.positions.emplace_back( 0.125, 0.81977802515029907, 1.1110242605209351 );
    result.positions.emplace_back( -0.25, 0.69314199686050415, 1.0897247791290283 );
    result.positions.emplace_back( -0.080757997930049896, 0.81052601337432861, 1.1151134967803955 );
    result.positions.emplace_back( -0.25, 1, 1.0897247791290283 );
    result.positions.emplace_back( -0.053346000611782074, 0.59030997753143311, 1.1167606115341187 );
    result.positions.emplace_back( -0.018858000636100769, 0.2865079939365387, 1.1178749799728394 );
    result.positions.emplace_back( -0.24539799988269806, 0.46248999238014221, 1.0907702445983887 );
    result.positions.emplace_back( -0.44211399555206299, 0.57393801212310791, 1.0269056558609009 );
    result.positions.emplace_back( -0.71152400970458984, 0.46504399180412292, 0.8623998761177063 );
    result.positions.emplace_back( -1, 0.75, 0.5 );
    result.positions.emplace_back( -0.24909999966621399, 0.23678599298000336, 1.0899307727813721 );
    result.positions.emplace_back( -0.39371401071548462, 0.066968001425266266, 1.0464173555374146 );
    result.positions.emplace_back( -0.32357999682426453, -0.15272800624370575, 1.0701850652694702 );
    result.positions.emplace_back( -0.042307998985052109, -0.33832600712776184, 1.1172331571578979 );
    result.positions.emplace_back( -0.17252400517463684, -0.67884200811386108, 1.1046426296234131 );
    result.positions.emplace_back( -0.44357401132583618, 0.79070198535919189, 1.0262758731842041 );
    result.positions.emplace_back( -0.62389802932739258, 0.68110001087188721, 0.92776679992675781 );
    result.positions.emplace_back( -0.75, 1, 0.82915621995925903 );
    result.positions.emplace_back( -1, 0.25, 0.5 );
    result.positions.emplace_back( -0.78579998016357422, 0.125, 0.79531019926071167 );
    result.positions.emplace_back( -0.57346600294113159, 0.17900599539279938, 0.9597586989402771 );
    result.positions.emplace_back( -0.51799798011779785, -0.22492000460624695, 0.99079668521881104 );
    result.positions.emplace_back( -0.67422997951507568, -0.51099598407745361, 0.89185982942581177 );
    result.positions.emplace_back( -1, -0.25, 0.5 );
    result.positions.emplace_back( -1, -0.75, 0.5 );
    result.positions.emplace_back( -0.75, -1, 0.82915621995925903 );
    result.positions.emplace_back( -0.625, -0.76899600028991699, 0.92702478170394897 );
    result.positions.emplace_back( -0.38581600785255432, -0.78889197111129761, 1.0493550300598145 );
    result.positions.emplace_back( -0.25, -1, 1.0897247791290283 );
    result.positions.emplace_back( -0.76050001382827759, -0.20860399305820465, 0.81953632831573486 );
    result.positions.emplace_back( -0.82626897096633911, 0.63738000392913818, 0.75317960977554321 );
    result.positions.emplace_back( -0.8268280029296875, 0.8268280029296875, 0.75256592035293579 );
    result.positions.emplace_back( -0.65376001596450806, 0.85367399454116821, 0.90697181224822998 );
    result.positions.emplace_back( -0.35675200819969177, -0.58350199460983276, 1.0595885515213013 );
    result.positions.emplace_back( -0.18570399284362793, -0.47864601016044617, 1.1025035381317139 );
    result.positions.emplace_back( 0.02757599949836731, -0.56513601541519165, 1.1176939010620117 );
    result.positions.emplace_back( 0.25, -1, 1.0897247791290283 );
    result.positions.emplace_back( -0.21584999561309814, -0.30440801382064819, 1.0969998836517334 );
    result.positions.emplace_back( -0.096133999526500702, -0.15279600024223328, 1.1138932704925537 );
    result.positions.emplace_back( 0.1508139967918396, -0.18172399699687958, 1.1078155040740967 );
    result.positions.emplace_back( 0.037252001464366913, 0.01257800031453371, 1.1174131631851196 );
    result.positions.emplace_back( 0.38507801294326782, -0.14499600231647491, 1.0496261119842529 );
    result.positions.emplace_back( 0.5634620189666748, -0.0041160001419484615, 0.96566587686538696 );
    result.positions.emplace_back( 0.42938399314880371, -0.3673500120639801, 1.0322933197021484 );
    result.positions.emplace_back( 0.75544601678848267, -0.082025997340679169, 0.82419741153717041 );
    result.positions.emplace_back( 1, -0.25, 0.5 );
    result.positions.emplace_back( 0.80152601003646851, -0.27695000171661377, 0.77945882081985474 );
    result.positions.emplace_back( 0.66108399629592896, -0.42113199830055237, 0.90164732933044434 );
    result.positions.emplace_back( 0.80979597568511963, -0.54971802234649658, 0.77086341381072998 );
    result.positions.emplace_back( 1, -0.75, 0.5 );
    result.positions.emplace_back( 0.75, -1, 0.82915621995925903 );
    result.positions.emplace_back( 0.78551197052001953, -0.76323801279067993, 0.79559469223022461 );
    result.positions.emplace_back( 0.59068602323532104, -0.81882798671722412, 0.94925761222839355 );
    result.positions.emplace_back( 0.40692201256752014, -0.68349599838256836, 1.0413522720336914 );
    result.positions.emplace_back( 0.0089339995756745338, -0.76525002717971802, 1.1179982423782349 );
    result.positions.emplace_back( -0.14526799321174622, -0.85534101724624634, 1.1085563898086548 );
    result.positions.emplace_back( 0.17718400061130524, -0.67999798059463501, 1.1039048433303833 );
    result.positions.emplace_back( 0.158843994140625, -0.85245698690414429, 1.1066926717758179 );
    result.positions.emplace_back( 0.33550798892974854, -0.8452410101890564, 1.0665056705474854 );
    result.positions.emplace_back( 0.82675999402999878, 0.625, 0.75264060497283936 );
    result.positions.emplace_back( 0.81870800256729126, 0.81870800256729126, 0.76139163970947266 );
    result.positions.emplace_back( 0.40799000859260559, 0.52600598335266113, 1.0409343242645264 );
    result.positions.emplace_back( 0.27781200408935547, 0.30970001220703125, 1.0829683542251587 );
    result.positions.emplace_back( 0.82675999402999878, 0.375, 0.75264060497283936 );
    result.positions.emplace_back( 0.118306003510952, 0.17189200222492218, 1.1117570400238037 );
    result.positions.emplace_back( 0.12758000195026398, 0.32236999273300171, 1.1107310056686401 );
    result.positions.emplace_back( 0.019991999492049217, 0.44477599859237671, 1.1178551912307739 );
    result.positions.emplace_back( -0.11665599793195724, 0.39441600441932678, 1.111931324005127 );
    result.positions.emplace_back( 0.21124200522899628, 0.41735199093818665, 1.0978965759277344 );
    result.positions.emplace_back( 0.65684002637863159, 0.322052001953125, 0.9047437310218811 );
    result.positions.emplace_back( 0.50081402063369751, 0.38547199964523315, 0.99959260225296021 );
    result.positions.emplace_back( -0.54811602830886841, -0.39416998624801636, 0.97445821762084961 );
    result.positions.emplace_back( -0.51706999540328979, -0.55416601896286011, 0.99128127098083496 );
    result.positions.emplace_back( -0.70135402679443359, -0.35523200035095215, 0.87069088220596313 );
    result.positions.emplace_back( -0.83553999662399292, -0.45884200930595398, 0.74288147687911987 );
    result.positions.emplace_back( -0.81270700693130493, -0.66376602649688721, 0.76779383420944214 );
    result.positions.emplace_back( -0.84346699714660645, -0.84346699714660645, 0.73386877775192261 );
    result.positions.emplace_back( -0.45618799328804016, -0.67418199777603149, 1.0207313299179077 );
    result.positions.emplace_back( -0.62380397319793701, -0.63507002592086792, 0.9278300404548645 );
    result.positions.emplace_back( -0.71408802270889282, 0.2874700129032135, 0.86027806997299194 );
    result.positions.emplace_back( -0.86836701631546021, 0.3785020112991333, 0.70422917604446411 );
    result.positions.emplace_back( -0.5926399827003479, 0.37452200055122375, 0.94803893566131592 );
    result.positions.emplace_back( -0.57659202814102173, 0.51892602443695068, 0.95788395404815674 );
    result.positions.emplace_back( -1, -0.375, 0.5 );
    result.positions.emplace_back( -0.86586999893188477, -0.3125, 0.70729708671569824 );
    result.positions.emplace_back( 0.625, 0.91562402248382568, 0.92702478170394897 );
    result.positions.emplace_back( 0.48021200299263, 0.83867001533508301, 1.0096516609191895 );
    result.positions.emplace_back( 0.48668000102043152, 0.6725040078163147, 1.0065498352050781 );
    result.positions.emplace_back( 0.375, 1, 1.0532686710357666 );
    result.positions.emplace_back( 0.61513400077819824, 0.62980800867080688, 0.93360066413879395 );
    result.positions.emplace_back( 0.91489201784133911, 0.125, 0.64262944459915161 );
    result.positions.emplace_back( 0.83928197622299194, 0.23887999355792999, 0.73865127563476562 );
    result.positions.emplace_back( 0.86427998542785645, -0.00093400001060217619, 0.70923906564712524 );
    result.positions.emplace_back( 0.88968199491500854, -0.14860400557518005, 0.67710113525390625 );
    result.positions.emplace_back( 0.25109401345252991, 0.86577999591827393, 1.0894731283187866 );
    result.positions.emplace_back( 0.125, 1, 1.1110242605209351 );
    result.positions.emplace_back( 0.20184800028800964, 0.68413001298904419, 1.0996624231338501 );
    result.positions.emplace_back( 0.054712001234292984, 0.69036602973937988, 1.116694450378418 );
    result.positions.emplace_back( 0.28616398572921753, 0.58061802387237549, 1.0807914733886719 );
    result.positions.emplace_back( 0.019212000072002411, 0.87986397743225098, 1.1178689002990723 );
    result.positions.emplace_back( -0.23108799755573273, 0.84657198190689087, 1.0938913822174072 );
    result.positions.emplace_back( -0.360944002866745, 0.90844398736953735, 1.0581679344177246 );
    result.positions.emplace_back( -0.125, 1, 1.1110242605209351 );
    result.positions.emplace_back( -0.12473800033330917, 0.6932380199432373, 1.1110537052154541 );
    result.positions.emplace_back( -0.37681201100349426, 0.45986801385879517, 1.0526218414306641 );
    result.positions.emplace_back( -0.31070199608802795, 0.57655799388885498, 1.073994517326355 );
    result.positions.emplace_back( -0.11302600055932999, 0.16462400555610657, 1.1123062372207642 );
    result.positions.emplace_back( -0.27159398794174194, 0.10945600271224976, 1.0845444202423096 );
    result.positions.emplace_back( -0.39252001047134399, 0.21243399381637573, 1.0468658208847046 );
    result.positions.emplace_back( -0.44950199127197266, -0.071883998811244965, 1.023693323135376 );
    result.positions.emplace_back( -0.29795798659324646, -0.023506000638008118, 1.0775996446609497 );
    result.positions.emplace_back( -0.50093001127243042, 0.68192797899246216, 0.9995344877243042 );
    result.positions.emplace_back( -1, 0.125, 0.5 );
    result.positions.emplace_back( -0.51828402280807495, 0.067322000861167908, 0.99064713716506958 );
    result.positions.emplace_back( -0.66159200668334961, 0.081064000725746155, 0.90127468109130859 );
    result.positions.emplace_back( -0.77497601509094238, -0.041939999908208847, 0.80586117506027222 );
    result.positions.emplace_back( -0.89630097150802612, -0.13643799722194672, 0.66831469535827637 );
    result.positions.emplace_back( -0.39664199948310852, -0.25385200977325439, 1.0453109741210938 );
    result.positions.emplace_back( -0.625, -0.91831797361373901, 0.92702478170394897 );
    result.positions.emplace_back( -0.50002598762512207, -0.86355197429656982, 0.99998700618743896 );
    result.positions.emplace_back( -0.375, -1, 1.0532686710357666 );
    result.positions.emplace_back( -0.72147601842880249, -0.84365701675415039, 0.85409152507781982 );
    result.positions.emplace_back( -0.63539999723434448, -0.1595660001039505, 0.91992765665054321 );
    result.positions.emplace_back( -0.71018999814987183, 0.59030002355575562, 0.86349880695343018 );
    result.positions.emplace_back( -1, 0.625, 0.5 );
    result.positions.emplace_back( -0.875, 1, 0.69597053527832031 );
    result.positions.emplace_back( -1, 0.875, 0.5 );
    result.positions.emplace_back( -0.88835102319717407, 0.7319219708442688, 0.67884641885757446 );
    result.positions.emplace_back( -0.74088001251220703, 0.73235601186752319, 0.83731526136398315 );
    result.positions.emplace_back( -0.53157597780227661, 0.87923198938369751, 0.98357862234115601 );
    result.positions.emplace_back( -0.625, 1, 0.92702478170394897 );
    result.positions.emplace_back( -0.29844799637794495, -0.69650399684906006, 1.0774641036987305 );
    result.positions.emplace_back( -0.23956599831581116, -0.58272397518157959, 1.0920660495758057 );
    result.positions.emplace_back( -0.30603599548339844, -0.47429201006889343, 1.0753334760665894 );
    result.positions.emplace_back( -0.10000800341367722, -0.5735359787940979, 1.1135522127151489 );
    result.positions.emplace_back( 0.10712199658155441, -0.41645601391792297, 1.112890362739563 );
    result.positions.emplace_back( 0.25920999050140381, -0.33255401253700256, 1.0875707864761353 );
    result.positions.emplace_back( -0.209866002202034, -0.18606199324131012, 1.0981603860855103 );
    result.positions.emplace_back( 0.021242000162601471, -0.21931600570678711, 1.1178321838378906 );
    result.positions.emplace_back( 0.15523000061511993, -0.048806000500917435, 1.1072053909301758 );
    result.positions.emplace_back( -0.07164599746465683, -0.03606799989938736, 1.1157360076904297 );
    result.positions.emplace_back( 0.41438999772071838, 0.078401997685432434, 1.0384030342102051 );
    result.positions.emplace_back( 0.31040999293327332, 0.17297600209712982, 1.0740789175033569 );
    result.positions.emplace_back( 0.517333984375, -0.12908400595188141, 0.99114352464675903 );
    result.positions.emplace_back( 0.62146598100662231, 0.1257220059633255, 0.92939764261245728 );
    result.positions.emplace_back( 0.71958798170089722, -0.19341200590133667, 0.8556828498840332 );
    result.positions.emplace_back( 0.91590601205825806, -0.375, 0.64118343591690063 );
    result.positions.emplace_back( 0.68995398283004761, -0.30876201391220093, 0.87975192070007324 );
    result.positions.emplace_back( 0.55652600526809692, -0.34558999538421631, 0.96967977285385132 );
    result.positions.emplace_back( 0.51770597696304321, -0.50109398365020752, 0.99094927310943604 );
    result.positions.emplace_back( 0.38367000222206116, -0.49357399344444275, 1.0501415729522705 );
    result.positions.emplace_back( 0.69712799787521362, -0.52973401546478271, 0.87407809495925903 );
    result.positions.emplace_back( 1, -0.625, 0.5 );
    result.positions.emplace_back( 0.74273800849914551, -0.65023201704025269, 0.83566755056381226 );
    result.positions.emplace_back( 0.875, -0.89770501852035522, 0.69597053527832031 );
    result.positions.emplace_back( 0.625, -1, 0.92702478170394897 );
    result.positions.emplace_back( 0.71153998374938965, -0.87318700551986694, 0.86238670349121094 );
    result.positions.emplace_back( 0.5323219895362854, -0.70564800500869751, 0.98317509889602661 );
    result.positions.emplace_back( -0.2785240113735199, -0.86910802125930786, 1.0827854871749878 );
    result.positions.emplace_back( -0.125, -1, 1.1110242605209351 );
    result.positions.emplace_back( -0.026599999517202377, -0.88144302368164062, 1.1177175045013428 );
    result.positions.emplace_back( 0.14660200476646423, -0.56496602296829224, 1.1083807945251465 );
    result.positions.emplace_back( 0.066221997141838074, -0.6696619987487793, 1.1160711050033569 );
    result.positions.emplace_back( 0.29289799928665161, -0.62619197368621826, 1.0789859294891357 );
    result.positions.emplace_back( 0.125, -1, 1.1110242605209351 );
    result.positions.emplace_back( 0.375, -1, 1.0532686710357666 );
    result.positions.emplace_back( 0.4670499861240387, -0.8702239990234375, 1.0158072710037231 );
    result.positions.emplace_back( 1, 0.625, 0.5 );
    result.positions.emplace_back( 0.88667398691177368, 0.72451198101043701, 0.68103539943695068 );
    result.positions.emplace_back( 1, 0.875, 0.5 );
    result.positions.emplace_back( 0.875, 1, 0.69597053527832031 );
    result.positions.emplace_back( 0.74223601818084717, 0.71850800514221191, 0.83611345291137695 );
    result.positions.emplace_back( 1, 0.375, 0.5 );
    result.positions.emplace_back( 0.86828398704528809, 0.5, 0.70433151721954346 );
    result.positions.emplace_back( 0.5299760103225708, 0.50565600395202637, 0.98444169759750366 );
    result.positions.emplace_back( 0.37123000621795654, 0.40080401301383972, 1.0546033382415771 );
    result.positions.emplace_back( -0.89529401063919067, -0.56923401355743408, 0.66966307163238525 );
    result.positions.emplace_back( -1, -0.875, 0.5 );
    result.positions.emplace_back( -0.875, -1, 0.69597053527832031 );
    result.positions.emplace_back( -0.83652198314666748, 0.50618600845336914, 0.7417755126953125 );
    result.positions.emplace_back( -1, 0.375, 0.5 );
    result.positions.emplace_back( -0.86205202341079712, 0.24036200344562531, 0.71194547414779663 );
    result.positions.emplace_back( 0.36907801032066345, 0.88116598129272461, 1.0553584098815918 );
    result.positions.emplace_back( 0.0038459999486804008, 0.12984800338745117, 1.1180273294448853 );
    result.positions.emplace_back( -0.87700700759887695, 0.035264000296592712, 0.693439781665802 );
    result.positions.emplace_back( 0.3616119921207428, -0.26526200771331787, 1.057939887046814 );
    result.positions.emplace_back( 0.14300400018692017, -0.30170199275016785, 1.1088507175445557 );
    result.positions.emplace_back( 0.34700599312782288, -0.02638000063598156, 1.0628201961517334 );
    result.positions.emplace_back( 0.79238802194595337, -0.41956600546836853, 0.78874665498733521 );
    result.positions.emplace_back( 0.87410002946853638, -0.66517198085784912, 0.69710057973861694 );
    result.positions.emplace_back( 0.48311600089073181, -0.24707800149917603, 1.0082652568817139 );
    
    result.normals.emplace_back( -0.84309309720993042, 0, 0.53776776790618896 );
    result.normals.emplace_back( -0.84309309720993042, 0, 0.53776776790618896 );
    result.normals.emplace_back( 0.84309309720993042, 0, 0.53776776790618896 );
    result.normals.emplace_back( 0.81714558601379395, -0.091710008680820465, 0.56908899545669556 );
    result.normals.emplace_back( -0.40120264887809753, 0.0030563743785023689, 0.91598421335220337 );
    result.normals.emplace_back( -0.84683829545974731, 0.0055948588997125626, 0.53182101249694824 );
    result.normals.emplace_back( -1.8806443904395564e-06, 0.0026691760867834091, 0.99999642372131348 );
    result.normals.emplace_back( 6.8842354039588827e-07, -0.0013742051087319851, 0.99999904632568359 );
    result.normals.emplace_back( 0.84646773338317871, -0.0058916243724524975, 0.53240758180618286 );
    result.normals.emplace_back( -0.34769174456596375, -0.00036659743636846542, 0.93760883808135986 );
    result.normals.emplace_back( 0.21154113113880157, 0.0027273793239146471, 0.97736525535583496 );
    result.normals.emplace_back( 0.83446216583251953, -0.027375742793083191, 0.55038481950759888 );
    result.normals.emplace_back( 0.6123732328414917, 3.8004749512765557e-05, 0.79056882858276367 );
    result.normals.emplace_back( 0.46099883317947388, 0.029247196391224861, 0.88691866397857666 );
    result.normals.emplace_back( 0.11884547024965286, -0.0031342366710305214, 0.9929078221321106 );
    result.normals.emplace_back( -0.83257704973220825, 0.014071359299123287, 0.55373048782348633 );
    result.normals.emplace_back( -0.41432046890258789, 0.026163697242736816, 0.90975499153137207 );
    result.normals.emplace_back( -0.54263681173324585, -0.0086572002619504929, 0.83992284536361694 );
    result.normals.emplace_back( -0.83772736787796021, 0.02882004901766777, 0.54532766342163086 );
    result.normals.emplace_back( -0.48779180645942688, -0.041818872094154358, 0.87195783853530884 );
    result.normals.emplace_back( 0.45607507228851318, -0.0037182446103543043, 0.88993352651596069 );
    result.normals.emplace_back( 0.21777251362800598, 0.0020697964355349541, 0.97599738836288452 );
    result.normals.emplace_back( 0.54240357875823975, 0.017368344590067863, 0.83993852138519287 );
    result.normals.emplace_back( -0.15996356308460236, 0.0023877189960330725, 0.98711997270584106 );
    result.normals.emplace_back( 0.84050416946411133, 0, 0.54180508852005005 );
    result.normals.emplace_back( 0.84762167930603027, 0, 0.53060108423233032 );
    result.normals.emplace_back( 0.83869189023971558, 0.025467703118920326, 0.54401051998138428 );
    result.normals.emplace_back( 0.42531105875968933, -0.0026015369221568108, 0.90504354238510132 );
    result.normals.emplace_back( 0.64559370279312134, 0.031583275645971298, 0.76302772760391235 );
    result.normals.emplace_back( 0.56589317321777344, 0.015747424215078354, 0.82432830333709717 );
    result.normals.emplace_back( 0.31018158793449402, -0.0054626120254397392, 0.95066165924072266 );
    result.normals.emplace_back( 0.69610953330993652, 0.0038734653498977423, 0.71792513132095337 );
    result.normals.emplace_back( 0.56093347072601318, 0.0044159954413771629, 0.82784909009933472 );
    result.normals.emplace_back( 0.24223911762237549, 0.0009722542017698288, 0.97021603584289551 );
    result.normals.emplace_back( 0.11616640537977219, -0.00024212147400248796, 0.99322968721389771 );
    result.normals.emplace_back( -0.26446455717086792, -0.0088021121919155121, 0.9643552303314209 );
    result.normals.emplace_back( -0.073588378727436066, -0.0030008708126842976, 0.99728423357009888 );
    result.normals.emplace_back( -0.25850299000740051, 0.02802015095949173, 0.96560400724411011 );
    result.normals.emplace_back( -0.064663417637348175, 0.0050727608613669872, 0.99789422750473022 );
    result.normals.emplace_back( -0.0011973419459536672, 0.00097486801678314805, 0.99999874830245972 );
    result.normals.emplace_back( -0.20762607455253601, 0.011123328469693661, 0.9781450629234314 );
    result.normals.emplace_back( -0.39238667488098145, 0.0010943389497697353, 0.91979974508285522 );
    result.normals.emplace_back( -0.64329761266708374, -0.0042789853177964687, 0.76560431718826294 );
    result.normals.emplace_back( -0.84827536344528198, 0, 0.52955538034439087 );
    result.normals.emplace_back( -0.24084740877151489, 0.00075396755710244179, 0.97056269645690918 );
    result.normals.emplace_back( -0.34949734807014465, 0.0004559764638543129, 0.93693727254867554 );
    result.normals.emplace_back( -0.28830116987228394, -0.0020496498327702284, 0.95753759145736694 );
    result.normals.emplace_back( -0.034892234951257706, 0.0015768480952829123, 0.9993898868560791 );
    result.normals.emplace_back( -0.15299651026725769, -0.0018259306671097875, 0.98822510242462158 );
    result.normals.emplace_back( -0.35455656051635742, -0.01101175881922245, 0.93496972322463989 );
    result.normals.emplace_back( -0.5587189793586731, -0.00018107058713212609, 0.8293570876121521 );
    result.normals.emplace_back( -0.67070001363754272, -0.0010942023945972323, 0.74172788858413696 );
    result.normals.emplace_back( -0.83897340297698975, -0.0026214758399873972, 0.54416608810424805 );
    result.normals.emplace_back( -0.70081603527069092, 0.0026909452863037586, 0.71333688497543335 );
    result.normals.emplace_back( -0.50351452827453613, -0.00053643638966605067, 0.8639865517616272 );
    result.normals.emplace_back( -0.48391106724739075, -0.00060893082991242409, 0.87511700391769409 );
    result.normals.emplace_back( -0.60614663362503052, -0.0021733210887759924, 0.79534995555877686 );
    result.normals.emplace_back( -0.8447343111038208, -0.0089065684005618095, 0.53511178493499756 );
    result.normals.emplace_back( -0.82839334011077881, -0.013633199967443943, 0.55998080968856812 );
    result.normals.emplace_back( -0.65369880199432373, -0.036223780363798141, 0.75588738918304443 );
    result.normals.emplace_back( -0.56204557418823242, 0.012193519622087479, 0.82701635360717773 );
    result.normals.emplace_back( -0.34388935565948486, 0.0027044224552810192, 0.9390062689781189 );
    result.normals.emplace_back( -0.21321967244148254, -0.0021361378021538258, 0.97700196504592896 );
    result.normals.emplace_back( -0.69242066144943237, -0.00065515440655872226, 0.72149378061294556 );
    result.normals.emplace_back( -0.75570720434188843, -0.0096128247678279877, 0.65483909845352173 );
    result.normals.emplace_back( -0.74362486600875854, 0.003112907288596034, 0.66858977079391479 );
    result.normals.emplace_back( -0.60584098100662231, 0.0029409409034997225, 0.79558038711547852 );
    result.normals.emplace_back( -0.33016681671142578, 0.0094642294570803642, 0.94387519359588623 );
    result.normals.emplace_back( -0.16395702958106995, 0.0023336855228990316, 0.98646461963653564 );
    result.normals.emplace_back( 0.025890449061989784, -0.003554709255695343, 0.99965852499008179 );
    result.normals.emplace_back( 0.22318798303604126, 0.0013463844079524279, 0.97477447986602783 );
    result.normals.emplace_back( -0.20772694051265717, -0.00085959106218069792, 0.97818642854690552 );
    result.normals.emplace_back( -0.09391503781080246, -0.0028454456478357315, 0.99557608366012573 );
    result.normals.emplace_back( 0.18466927111148834, 0.0056672715581953526, 0.9827844500541687 );
    result.normals.emplace_back( 0.059679120779037476, 0.0046921269968152046, 0.99820655584335327 );
    result.normals.emplace_back( 0.33458259701728821, 0.0049254074692726135, 0.94235360622406006 );
    result.normals.emplace_back( 0.49061670899391174, -0.011379361152648926, 0.87130111455917358 );
    result.normals.emplace_back( 0.38044658303260803, -0.0040862048044800758, 0.92479383945465088 );
    result.normals.emplace_back( 0.65208834409713745, -0.013625707477331161, 0.75802057981491089 );
    result.normals.emplace_back( 0.83511924743652344, 0.0026083260308951139, 0.55006277561187744 );
    result.normals.emplace_back( 0.74514758586883545, 0.0093581574037671089, 0.66683399677276611 );
    result.normals.emplace_back( 0.58872354030609131, -0.0056837191805243492, 0.80831444263458252 );
    result.normals.emplace_back( 0.76310455799102783, 0.001971356337890029, 0.64627194404602051 );
    result.normals.emplace_back( 0.82676434516906738, -0.011918847449123859, 0.56242197751998901 );
    result.normals.emplace_back( 0.71187281608581543, -0.056448835879564285, 0.70003616809844971 );
    result.normals.emplace_back( 0.71937447786331177, -0.0048747989349067211, 0.69460535049438477 );
    result.normals.emplace_back( 0.55098956823348999, 0.0029841656796634197, 0.83450675010681152 );
    result.normals.emplace_back( 0.37250500917434692, 0.00063882191898301244, 0.92802995443344116 );
    result.normals.emplace_back( -0.01693090982735157, -0.0020712800323963165, 0.99985450506210327 );
    result.normals.emplace_back( -0.12755532562732697, 0.0057007293216884136, 0.99181503057479858 );
    result.normals.emplace_back( 0.17214186489582062, -0.0021828180178999901, 0.98506969213485718 );
    result.normals.emplace_back( 0.1295040100812912, -0.001798313925974071, 0.99157726764678955 );
    result.normals.emplace_back( 0.28277856111526489, -3.0245584639487788e-05, 0.95918518304824829 );
    result.normals.emplace_back( 0.73207473754882812, -0.01525736041367054, 0.68105334043502808 );
    result.normals.emplace_back( 0.72192758321762085, 0.0068214829079806805, 0.69193506240844727 );
    result.normals.emplace_back( 0.37529644370079041, 0.0084719527512788773, 0.92686617374420166 );
    result.normals.emplace_back( 0.25409913063049316, -0.0074757528491318226, 0.96714925765991211 );
    result.normals.emplace_back( 0.73911333084106445, 0.00058126047952100635, 0.67358070611953735 );
    result.normals.emplace_back( 0.12165221571922302, -0.00035811861744150519, 0.99257266521453857 );
    result.normals.emplace_back( 0.11415605247020721, -8.1121237599290907e-05, 0.99346292018890381 );
    result.normals.emplace_back( 0.038768302649259567, 0.0054427478462457657, 0.99923336505889893 );
    result.normals.emplace_back( -0.10377652198076248, 0.0037567969411611557, 0.99459350109100342 );
    result.normals.emplace_back( 0.18502901494503021, 0.0013150391168892384, 0.98273217678070068 );
    result.normals.emplace_back( 0.60228967666625977, 0.0053689773194491863, 0.79825949668884277 );
    result.normals.emplace_back( 0.46303483843803406, -0.0041141500696539879, 0.88633054494857788 );
    result.normals.emplace_back( -0.4842134416103363, 0.0011334751034155488, 0.87494921684265137 );
    result.normals.emplace_back( -0.44453874230384827, 0.0041819531470537186, 0.89574986696243286 );
    result.normals.emplace_back( -0.62663114070892334, -0.0021084097679704428, 0.77931314706802368 );
    result.normals.emplace_back( -0.76485365629196167, 0.0090199951082468033, 0.64414089918136597 );
    result.normals.emplace_back( -0.71600210666656494, -0.0058835791423916817, 0.69807344675064087 );
    result.normals.emplace_back( -0.77373206615447998, 0.0083074849098920822, 0.63345843553543091 );
    result.normals.emplace_back( -0.41888317465782166, 0.00059751886874437332, 0.90803998708724976 );
    result.normals.emplace_back( -0.56090426445007324, -0.0086265048012137413, 0.8278357982635498 );
    result.normals.emplace_back( -0.64780652523040771, 0.0054261395707726479, 0.76178544759750366 );
    result.normals.emplace_back( -0.78533381223678589, 0.0011456470238044858, 0.61907148361206055 );
    result.normals.emplace_back( -0.5368649959564209, -0.00030305649852380157, 0.84366816282272339 );
    result.normals.emplace_back( -0.50425612926483154, -0.0048272018320858479, 0.8635406494140625 );
    result.normals.emplace_back( -0.83389759063720703, -0.012925862334668636, 0.55176776647567749 );
    result.normals.emplace_back( -0.78166139125823975, -0.0094794929027557373, 0.62363094091415405 );
    result.normals.emplace_back( 0.57081359624862671, 0.012897908687591553, 0.82097840309143066 );
    result.normals.emplace_back( 0.43719220161437988, -0.0031836552079766989, 0.89936250448226929 );
    result.normals.emplace_back( 0.42431065440177917, 0.004242344293743372, 0.90550673007965088 );
    result.normals.emplace_back( 0.33660644292831421, -0.00021531491074711084, 0.94164550304412842 );
    result.normals.emplace_back( 0.57398688793182373, -0.0095750624313950539, 0.81880855560302734 );
    result.normals.emplace_back( 0.80920350551605225, 0.0037233978509902954, 0.58751672506332397 );
    result.normals.emplace_back( 0.76914811134338379, 0.012066409923136234, 0.63895660638809204 );
    result.normals.emplace_back( 0.78136730194091797, -0.0010417498415336013, 0.62407058477401733 );
    result.normals.emplace_back( 0.78424686193466187, -0.013165703974664211, 0.62030923366546631 );
    result.normals.emplace_back( 0.21756446361541748, 0.0015824839938431978, 0.97604471445083618 );
    result.normals.emplace_back( 0.11442013084888458, 0.0017782299546524882, 0.99343085289001465 );
    result.normals.emplace_back( 0.18051029741764069, -0.001049774931743741, 0.98357254266738892 );
    result.normals.emplace_back( 0.036166895180940628, -0.0054222410544753075, 0.99933105707168579 );
    result.normals.emplace_back( 0.27122858166694641, 0.0040985634550452232, 0.96250623464584351 );
    result.normals.emplace_back( 0.012636264786124229, 0.0011419462971389294, 0.99991947412490845 );
    result.normals.emplace_back( -0.21171674132347107, -0.0065964278765022755, 0.97730886936187744 );
    result.normals.emplace_back( -0.34047055244445801, 0.0077120964415371418, 0.9402235746383667 );
    result.normals.emplace_back( -0.10094213485717773, -0.00079289666609838605, 0.99489200115203857 );
    result.normals.emplace_back( -0.11605707556009293, -0.013454565778374672, 0.99315142631530762 );
    result.normals.emplace_back( -0.34770745038986206, -0.006678788922727108, 0.93757927417755127 );
    result.normals.emplace_back( -0.25661054253578186, 0.0075116390362381935, 0.96648567914962769 );
    result.normals.emplace_back( -0.11201237887144089, 0.00075654772808775306, 0.99370658397674561 );
    result.normals.emplace_back( -0.24126742780208588, 0.003552677808329463, 0.97045212984085083 );
    result.normals.emplace_back( -0.36048829555511475, 0.0089762052521109581, 0.9327206015586853 );
    result.normals.emplace_back( -0.4105682373046875, -0.0016172629548236728, 0.91182845830917358 );
    result.normals.emplace_back( -0.2725120484828949, -0.0016227966407313943, 0.96215105056762695 );
    result.normals.emplace_back( -0.416291743516922, 0.0060067512094974518, 0.90921133756637573 );
    result.normals.emplace_back( -0.84106826782226562, 0.0041841673664748669, 0.54091274738311768 );
    result.normals.emplace_back( -0.46526250243186951, 0.0040983534418046474, 0.88516330718994141 );
    result.normals.emplace_back( -0.59109765291213989, -0.0057925833389163017, 0.80657923221588135 );
    result.normals.emplace_back( -0.67944115400314331, -0.0041606775484979153, 0.73371827602386475 );
    result.normals.emplace_back( -0.79800868034362793, -0.0020968252792954445, 0.60264229774475098 );
    result.normals.emplace_back( -0.35611122846603394, -0.0072213038802146912, 0.93441575765609741 );
    result.normals.emplace_back( -0.55782967805862427, -0.02803797647356987, 0.82948172092437744 );
    result.normals.emplace_back( -0.4474787712097168, 0.00091205228818580508, 0.89429402351379395 );
    result.normals.emplace_back( -0.34123557806015015, -0.0026931473985314369, 0.93997395038604736 );
    result.normals.emplace_back( -0.65038067102432251, 0.0077914712019264698, 0.75956845283508301 );
    result.normals.emplace_back( -0.56523633003234863, 0.0047058435156941414, 0.82491552829742432 );
    result.normals.emplace_back( -0.64253133535385132, -0.004985712468624115, 0.76624321937561035 );
    result.normals.emplace_back( -0.83099710941314697, -0.019283438101410866, 0.55594241619110107 );
    result.normals.emplace_back( -0.80308860540390015, -0.0090179946273565292, 0.59579133987426758 );
    result.normals.emplace_back( -0.83461368083953857, 0.0085849305614829063, 0.55076885223388672 );
    result.normals.emplace_back( -0.80270677804946899, -0.0017143716104328632, 0.59637147188186646 );
    result.normals.emplace_back( -0.67639744281768799, 0.0071429675444960594, 0.73650217056274414 );
    result.normals.emplace_back( -0.47309142351150513, 0.0037052212283015251, 0.88100558519363403 );
    result.normals.emplace_back( -0.55093514919281006, 0.0051534739322960377, 0.83453214168548584 );
    result.normals.emplace_back( -0.27796822786331177, -9.6215946541633457e-05, 0.96059024333953857 );
    result.normals.emplace_back( -0.21139372885227203, -0.00016240714467130601, 0.9774010181427002 );
    result.normals.emplace_back( -0.28801411390304565, 0.0036410766188055277, 0.95761919021606445 );
    result.normals.emplace_back( -0.081462301313877106, -0.0035550317261368036, 0.99667006731033325 );
    result.normals.emplace_back( 0.11039405316114426, 0.004112394992262125, 0.99387943744659424 );
    result.normals.emplace_back( 0.23810882866382599, 0.0010681237326934934, 0.9712378978729248 );
    result.normals.emplace_back( -0.19326440989971161, -0.0014422638341784477, 0.98114567995071411 );
    result.normals.emplace_back( 0.029412278905510902, -0.0036979615688323975, 0.99956047534942627 );
    result.normals.emplace_back( 0.14735746383666992, 0.001081393682397902, 0.98908275365829468 );
    result.normals.emplace_back( -0.05565667524933815, -0.00097273662686347961, 0.99844950437545776 );
    result.normals.emplace_back( 0.38453084230422974, -0.001551544526591897, 0.92311078310012817 );
    result.normals.emplace_back( 0.28335726261138916, 0.011286831460893154, 0.95894801616668701 );
    result.normals.emplace_back( 0.49128207564353943, 0.022569524124264717, 0.87070804834365845 );
    result.normals.emplace_back( 0.54794490337371826, -0.0063025555573403835, 0.8364906907081604 );
    result.normals.emplace_back( 0.64423161745071411, 0.027475973591208458, 0.76433676481246948 );
    result.normals.emplace_back( 0.80689829587936401, 0.0082441214472055435, 0.59063297510147095 );
    result.normals.emplace_back( 0.61808490753173828, -0.0036763339303433895, 0.7861027717590332 );
    result.normals.emplace_back( 0.50515371561050415, -0.0018789966125041246, 0.86302727460861206 );
    result.normals.emplace_back( 0.47774973511695862, 8.2119608123321086e-05, 0.87849605083465576 );
    result.normals.emplace_back( 0.33348390460014343, 0.0029376449529081583, 0.94275116920471191 );
    result.normals.emplace_back( 0.619343101978302, 0.0047564166598021984, 0.78510606288909912 );
    result.normals.emplace_back( 0.83077532052993774, 0.036385573446750641, 0.55541747808456421 );
    result.normals.emplace_back( 0.66402673721313477, -0.010378465987741947, 0.74763673543930054 );
    result.normals.emplace_back( 0.77695012092590332, -0.01984092965722084, 0.62924957275390625 );
    result.normals.emplace_back( 0.57020306587219238, -0.0059992074966430664, 0.82148182392120361 );
    result.normals.emplace_back( 0.64871591329574585, 0.010559061542153358, 0.76095741987228394 );
    result.normals.emplace_back( 0.47074833512306213, 0.00071397906867787242, 0.88226723670959473 );
    result.normals.emplace_back( -0.24507947266101837, -0.00070586794754490256, 0.96950274705886841 );
    result.normals.emplace_back( -0.099964208900928497, -0.00340078747831285, 0.99498516321182251 );
    result.normals.emplace_back( -0.0047929990105330944, 0.0043839453719556332, 0.99997889995574951 );
    result.normals.emplace_back( 0.13777218759059906, 0.00076105550397187471, 0.99046361446380615 );
    result.normals.emplace_back( 0.05452825129032135, -0.0026415002066642046, 0.99850869178771973 );
    result.normals.emplace_back( 0.25352853536605835, -0.0001759281731210649, 0.96732789278030396 );
    result.normals.emplace_back( 0.093722552061080933, 0.0073153562843799591, 0.99557149410247803 );
    result.normals.emplace_back( 0.34500774741172791, -0.0035448377020657063, 0.93859320878982544 );
    result.normals.emplace_back( 0.41443789005279541, -0.00076800922397524118, 0.91007727384567261 );
    result.normals.emplace_back( 0.83451652526855469, -0.0084970565512776375, 0.55091744661331177 );
    result.normals.emplace_back( 0.80196493864059448, -0.00017283388297073543, 0.59737104177474976 );
    result.normals.emplace_back( 0.83285868167877197, 0.008732927031815052, 0.553416907787323 );
    result.normals.emplace_back( 0.80240577459335327, -0.011172814294695854, 0.59667432308197021 );
    result.normals.emplace_back( 0.67333042621612549, -0.0016833816189318895, 0.73933970928192139 );
    result.normals.emplace_back( 0.82987344264984131, -0.0093982024118304253, 0.55787253379821777 );
    result.normals.emplace_back( 0.78853261470794678, -6.2510965292972287e-09, 0.61499291658401489 );
    result.normals.emplace_back( 0.48024582862854004, -0.004690142348408699, 0.87712138891220093 );
    result.normals.emplace_back( 0.32651624083518982, -0.008302886039018631, 0.94515514373779297 );
    result.normals.emplace_back( -0.8162539005279541, -0.0025971406139433384, 0.57768744230270386 );
    result.normals.emplace_back( -0.83574062585830688, 0.011305803433060646, 0.54900813102722168 );
    result.normals.emplace_back( -0.80459970235824585, 0.0050570382736623287, 0.59379607439041138 );
    result.normals.emplace_back( -0.76531612873077393, 0.0024394455831497908, 0.6436498761177063 );
    result.normals.emplace_back( -0.84053611755371094, 0, 0.54175549745559692 );
    result.normals.emplace_back( -0.78399819135665894, 0.006703314371407032, 0.62072688341140747 );
    result.normals.emplace_back( 0.33112159371376038, 0.00035720350570045412, 0.94358795881271362 );
    result.normals.emplace_back( -0.0012392101343721151, 0.0020705605857074261, 0.99999701976776123 );
    result.normals.emplace_back( -0.79611003398895264, 0.00056059297639876604, 0.60515165328979492 );
    result.normals.emplace_back( 0.30944743752479553, 0.0073781856335699558, 0.95088791847229004 );
    result.normals.emplace_back( 0.10473451018333435, -0.005957460030913353, 0.99448239803314209 );
    result.normals.emplace_back( 0.3175835907459259, -0.005331976804882288, 0.94821536540985107 );
    result.normals.emplace_back( 0.69823306798934937, 0.00078839145135134459, 0.71587008237838745 );
    result.normals.emplace_back( 0.79039275646209717, -0.0088090682402253151, 0.61253708600997925 );
    result.normals.emplace_back( 0.43062511086463928, 0.0012534470297396183, 0.9025300145149231 );
    
    
    result.face_positions.emplace_back( 146, 5, 218 );
    result.face_positions.emplace_back( 192, 89, 48 );
    result.face_positions.emplace_back( 121, 120, 30 );
    result.face_positions.emplace_back( 171, 23, 144 );
    result.face_positions.emplace_back( 4, 115, 54 );
    result.face_positions.emplace_back( 64, 213, 157 );
    result.face_positions.emplace_back( 210, 108, 18 );
    result.face_positions.emplace_back( 38, 137, 139 );
    result.face_positions.emplace_back( 82, 185, 187 );
    result.face_positions.emplace_back( 201, 207, 24 );
    result.face_positions.emplace_back( 178, 78, 31 );
    result.face_positions.emplace_back( 143, 55, 151 );
    result.face_positions.emplace_back( 68, 168, 47 );
    result.face_positions.emplace_back( 127, 179, 80 );
    result.face_positions.emplace_back( 119, 28, 13 );
    result.face_positions.emplace_back( 34, 130, 128 );
    result.face_positions.emplace_back( 36, 137, 131 );
    result.face_positions.emplace_back( 204, 28, 94 );
    result.face_positions.emplace_back( 27, 104, 209 );
    result.face_positions.emplace_back( 105, 55, 107 );
    result.face_positions.emplace_back( 49, 135, 163 );
    result.face_positions.emplace_back( 36, 131, 133 );
    result.face_positions.emplace_back( 71, 171, 46 );
    result.face_positions.emplace_back( 196, 90, 195 );
    result.face_positions.emplace_back( 105, 151, 55 );
    result.face_positions.emplace_back( 9, 151, 105 );
    result.face_positions.emplace_back( 80, 179, 181 );
    result.face_positions.emplace_back( 221, 76, 175 );
    result.face_positions.emplace_back( 219, 77, 224 );
    result.face_positions.emplace_back( 147, 143, 45 );
    result.face_positions.emplace_back( 140, 217, 39 );
    result.face_positions.emplace_back( 31, 125, 103 );
    result.face_positions.emplace_back( 205, 94, 29 );
    result.face_positions.emplace_back( 25, 202, 201 );
    result.face_positions.emplace_back( 206, 24, 207 );
    result.face_positions.emplace_back( 175, 76, 178 );
    result.face_positions.emplace_back( 12, 104, 103 );
    result.face_positions.emplace_back( 221, 177, 76 );
    result.face_positions.emplace_back( 29, 119, 120 );
    result.face_positions.emplace_back( 97, 207, 12 );
    result.face_positions.emplace_back( 129, 7, 133 );
    result.face_positions.emplace_back( 130, 132, 30 );
    result.face_positions.emplace_back( 8, 26, 124 );
    result.face_positions.emplace_back( 90, 91, 92 );
    result.face_positions.emplace_back( 82, 186, 11 );
    result.face_positions.emplace_back( 137, 134, 35 );
    result.face_positions.emplace_back( 120, 13, 216 );
    result.face_positions.emplace_back( 132, 130, 14 );
    result.face_positions.emplace_back( 138, 41, 116 );
    result.face_positions.emplace_back( 130, 131, 14 );
    result.face_positions.emplace_back( 135, 49, 134 );
    result.face_positions.emplace_back( 134, 137, 36 );
    result.face_positions.emplace_back( 139, 41, 138 );
    result.face_positions.emplace_back( 136, 37, 134 );
    result.face_positions.emplace_back( 101, 44, 140 );
    result.face_positions.emplace_back( 74, 98, 217 );
    result.face_positions.emplace_back( 101, 38, 40 );
    result.face_positions.emplace_back( 40, 138, 44 );
    result.face_positions.emplace_back( 38, 101, 100 );
    result.face_positions.emplace_back( 139, 35, 145 );
    result.face_positions.emplace_back( 15, 114, 213 );
    result.face_positions.emplace_back( 148, 149, 17 );
    result.face_positions.emplace_back( 116, 115, 4 );
    result.face_positions.emplace_back( 116, 50, 157 );
    result.face_positions.emplace_back( 66, 65, 162 );
    result.face_positions.emplace_back( 147, 142, 54 );
    result.face_positions.emplace_back( 44, 141, 140 );
    result.face_positions.emplace_back( 141, 45, 144 );
    result.face_positions.emplace_back( 45, 141, 142 );
    result.face_positions.emplace_back( 9, 167, 71 );
    result.face_positions.emplace_back( 141, 144, 23 );
    result.face_positions.emplace_back( 106, 167, 9 );
    result.face_positions.emplace_back( 74, 172, 173 );
    result.face_positions.emplace_back( 67, 106, 111 );
    result.face_positions.emplace_back( 88, 196, 168 );
    result.face_positions.emplace_back( 49, 35, 134 );
    result.face_positions.emplace_back( 51, 65, 66 );
    result.face_positions.emplace_back( 159, 1, 160 );
    result.face_positions.emplace_back( 145, 50, 116 );
    result.face_positions.emplace_back( 148, 147, 54 );
    result.face_positions.emplace_back( 161, 160, 43 );
    result.face_positions.emplace_back( 114, 113, 42 );
    result.face_positions.emplace_back( 113, 114, 215 );
    result.face_positions.emplace_back( 54, 115, 113 );
    result.face_positions.emplace_back( 148, 54, 113 );
    result.face_positions.emplace_back( 149, 63, 156 );
    result.face_positions.emplace_back( 150, 63, 149 );
    result.face_positions.emplace_back( 212, 59, 110 );
    result.face_positions.emplace_back( 106, 67, 167 );
    result.face_positions.emplace_back( 109, 210, 58 );
    result.face_positions.emplace_back( 55, 143, 156 );
    result.face_positions.emplace_back( 19, 152, 59 );
    result.face_positions.emplace_back( 155, 109, 110 );
    result.face_positions.emplace_back( 152, 153, 60 );
    result.face_positions.emplace_back( 109, 56, 108 );
    result.face_positions.emplace_back( 194, 89, 193 );
    result.face_positions.emplace_back( 111, 165, 67 );
    result.face_positions.emplace_back( 18, 108, 117 );
    result.face_positions.emplace_back( 154, 61, 153 );
    result.face_positions.emplace_back( 213, 158, 15 );
    result.face_positions.emplace_back( 161, 65, 160 );
    result.face_positions.emplace_back( 65, 161, 162 );
    result.face_positions.emplace_back( 50, 145, 163 );
    result.face_positions.emplace_back( 164, 51, 66 );
    result.face_positions.emplace_back( 167, 166, 68 );
    result.face_positions.emplace_back( 9, 105, 106 );
    result.face_positions.emplace_back( 68, 166, 168 );
    result.face_positions.emplace_back( 68, 47, 71 );
    result.face_positions.emplace_back( 198, 70, 91 );
    result.face_positions.emplace_back( 195, 169, 69 );
    result.face_positions.emplace_back( 197, 92, 87 );
    result.face_positions.emplace_back( 200, 191, 87 );
    result.face_positions.emplace_back( 71, 47, 72 );
    result.face_positions.emplace_back( 151, 71, 46 );
    result.face_positions.emplace_back( 172, 72, 47 );
    result.face_positions.emplace_back( 172, 74, 174 );
    result.face_positions.emplace_back( 69, 169, 47 );
    result.face_positions.emplace_back( 73, 170, 219 );
    result.face_positions.emplace_back( 74, 10, 98 );
    result.face_positions.emplace_back( 23, 72, 174 );
    result.face_positions.emplace_back( 221, 173, 73 );
    result.face_positions.emplace_back( 169, 21, 170 );
    result.face_positions.emplace_back( 76, 177, 78 );
    result.face_positions.emplace_back( 178, 76, 78 );
    result.face_positions.emplace_back( 184, 87, 183 );
    result.face_positions.emplace_back( 183, 81, 182 );
    result.face_positions.emplace_back( 79, 127, 80 );
    result.face_positions.emplace_back( 78, 127, 126 );
    result.face_positions.emplace_back( 81, 185, 222 );
    result.face_positions.emplace_back( 127, 8, 126 );
    result.face_positions.emplace_back( 11, 79, 180 );
    result.face_positions.emplace_back( 81, 181, 182 );
    result.face_positions.emplace_back( 222, 185, 82 );
    result.face_positions.emplace_back( 188, 190, 84 );
    result.face_positions.emplace_back( 82, 11, 180 );
    result.face_positions.emplace_back( 85, 188, 83 );
    result.face_positions.emplace_back( 186, 223, 83 );
    result.face_positions.emplace_back( 85, 190, 188 );
    result.face_positions.emplace_back( 85, 187, 86 );
    result.face_positions.emplace_back( 86, 32, 191 );
    result.face_positions.emplace_back( 190, 189, 84 );
    result.face_positions.emplace_back( 185, 183, 32 );
    result.face_positions.emplace_back( 197, 195, 90 );
    result.face_positions.emplace_back( 89, 88, 48 );
    result.face_positions.emplace_back( 90, 196, 91 );
    result.face_positions.emplace_back( 48, 165, 192 );
    result.face_positions.emplace_back( 194, 193, 6 );
    result.face_positions.emplace_back( 197, 90, 92 );
    result.face_positions.emplace_back( 91, 88, 194 );
    result.face_positions.emplace_back( 91, 70, 92 );
    result.face_positions.emplace_back( 20, 200, 199 );
    result.face_positions.emplace_back( 86, 200, 20 );
    result.face_positions.emplace_back( 205, 202, 94 );
    result.face_positions.emplace_back( 93, 205, 123 );
    result.face_positions.emplace_back( 204, 203, 2 );
    result.face_positions.emplace_back( 94, 28, 119 );
    result.face_positions.emplace_back( 209, 132, 102 );
    result.face_positions.emplace_back( 208, 121, 95 );
    result.face_positions.emplace_back( 98, 99, 39 );
    result.face_positions.emplace_back( 96, 98, 176 );
    result.face_positions.emplace_back( 103, 97, 12 );
    result.face_positions.emplace_back( 97, 103, 125 );
    result.face_positions.emplace_back( 176, 98, 10 );
    result.face_positions.emplace_back( 99, 98, 96 );
    result.face_positions.emplace_back( 96, 102, 99 );
    result.face_positions.emplace_back( 100, 14, 38 );
    result.face_positions.emplace_back( 39, 99, 100 );
    result.face_positions.emplace_back( 100, 99, 102 );
    result.face_positions.emplace_back( 44, 101, 40 );
    result.face_positions.emplace_back( 39, 100, 101 );
    result.face_positions.emplace_back( 102, 96, 209 );
    result.face_positions.emplace_back( 100, 102, 14 );
    result.face_positions.emplace_back( 104, 12, 208 );
    result.face_positions.emplace_back( 103, 27, 178 );
    result.face_positions.emplace_back( 209, 104, 95 );
    result.face_positions.emplace_back( 27, 103, 104 );
    result.face_positions.emplace_back( 55, 156, 107 );
    result.face_positions.emplace_back( 105, 56, 106 );
    result.face_positions.emplace_back( 56, 112, 106 );
    result.face_positions.emplace_back( 111, 61, 165 );
    result.face_positions.emplace_back( 117, 118, 57 );
    result.face_positions.emplace_back( 56, 105, 107 );
    result.face_positions.emplace_back( 56, 107, 108 );
    result.face_positions.emplace_back( 107, 63, 118 );
    result.face_positions.emplace_back( 110, 109, 58 );
    result.face_positions.emplace_back( 112, 109, 60 );
    result.face_positions.emplace_back( 212, 211, 0 );
    result.face_positions.emplace_back( 59, 152, 155 );
    result.face_positions.emplace_back( 112, 111, 106 );
    result.face_positions.emplace_back( 153, 111, 60 );
    result.face_positions.emplace_back( 109, 112, 56 );
    result.face_positions.emplace_back( 111, 112, 60 );
    result.face_positions.emplace_back( 213, 114, 42 );
    result.face_positions.emplace_back( 148, 113, 53 );
    result.face_positions.emplace_back( 214, 52, 114 );
    result.face_positions.emplace_back( 215, 114, 52 );
    result.face_positions.emplace_back( 4, 138, 116 );
    result.face_positions.emplace_back( 42, 113, 115 );
    result.face_positions.emplace_back( 116, 41, 145 );
    result.face_positions.emplace_back( 42, 115, 116 );
    result.face_positions.emplace_back( 117, 108, 118 );
    result.face_positions.emplace_back( 118, 63, 150 );
    result.face_positions.emplace_back( 107, 118, 108 );
    result.face_positions.emplace_back( 120, 119, 13 );
    result.face_positions.emplace_back( 94, 119, 29 );
    result.face_positions.emplace_back( 33, 128, 216 );
    result.face_positions.emplace_back( 30, 132, 121 );
    result.face_positions.emplace_back( 208, 123, 121 );
    result.face_positions.emplace_back( 29, 120, 121 );
    result.face_positions.emplace_back( 93, 123, 12 );
    result.face_positions.emplace_back( 13, 122, 216 );
    result.face_positions.emplace_back( 29, 121, 123 );
    result.face_positions.emplace_back( 26, 206, 125 );
    result.face_positions.emplace_back( 126, 31, 78 );
    result.face_positions.emplace_back( 31, 124, 125 );
    result.face_positions.emplace_back( 26, 125, 124 );
    result.face_positions.emplace_back( 8, 124, 126 );
    result.face_positions.emplace_back( 31, 126, 124 );
    result.face_positions.emplace_back( 127, 78, 179 );
    result.face_positions.emplace_back( 8, 127, 79 );
    result.face_positions.emplace_back( 30, 120, 216 );
    result.face_positions.emplace_back( 129, 128, 33 );
    result.face_positions.emplace_back( 128, 130, 30 );
    result.face_positions.emplace_back( 128, 129, 34 );
    result.face_positions.emplace_back( 131, 130, 34 );
    result.face_positions.emplace_back( 131, 34, 133 );
    result.face_positions.emplace_back( 14, 131, 38 );
    result.face_positions.emplace_back( 102, 132, 14 );
    result.face_positions.emplace_back( 132, 95, 121 );
    result.face_positions.emplace_back( 129, 133, 34 );
    result.face_positions.emplace_back( 136, 133, 7 );
    result.face_positions.emplace_back( 136, 134, 36 );
    result.face_positions.emplace_back( 134, 37, 135 );
    result.face_positions.emplace_back( 37, 16, 135 );
    result.face_positions.emplace_back( 163, 135, 16 );
    result.face_positions.emplace_back( 137, 35, 139 );
    result.face_positions.emplace_back( 133, 136, 36 );
    result.face_positions.emplace_back( 131, 137, 38 );
    result.face_positions.emplace_back( 44, 138, 4 );
    result.face_positions.emplace_back( 139, 138, 40 );
    result.face_positions.emplace_back( 139, 40, 38 );
    result.face_positions.emplace_back( 145, 35, 49 );
    result.face_positions.emplace_back( 140, 23, 174 );
    result.face_positions.emplace_back( 101, 140, 39 );
    result.face_positions.emplace_back( 140, 141, 23 );
    result.face_positions.emplace_back( 142, 141, 44 );
    result.face_positions.emplace_back( 44, 4, 142 );
    result.face_positions.emplace_back( 54, 142, 4 );
    result.face_positions.emplace_back( 143, 17, 156 );
    result.face_positions.emplace_back( 144, 143, 46 );
    result.face_positions.emplace_back( 143, 144, 45 );
    result.face_positions.emplace_back( 144, 46, 171 );
    result.face_positions.emplace_back( 139, 145, 41 );
    result.face_positions.emplace_back( 145, 49, 163 );
    result.face_positions.emplace_back( 143, 147, 17 );
    result.face_positions.emplace_back( 146, 218, 215 );
    result.face_positions.emplace_back( 142, 147, 45 );
    result.face_positions.emplace_back( 148, 53, 149 );
    result.face_positions.emplace_back( 147, 148, 17 );
    result.face_positions.emplace_back( 53, 218, 149 );
    result.face_positions.emplace_back( 150, 57, 118 );
    result.face_positions.emplace_back( 218, 150, 149 );
    result.face_positions.emplace_back( 5, 57, 150 );
    result.face_positions.emplace_back( 71, 151, 9 );
    result.face_positions.emplace_back( 143, 151, 46 );
    result.face_positions.emplace_back( 153, 152, 19 );
    result.face_positions.emplace_back( 155, 152, 60 );
    result.face_positions.emplace_back( 154, 62, 192 );
    result.face_positions.emplace_back( 153, 61, 111 );
    result.face_positions.emplace_back( 109, 155, 60 );
    result.face_positions.emplace_back( 153, 19, 154 );
    result.face_positions.emplace_back( 59, 155, 110 );
    result.face_positions.emplace_back( 149, 156, 17 );
    result.face_positions.emplace_back( 107, 156, 63 );
    result.face_positions.emplace_back( 116, 157, 42 );
    result.face_positions.emplace_back( 162, 157, 50 );
    result.face_positions.emplace_back( 158, 161, 43 );
    result.face_positions.emplace_back( 161, 158, 64 );
    result.face_positions.emplace_back( 65, 51, 159 );
    result.face_positions.emplace_back( 159, 160, 65 );
    result.face_positions.emplace_back( 162, 161, 64 );
    result.face_positions.emplace_back( 157, 162, 64 );
    result.face_positions.emplace_back( 66, 162, 50 );
    result.face_positions.emplace_back( 164, 163, 16 );
    result.face_positions.emplace_back( 163, 66, 50 );
    result.face_positions.emplace_back( 165, 61, 192 );
    result.face_positions.emplace_back( 163, 164, 66 );
    result.face_positions.emplace_back( 166, 165, 48 );
    result.face_positions.emplace_back( 165, 166, 67 );
    result.face_positions.emplace_back( 168, 166, 48 );
    result.face_positions.emplace_back( 166, 167, 67 );
    result.face_positions.emplace_back( 71, 167, 68 );
    result.face_positions.emplace_back( 88, 168, 48 );
    result.face_positions.emplace_back( 47, 168, 69 );
    result.face_positions.emplace_back( 21, 184, 170 );
    result.face_positions.emplace_back( 220, 172, 47 );
    result.face_positions.emplace_back( 219, 170, 77 );
    result.face_positions.emplace_back( 73, 220, 170 );
    result.face_positions.emplace_back( 71, 72, 171 );
    result.face_positions.emplace_back( 171, 72, 23 );
    result.face_positions.emplace_back( 220, 47, 169 );
    result.face_positions.emplace_back( 172, 73, 173 );
    result.face_positions.emplace_back( 221, 73, 75 );
    result.face_positions.emplace_back( 10, 74, 173 );
    result.face_positions.emplace_back( 172, 174, 72 );
    result.face_positions.emplace_back( 174, 74, 217 );
    result.face_positions.emplace_back( 176, 27, 96 );
    result.face_positions.emplace_back( 221, 175, 10 );
    result.face_positions.emplace_back( 10, 175, 176 );
    result.face_positions.emplace_back( 27, 176, 175 );
    result.face_positions.emplace_back( 75, 219, 224 );
    result.face_positions.emplace_back( 177, 22, 179 );
    result.face_positions.emplace_back( 103, 178, 31 );
    result.face_positions.emplace_back( 175, 178, 27 );
    result.face_positions.emplace_back( 177, 179, 78 );
    result.face_positions.emplace_back( 181, 179, 22 );
    result.face_positions.emplace_back( 79, 80, 180 );
    result.face_positions.emplace_back( 181, 222, 80 );
    result.face_positions.emplace_back( 182, 181, 22 );
    result.face_positions.emplace_back( 222, 181, 81 );
    result.face_positions.emplace_back( 224, 22, 177 );
    result.face_positions.emplace_back( 182, 77, 183 );
    result.face_positions.emplace_back( 184, 183, 77 );
    result.face_positions.emplace_back( 191, 183, 87 );
    result.face_positions.emplace_back( 170, 184, 77 );
    result.face_positions.emplace_back( 184, 21, 197 );
    result.face_positions.emplace_back( 183, 185, 81 );
    result.face_positions.emplace_back( 187, 185, 32 );
    result.face_positions.emplace_back( 86, 187, 32 );
    result.face_positions.emplace_back( 223, 186, 82 );
    result.face_positions.emplace_back( 223, 187, 85 );
    result.face_positions.emplace_back( 84, 3, 188 );
    result.face_positions.emplace_back( 83, 188, 3 );
    result.face_positions.emplace_back( 85, 86, 190 );
    result.face_positions.emplace_back( 86, 20, 189 );
    result.face_positions.emplace_back( 189, 190, 86 );
    result.face_positions.emplace_back( 183, 191, 32 );
    result.face_positions.emplace_back( 200, 87, 92 );
    result.face_positions.emplace_back( 154, 192, 61 );
    result.face_positions.emplace_back( 62, 89, 192 );
    result.face_positions.emplace_back( 194, 6, 198 );
    result.face_positions.emplace_back( 89, 62, 193 );
    result.face_positions.emplace_back( 88, 89, 194 );
    result.face_positions.emplace_back( 169, 195, 21 );
    result.face_positions.emplace_back( 196, 195, 69 );
    result.face_positions.emplace_back( 168, 196, 69 );
    result.face_positions.emplace_back( 91, 196, 88 );
    result.face_positions.emplace_back( 184, 197, 87 );
    result.face_positions.emplace_back( 195, 197, 21 );
    result.face_positions.emplace_back( 191, 200, 86 );
    result.face_positions.emplace_back( 194, 198, 91 );
    result.face_positions.emplace_back( 92, 70, 199 );
    result.face_positions.emplace_back( 199, 200, 92 );
    result.face_positions.emplace_back( 201, 202, 93 );
    result.face_positions.emplace_back( 207, 201, 93 );
    result.face_positions.emplace_back( 203, 202, 25 );
    result.face_positions.emplace_back( 123, 205, 29 );
    result.face_positions.emplace_back( 202, 203, 94 );
    result.face_positions.emplace_back( 203, 204, 94 );
    result.face_positions.emplace_back( 202, 205, 93 );
    result.face_positions.emplace_back( 12, 207, 93 );
    result.face_positions.emplace_back( 125, 206, 97 );
    result.face_positions.emplace_back( 206, 207, 97 );
    result.face_positions.emplace_back( 123, 208, 12 );
    result.face_positions.emplace_back( 95, 104, 208 );
    result.face_positions.emplace_back( 209, 95, 132 );
    result.face_positions.emplace_back( 27, 209, 96 );
    result.face_positions.emplace_back( 58, 210, 18 );
    result.face_positions.emplace_back( 109, 108, 210 );
    result.face_positions.emplace_back( 157, 213, 42 );
    result.face_positions.emplace_back( 110, 58, 211 );
    result.face_positions.emplace_back( 211, 212, 110 );
    result.face_positions.emplace_back( 213, 64, 158 );
    result.face_positions.emplace_back( 146, 215, 52 );
    result.face_positions.emplace_back( 114, 15, 214 );
    result.face_positions.emplace_back( 113, 215, 53 );
    result.face_positions.emplace_back( 33, 216, 122 );
    result.face_positions.emplace_back( 30, 216, 128 );
    result.face_positions.emplace_back( 39, 217, 98 );
    result.face_positions.emplace_back( 174, 217, 140 );
    result.face_positions.emplace_back( 218, 53, 215 );
    result.face_positions.emplace_back( 150, 218, 5 );
    result.face_positions.emplace_back( 77, 182, 224 );
    result.face_positions.emplace_back( 73, 219, 75 );
    result.face_positions.emplace_back( 172, 220, 73 );
    result.face_positions.emplace_back( 169, 170, 220 );
    result.face_positions.emplace_back( 173, 221, 10 );
    result.face_positions.emplace_back( 177, 221, 75 );
    result.face_positions.emplace_back( 82, 180, 222 );
    result.face_positions.emplace_back( 80, 222, 180 );
    result.face_positions.emplace_back( 187, 223, 82 );
    result.face_positions.emplace_back( 83, 223, 85 );
    result.face_positions.emplace_back( 22, 224, 182 );
    result.face_positions.emplace_back( 75, 224, 177 );
    
    result.face_normals.emplace_back( 146, 5, 218 );
    result.face_normals.emplace_back( 192, 89, 48 );
    result.face_normals.emplace_back( 121, 120, 30 );
    result.face_normals.emplace_back( 171, 23, 144 );
    result.face_normals.emplace_back( 4, 115, 54 );
    result.face_normals.emplace_back( 64, 213, 157 );
    result.face_normals.emplace_back( 210, 108, 18 );
    result.face_normals.emplace_back( 38, 137, 139 );
    result.face_normals.emplace_back( 82, 185, 187 );
    result.face_normals.emplace_back( 201, 207, 24 );
    result.face_normals.emplace_back( 178, 78, 31 );
    result.face_normals.emplace_back( 143, 55, 151 );
    result.face_normals.emplace_back( 68, 168, 47 );
    result.face_normals.emplace_back( 127, 179, 80 );
    result.face_normals.emplace_back( 119, 28, 13 );
    result.face_normals.emplace_back( 34, 130, 128 );
    result.face_normals.emplace_back( 36, 137, 131 );
    result.face_normals.emplace_back( 204, 28, 94 );
    result.face_normals.emplace_back( 27, 104, 209 );
    result.face_normals.emplace_back( 105, 55, 107 );
    result.face_normals.emplace_back( 49, 135, 163 );
    result.face_normals.emplace_back( 36, 131, 133 );
    result.face_normals.emplace_back( 71, 171, 46 );
    result.face_normals.emplace_back( 196, 90, 195 );
    result.face_normals.emplace_back( 105, 151, 55 );
    result.face_normals.emplace_back( 9, 151, 105 );
    result.face_normals.emplace_back( 80, 179, 181 );
    result.face_normals.emplace_back( 221, 76, 175 );
    result.face_normals.emplace_back( 219, 77, 224 );
    result.face_normals.emplace_back( 147, 143, 45 );
    result.face_normals.emplace_back( 140, 217, 39 );
    result.face_normals.emplace_back( 31, 125, 103 );
    result.face_normals.emplace_back( 205, 94, 29 );
    result.face_normals.emplace_back( 25, 202, 201 );
    result.face_normals.emplace_back( 206, 24, 207 );
    result.face_normals.emplace_back( 175, 76, 178 );
    result.face_normals.emplace_back( 12, 104, 103 );
    result.face_normals.emplace_back( 221, 177, 76 );
    result.face_normals.emplace_back( 29, 119, 120 );
    result.face_normals.emplace_back( 97, 207, 12 );
    result.face_normals.emplace_back( 129, 7, 133 );
    result.face_normals.emplace_back( 130, 132, 30 );
    result.face_normals.emplace_back( 8, 26, 124 );
    result.face_normals.emplace_back( 90, 91, 92 );
    result.face_normals.emplace_back( 82, 186, 11 );
    result.face_normals.emplace_back( 137, 134, 35 );
    result.face_normals.emplace_back( 120, 13, 216 );
    result.face_normals.emplace_back( 132, 130, 14 );
    result.face_normals.emplace_back( 138, 41, 116 );
    result.face_normals.emplace_back( 130, 131, 14 );
    result.face_normals.emplace_back( 135, 49, 134 );
    result.face_normals.emplace_back( 134, 137, 36 );
    result.face_normals.emplace_back( 139, 41, 138 );
    result.face_normals.emplace_back( 136, 37, 134 );
    result.face_normals.emplace_back( 101, 44, 140 );
    result.face_normals.emplace_back( 74, 98, 217 );
    result.face_normals.emplace_back( 101, 38, 40 );
    result.face_normals.emplace_back( 40, 138, 44 );
    result.face_normals.emplace_back( 38, 101, 100 );
    result.face_normals.emplace_back( 139, 35, 145 );
    result.face_normals.emplace_back( 15, 114, 213 );
    result.face_normals.emplace_back( 148, 149, 17 );
    result.face_normals.emplace_back( 116, 115, 4 );
    result.face_normals.emplace_back( 116, 50, 157 );
    result.face_normals.emplace_back( 66, 65, 162 );
    result.face_normals.emplace_back( 147, 142, 54 );
    result.face_normals.emplace_back( 44, 141, 140 );
    result.face_normals.emplace_back( 141, 45, 144 );
    result.face_normals.emplace_back( 45, 141, 142 );
    result.face_normals.emplace_back( 9, 167, 71 );
    result.face_normals.emplace_back( 141, 144, 23 );
    result.face_normals.emplace_back( 106, 167, 9 );
    result.face_normals.emplace_back( 74, 172, 173 );
    result.face_normals.emplace_back( 67, 106, 111 );
    result.face_normals.emplace_back( 88, 196, 168 );
    result.face_normals.emplace_back( 49, 35, 134 );
    result.face_normals.emplace_back( 51, 65, 66 );
    result.face_normals.emplace_back( 159, 1, 160 );
    result.face_normals.emplace_back( 145, 50, 116 );
    result.face_normals.emplace_back( 148, 147, 54 );
    result.face_normals.emplace_back( 161, 160, 43 );
    result.face_normals.emplace_back( 114, 113, 42 );
    result.face_normals.emplace_back( 113, 114, 215 );
    result.face_normals.emplace_back( 54, 115, 113 );
    result.face_normals.emplace_back( 148, 54, 113 );
    result.face_normals.emplace_back( 149, 63, 156 );
    result.face_normals.emplace_back( 150, 63, 149 );
    result.face_normals.emplace_back( 212, 59, 110 );
    result.face_normals.emplace_back( 106, 67, 167 );
    result.face_normals.emplace_back( 109, 210, 58 );
    result.face_normals.emplace_back( 55, 143, 156 );
    result.face_normals.emplace_back( 19, 152, 59 );
    result.face_normals.emplace_back( 155, 109, 110 );
    result.face_normals.emplace_back( 152, 153, 60 );
    result.face_normals.emplace_back( 109, 56, 108 );
    result.face_normals.emplace_back( 194, 89, 193 );
    result.face_normals.emplace_back( 111, 165, 67 );
    result.face_normals.emplace_back( 18, 108, 117 );
    result.face_normals.emplace_back( 154, 61, 153 );
    result.face_normals.emplace_back( 213, 158, 15 );
    result.face_normals.emplace_back( 161, 65, 160 );
    result.face_normals.emplace_back( 65, 161, 162 );
    result.face_normals.emplace_back( 50, 145, 163 );
    result.face_normals.emplace_back( 164, 51, 66 );
    result.face_normals.emplace_back( 167, 166, 68 );
    result.face_normals.emplace_back( 9, 105, 106 );
    result.face_normals.emplace_back( 68, 166, 168 );
    result.face_normals.emplace_back( 68, 47, 71 );
    result.face_normals.emplace_back( 198, 70, 91 );
    result.face_normals.emplace_back( 195, 169, 69 );
    result.face_normals.emplace_back( 197, 92, 87 );
    result.face_normals.emplace_back( 200, 191, 87 );
    result.face_normals.emplace_back( 71, 47, 72 );
    result.face_normals.emplace_back( 151, 71, 46 );
    result.face_normals.emplace_back( 172, 72, 47 );
    result.face_normals.emplace_back( 172, 74, 174 );
    result.face_normals.emplace_back( 69, 169, 47 );
    result.face_normals.emplace_back( 73, 170, 219 );
    result.face_normals.emplace_back( 74, 10, 98 );
    result.face_normals.emplace_back( 23, 72, 174 );
    result.face_normals.emplace_back( 221, 173, 73 );
    result.face_normals.emplace_back( 169, 21, 170 );
    result.face_normals.emplace_back( 76, 177, 78 );
    result.face_normals.emplace_back( 178, 76, 78 );
    result.face_normals.emplace_back( 184, 87, 183 );
    result.face_normals.emplace_back( 183, 81, 182 );
    result.face_normals.emplace_back( 79, 127, 80 );
    result.face_normals.emplace_back( 78, 127, 126 );
    result.face_normals.emplace_back( 81, 185, 222 );
    result.face_normals.emplace_back( 127, 8, 126 );
    result.face_normals.emplace_back( 11, 79, 180 );
    result.face_normals.emplace_back( 81, 181, 182 );
    result.face_normals.emplace_back( 222, 185, 82 );
    result.face_normals.emplace_back( 188, 190, 84 );
    result.face_normals.emplace_back( 82, 11, 180 );
    result.face_normals.emplace_back( 85, 188, 83 );
    result.face_normals.emplace_back( 186, 223, 83 );
    result.face_normals.emplace_back( 85, 190, 188 );
    result.face_normals.emplace_back( 85, 187, 86 );
    result.face_normals.emplace_back( 86, 32, 191 );
    result.face_normals.emplace_back( 190, 189, 84 );
    result.face_normals.emplace_back( 185, 183, 32 );
    result.face_normals.emplace_back( 197, 195, 90 );
    result.face_normals.emplace_back( 89, 88, 48 );
    result.face_normals.emplace_back( 90, 196, 91 );
    result.face_normals.emplace_back( 48, 165, 192 );
    result.face_normals.emplace_back( 194, 193, 6 );
    result.face_normals.emplace_back( 197, 90, 92 );
    result.face_normals.emplace_back( 91, 88, 194 );
    result.face_normals.emplace_back( 91, 70, 92 );
    result.face_normals.emplace_back( 20, 200, 199 );
    result.face_normals.emplace_back( 86, 200, 20 );
    result.face_normals.emplace_back( 205, 202, 94 );
    result.face_normals.emplace_back( 93, 205, 123 );
    result.face_normals.emplace_back( 204, 203, 2 );
    result.face_normals.emplace_back( 94, 28, 119 );
    result.face_normals.emplace_back( 209, 132, 102 );
    result.face_normals.emplace_back( 208, 121, 95 );
    result.face_normals.emplace_back( 98, 99, 39 );
    result.face_normals.emplace_back( 96, 98, 176 );
    result.face_normals.emplace_back( 103, 97, 12 );
    result.face_normals.emplace_back( 97, 103, 125 );
    result.face_normals.emplace_back( 176, 98, 10 );
    result.face_normals.emplace_back( 99, 98, 96 );
    result.face_normals.emplace_back( 96, 102, 99 );
    result.face_normals.emplace_back( 100, 14, 38 );
    result.face_normals.emplace_back( 39, 99, 100 );
    result.face_normals.emplace_back( 100, 99, 102 );
    result.face_normals.emplace_back( 44, 101, 40 );
    result.face_normals.emplace_back( 39, 100, 101 );
    result.face_normals.emplace_back( 102, 96, 209 );
    result.face_normals.emplace_back( 100, 102, 14 );
    result.face_normals.emplace_back( 104, 12, 208 );
    result.face_normals.emplace_back( 103, 27, 178 );
    result.face_normals.emplace_back( 209, 104, 95 );
    result.face_normals.emplace_back( 27, 103, 104 );
    result.face_normals.emplace_back( 55, 156, 107 );
    result.face_normals.emplace_back( 105, 56, 106 );
    result.face_normals.emplace_back( 56, 112, 106 );
    result.face_normals.emplace_back( 111, 61, 165 );
    result.face_normals.emplace_back( 117, 118, 57 );
    result.face_normals.emplace_back( 56, 105, 107 );
    result.face_normals.emplace_back( 56, 107, 108 );
    result.face_normals.emplace_back( 107, 63, 118 );
    result.face_normals.emplace_back( 110, 109, 58 );
    result.face_normals.emplace_back( 112, 109, 60 );
    result.face_normals.emplace_back( 212, 211, 0 );
    result.face_normals.emplace_back( 59, 152, 155 );
    result.face_normals.emplace_back( 112, 111, 106 );
    result.face_normals.emplace_back( 153, 111, 60 );
    result.face_normals.emplace_back( 109, 112, 56 );
    result.face_normals.emplace_back( 111, 112, 60 );
    result.face_normals.emplace_back( 213, 114, 42 );
    result.face_normals.emplace_back( 148, 113, 53 );
    result.face_normals.emplace_back( 214, 52, 114 );
    result.face_normals.emplace_back( 215, 114, 52 );
    result.face_normals.emplace_back( 4, 138, 116 );
    result.face_normals.emplace_back( 42, 113, 115 );
    result.face_normals.emplace_back( 116, 41, 145 );
    result.face_normals.emplace_back( 42, 115, 116 );
    result.face_normals.emplace_back( 117, 108, 118 );
    result.face_normals.emplace_back( 118, 63, 150 );
    result.face_normals.emplace_back( 107, 118, 108 );
    result.face_normals.emplace_back( 120, 119, 13 );
    result.face_normals.emplace_back( 94, 119, 29 );
    result.face_normals.emplace_back( 33, 128, 216 );
    result.face_normals.emplace_back( 30, 132, 121 );
    result.face_normals.emplace_back( 208, 123, 121 );
    result.face_normals.emplace_back( 29, 120, 121 );
    result.face_normals.emplace_back( 93, 123, 12 );
    result.face_normals.emplace_back( 13, 122, 216 );
    result.face_normals.emplace_back( 29, 121, 123 );
    result.face_normals.emplace_back( 26, 206, 125 );
    result.face_normals.emplace_back( 126, 31, 78 );
    result.face_normals.emplace_back( 31, 124, 125 );
    result.face_normals.emplace_back( 26, 125, 124 );
    result.face_normals.emplace_back( 8, 124, 126 );
    result.face_normals.emplace_back( 31, 126, 124 );
    result.face_normals.emplace_back( 127, 78, 179 );
    result.face_normals.emplace_back( 8, 127, 79 );
    result.face_normals.emplace_back( 30, 120, 216 );
    result.face_normals.emplace_back( 129, 128, 33 );
    result.face_normals.emplace_back( 128, 130, 30 );
    result.face_normals.emplace_back( 128, 129, 34 );
    result.face_normals.emplace_back( 131, 130, 34 );
    result.face_normals.emplace_back( 131, 34, 133 );
    result.face_normals.emplace_back( 14, 131, 38 );
    result.face_normals.emplace_back( 102, 132, 14 );
    result.face_normals.emplace_back( 132, 95, 121 );
    result.face_normals.emplace_back( 129, 133, 34 );
    result.face_normals.emplace_back( 136, 133, 7 );
    result.face_normals.emplace_back( 136, 134, 36 );
    result.face_normals.emplace_back( 134, 37, 135 );
    result.face_normals.emplace_back( 37, 16, 135 );
    result.face_normals.emplace_back( 163, 135, 16 );
    result.face_normals.emplace_back( 137, 35, 139 );
    result.face_normals.emplace_back( 133, 136, 36 );
    result.face_normals.emplace_back( 131, 137, 38 );
    result.face_normals.emplace_back( 44, 138, 4 );
    result.face_normals.emplace_back( 139, 138, 40 );
    result.face_normals.emplace_back( 139, 40, 38 );
    result.face_normals.emplace_back( 145, 35, 49 );
    result.face_normals.emplace_back( 140, 23, 174 );
    result.face_normals.emplace_back( 101, 140, 39 );
    result.face_normals.emplace_back( 140, 141, 23 );
    result.face_normals.emplace_back( 142, 141, 44 );
    result.face_normals.emplace_back( 44, 4, 142 );
    result.face_normals.emplace_back( 54, 142, 4 );
    result.face_normals.emplace_back( 143, 17, 156 );
    result.face_normals.emplace_back( 144, 143, 46 );
    result.face_normals.emplace_back( 143, 144, 45 );
    result.face_normals.emplace_back( 144, 46, 171 );
    result.face_normals.emplace_back( 139, 145, 41 );
    result.face_normals.emplace_back( 145, 49, 163 );
    result.face_normals.emplace_back( 143, 147, 17 );
    result.face_normals.emplace_back( 146, 218, 215 );
    result.face_normals.emplace_back( 142, 147, 45 );
    result.face_normals.emplace_back( 148, 53, 149 );
    result.face_normals.emplace_back( 147, 148, 17 );
    result.face_normals.emplace_back( 53, 218, 149 );
    result.face_normals.emplace_back( 150, 57, 118 );
    result.face_normals.emplace_back( 218, 150, 149 );
    result.face_normals.emplace_back( 5, 57, 150 );
    result.face_normals.emplace_back( 71, 151, 9 );
    result.face_normals.emplace_back( 143, 151, 46 );
    result.face_normals.emplace_back( 153, 152, 19 );
    result.face_normals.emplace_back( 155, 152, 60 );
    result.face_normals.emplace_back( 154, 62, 192 );
    result.face_normals.emplace_back( 153, 61, 111 );
    result.face_normals.emplace_back( 109, 155, 60 );
    result.face_normals.emplace_back( 153, 19, 154 );
    result.face_normals.emplace_back( 59, 155, 110 );
    result.face_normals.emplace_back( 149, 156, 17 );
    result.face_normals.emplace_back( 107, 156, 63 );
    result.face_normals.emplace_back( 116, 157, 42 );
    result.face_normals.emplace_back( 162, 157, 50 );
    result.face_normals.emplace_back( 158, 161, 43 );
    result.face_normals.emplace_back( 161, 158, 64 );
    result.face_normals.emplace_back( 65, 51, 159 );
    result.face_normals.emplace_back( 159, 160, 65 );
    result.face_normals.emplace_back( 162, 161, 64 );
    result.face_normals.emplace_back( 157, 162, 64 );
    result.face_normals.emplace_back( 66, 162, 50 );
    result.face_normals.emplace_back( 164, 163, 16 );
    result.face_normals.emplace_back( 163, 66, 50 );
    result.face_normals.emplace_back( 165, 61, 192 );
    result.face_normals.emplace_back( 163, 164, 66 );
    result.face_normals.emplace_back( 166, 165, 48 );
    result.face_normals.emplace_back( 165, 166, 67 );
    result.face_normals.emplace_back( 168, 166, 48 );
    result.face_normals.emplace_back( 166, 167, 67 );
    result.face_normals.emplace_back( 71, 167, 68 );
    result.face_normals.emplace_back( 88, 168, 48 );
    result.face_normals.emplace_back( 47, 168, 69 );
    result.face_normals.emplace_back( 21, 184, 170 );
    result.face_normals.emplace_back( 220, 172, 47 );
    result.face_normals.emplace_back( 219, 170, 77 );
    result.face_normals.emplace_back( 73, 220, 170 );
    result.face_normals.emplace_back( 71, 72, 171 );
    result.face_normals.emplace_back( 171, 72, 23 );
    result.face_normals.emplace_back( 220, 47, 169 );
    result.face_normals.emplace_back( 172, 73, 173 );
    result.face_normals.emplace_back( 221, 73, 75 );
    result.face_normals.emplace_back( 10, 74, 173 );
    result.face_normals.emplace_back( 172, 174, 72 );
    result.face_normals.emplace_back( 174, 74, 217 );
    result.face_normals.emplace_back( 176, 27, 96 );
    result.face_normals.emplace_back( 221, 175, 10 );
    result.face_normals.emplace_back( 10, 175, 176 );
    result.face_normals.emplace_back( 27, 176, 175 );
    result.face_normals.emplace_back( 75, 219, 224 );
    result.face_normals.emplace_back( 177, 22, 179 );
    result.face_normals.emplace_back( 103, 178, 31 );
    result.face_normals.emplace_back( 175, 178, 27 );
    result.face_normals.emplace_back( 177, 179, 78 );
    result.face_normals.emplace_back( 181, 179, 22 );
    result.face_normals.emplace_back( 79, 80, 180 );
    result.face_normals.emplace_back( 181, 222, 80 );
    result.face_normals.emplace_back( 182, 181, 22 );
    result.face_normals.emplace_back( 222, 181, 81 );
    result.face_normals.emplace_back( 224, 22, 177 );
    result.face_normals.emplace_back( 182, 77, 183 );
    result.face_normals.emplace_back( 184, 183, 77 );
    result.face_normals.emplace_back( 191, 183, 87 );
    result.face_normals.emplace_back( 170, 184, 77 );
    result.face_normals.emplace_back( 184, 21, 197 );
    result.face_normals.emplace_back( 183, 185, 81 );
    result.face_normals.emplace_back( 187, 185, 32 );
    result.face_normals.emplace_back( 86, 187, 32 );
    result.face_normals.emplace_back( 223, 186, 82 );
    result.face_normals.emplace_back( 223, 187, 85 );
    result.face_normals.emplace_back( 84, 3, 188 );
    result.face_normals.emplace_back( 83, 188, 3 );
    result.face_normals.emplace_back( 85, 86, 190 );
    result.face_normals.emplace_back( 86, 20, 189 );
    result.face_normals.emplace_back( 189, 190, 86 );
    result.face_normals.emplace_back( 183, 191, 32 );
    result.face_normals.emplace_back( 200, 87, 92 );
    result.face_normals.emplace_back( 154, 192, 61 );
    result.face_normals.emplace_back( 62, 89, 192 );
    result.face_normals.emplace_back( 194, 6, 198 );
    result.face_normals.emplace_back( 89, 62, 193 );
    result.face_normals.emplace_back( 88, 89, 194 );
    result.face_normals.emplace_back( 169, 195, 21 );
    result.face_normals.emplace_back( 196, 195, 69 );
    result.face_normals.emplace_back( 168, 196, 69 );
    result.face_normals.emplace_back( 91, 196, 88 );
    result.face_normals.emplace_back( 184, 197, 87 );
    result.face_normals.emplace_back( 195, 197, 21 );
    result.face_normals.emplace_back( 191, 200, 86 );
    result.face_normals.emplace_back( 194, 198, 91 );
    result.face_normals.emplace_back( 92, 70, 199 );
    result.face_normals.emplace_back( 199, 200, 92 );
    result.face_normals.emplace_back( 201, 202, 93 );
    result.face_normals.emplace_back( 207, 201, 93 );
    result.face_normals.emplace_back( 203, 202, 25 );
    result.face_normals.emplace_back( 123, 205, 29 );
    result.face_normals.emplace_back( 202, 203, 94 );
    result.face_normals.emplace_back( 203, 204, 94 );
    result.face_normals.emplace_back( 202, 205, 93 );
    result.face_normals.emplace_back( 12, 207, 93 );
    result.face_normals.emplace_back( 125, 206, 97 );
    result.face_normals.emplace_back( 206, 207, 97 );
    result.face_normals.emplace_back( 123, 208, 12 );
    result.face_normals.emplace_back( 95, 104, 208 );
    result.face_normals.emplace_back( 209, 95, 132 );
    result.face_normals.emplace_back( 27, 209, 96 );
    result.face_normals.emplace_back( 58, 210, 18 );
    result.face_normals.emplace_back( 109, 108, 210 );
    result.face_normals.emplace_back( 157, 213, 42 );
    result.face_normals.emplace_back( 110, 58, 211 );
    result.face_normals.emplace_back( 211, 212, 110 );
    result.face_normals.emplace_back( 213, 64, 158 );
    result.face_normals.emplace_back( 146, 215, 52 );
    result.face_normals.emplace_back( 114, 15, 214 );
    result.face_normals.emplace_back( 113, 215, 53 );
    result.face_normals.emplace_back( 33, 216, 122 );
    result.face_normals.emplace_back( 30, 216, 128 );
    result.face_normals.emplace_back( 39, 217, 98 );
    result.face_normals.emplace_back( 174, 217, 140 );
    result.face_normals.emplace_back( 218, 53, 215 );
    result.face_normals.emplace_back( 150, 218, 5 );
    result.face_normals.emplace_back( 77, 182, 224 );
    result.face_normals.emplace_back( 73, 219, 75 );
    result.face_normals.emplace_back( 172, 220, 73 );
    result.face_normals.emplace_back( 169, 170, 220 );
    result.face_normals.emplace_back( 173, 221, 10 );
    result.face_normals.emplace_back( 177, 221, 75 );
    result.face_normals.emplace_back( 82, 180, 222 );
    result.face_normals.emplace_back( 80, 222, 180 );
    result.face_normals.emplace_back( 187, 223, 82 );
    result.face_normals.emplace_back( 83, 223, 85 );
    result.face_normals.emplace_back( 22, 224, 182 );
    result.face_normals.emplace_back( 75, 224, 177 );
    
    
    return result;
}

#endif